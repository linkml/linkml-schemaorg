BASE <http://schema.org/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dcmitype: <http://purl.org/dc/dcmitype/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX schema: <https://schema.org/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:dateTime

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:Uriorcurie IRI

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<105590001> CLOSED {
    (  $<105590001_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/105590001> ] ?
    )
}

<116154003> CLOSED {
    (  $<116154003_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/116154003> ] ?
    )
}

<277132007> CLOSED {
    (  $<277132007_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/277132007> ] ?
    )
}

<387713003> CLOSED {
    (  $<387713003_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/387713003> ] ?
    )
}

<3DModel> CLOSED {
    (  $<3DModel_tes> (  &<MediaObject_tes> ;
          rdf:type [ <MediaObject> ] ? ;
          <isResizable> @<Boolean> *
       ) ;
       rdf:type [ schema:3DModel ] ?
    )
}

<410942007> CLOSED {
    (  $<410942007_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/410942007> ] ?
    )
}

<50731006> CLOSED {
    (  $<50731006_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/50731006> ] ?
    )
}

<51114001> CLOSED {
    (  $<51114001_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/51114001> ] ?
    )
}

<63653004> CLOSED {
    (  $<63653004_tes> rdf:type . * ;
       rdf:type [ <http://purl.bioontology.org/ontology/SNOMEDCT/63653004> ] ?
    )
}

<Abdomen> CLOSED {
    (  $<Abdomen_tes> rdf:type . * ;
       rdf:type [ <Abdomen> ] ?
    )
}

<AboutPage> CLOSED {
    (  $<AboutPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <AboutPage> ] ?
    )
}

<Abridged> CLOSED {
    (  $<Abridged_tes> rdf:type . * ;
       rdf:type [ <Abridged> ] ?
    )
}

<Abstract> CLOSED {
    (  $<Abstract_tes> rdf:type . * ;
       rdf:type [ <Abstract> ] ?
    )
}

<AccelerationTime> CLOSED {
    (  $<AccelerationTime_tes> rdf:type . * ;
       rdf:type [ <AccelerationTime> ] ?
    )
}

<AcceptAction> CLOSED {
    (  $<AcceptAction_tes> (  &<AllocateAction_tes> ;
          rdf:type [ <AllocateAction> ] ?
       ) ;
       rdf:type [ <AcceptAction> ] ?
    )
}

<AcceptedOffer> CLOSED {
    (  $<AcceptedOffer_tes> rdf:type . * ;
       rdf:type [ <AcceptedOffer> ] ?
    )
}

<AcceptedPaymentMethod> CLOSED {
    (  $<AcceptedPaymentMethod_tes> rdf:type . * ;
       rdf:type [ <AcceptedPaymentMethod> ] ?
    )
}

<AcceptsReservations> CLOSED {
    (  $<AcceptsReservations_tes> rdf:type . * ;
       rdf:type [ <AcceptsReservations> ] ?
    )
}

<AccessCode> CLOSED {
    (  $<AccessCode_tes> rdf:type . * ;
       rdf:type [ <AccessCode> ] ?
    )
}

<AccessibilityAPI> CLOSED {
    (  $<AccessibilityAPI_tes> rdf:type . * ;
       rdf:type [ <AccessibilityAPI> ] ?
    )
}

<AccessibilityControl> CLOSED {
    (  $<AccessibilityControl_tes> rdf:type . * ;
       rdf:type [ <AccessibilityControl> ] ?
    )
}

<AccessibilityFeature> CLOSED {
    (  $<AccessibilityFeature_tes> rdf:type . * ;
       rdf:type [ <AccessibilityFeature> ] ?
    )
}

<AccessibilityHazard> CLOSED {
    (  $<AccessibilityHazard_tes> rdf:type . * ;
       rdf:type [ <AccessibilityHazard> ] ?
    )
}

<AccessibilitySummary> CLOSED {
    (  $<AccessibilitySummary_tes> rdf:type . * ;
       rdf:type [ <AccessibilitySummary> ] ?
    )
}

<AccessMode> CLOSED {
    (  $<AccessMode_tes> rdf:type . * ;
       rdf:type [ <AccessMode> ] ?
    )
}

<AccessModeSufficient> CLOSED {
    (  $<AccessModeSufficient_tes> rdf:type . * ;
       rdf:type [ <AccessModeSufficient> ] ?
    )
}

<Accommodation>  (
    CLOSED {
       (  $<Accommodation_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ? ;
             <accommodationCategory> @<Text> * ;
             <accommodationFloorPlan> @<FloorPlan> * ;
             <floorLevel> @<Text> * ;
             <floorSize> @<QuantitativeValue> * ;
             <leaseLength> @linkml:String * ;
             <numberOfBathroomsTotal> @<Integer> * ;
             <numberOfBedrooms> @linkml:String * ;
             <numberOfFullBathrooms> @<Number> * ;
             <numberOfPartialBathrooms> @<Number> * ;
             <numberOfRooms> @linkml:String * ;
             <permittedUsage> @<Text> * ;
             <petsAllowed> @linkml:String * ;
             <yearBuilt> @<Number> *
          ) ;
          rdf:type [ <Accommodation> ] ?
       )
    } OR @<Apartment> OR @<CampingPitch> OR @<House> OR @<Room> OR @<Suite>
)

<AccommodationFloorPlan> CLOSED {
    (  $<AccommodationFloorPlan_tes> rdf:type . * ;
       rdf:type [ <AccommodationFloorPlan> ] ?
    )
}

<AccountablePerson> CLOSED {
    (  $<AccountablePerson_tes> rdf:type . * ;
       rdf:type [ <AccountablePerson> ] ?
    )
}

<AccountingService> CLOSED {
    (  $<AccountingService_tes> (  &<FinancialService_tes> ;
          rdf:type [ <FinancialService> ] ?
       ) ;
       rdf:type [ <AccountingService> ] ?
    )
}

<AccountMinimumInflow> CLOSED {
    (  $<AccountMinimumInflow_tes> rdf:type . * ;
       rdf:type [ <AccountMinimumInflow> ] ?
    )
}

<AccountOverdraftLimit> CLOSED {
    (  $<AccountOverdraftLimit_tes> rdf:type . * ;
       rdf:type [ <AccountOverdraftLimit> ] ?
    )
}

<AchieveAction>  (
    CLOSED {
       (  $<AchieveAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <AchieveAction> ] ?
       )
    } OR @<LoseAction> OR @<TieAction> OR @<WinAction>
)

<AcquiredFrom> CLOSED {
    (  $<AcquiredFrom_tes> rdf:type . * ;
       rdf:type [ <AcquiredFrom> ] ?
    )
}

<AcrissCode> CLOSED {
    (  $<AcrissCode_tes> rdf:type . * ;
       rdf:type [ <AcrissCode> ] ?
    )
}

<Action>  (
    CLOSED {
       (  $<Action_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <instrument> @<Thing> * ;
             <location> @linkml:String * ;
             <object> @<Thing> * ;
             <participant> @linkml:String * ;
             <result> @<Thing> * ;
             <actionStatus> @<ActionStatusType> * ;
             <agent> @linkml:String * ;
             <endTime> @linkml:String * ;
             <error> @<Thing> * ;
             <startTime> @linkml:String * ;
             <target> @<EntryPoint> *
          ) ;
          rdf:type [ <Action> ] ?
       )
    } OR @<AchieveAction> OR @<AssessAction> OR @<ConsumeAction> OR @<ControlAction> OR @<CreateAction> OR @<FindAction> OR
    @<InteractAction> OR @<MoveAction> OR @<OrganizeAction> OR @<PlayAction> OR @<SearchAction> OR @<SeekToAction> OR
    @<SolveMathAction> OR @<TradeAction> OR @<TransferAction> OR @<UpdateAction>
)

<ActionAccessibilityRequirement> CLOSED {
    (  $<ActionAccessibilityRequirement_tes> rdf:type . * ;
       rdf:type [ <ActionAccessibilityRequirement> ] ?
    )
}

<ActionAccessSpecification> CLOSED {
    (  $<ActionAccessSpecification_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <category> @linkml:String * ;
          <eligibleRegion> @linkml:String * ;
          <availabilityEnds> @linkml:String * ;
          <availabilityStarts> @linkml:String * ;
          <expectsAcceptanceOf> @<Offer> * ;
          <ineligibleRegion> @linkml:String * ;
          <requiresSubscription> @linkml:String *
       ) ;
       rdf:type [ <ActionAccessSpecification> ] ?
    )
}

<ActionApplication> CLOSED {
    (  $<ActionApplication_tes> rdf:type . * ;
       rdf:type [ <ActionApplication> ] ?
    )
}

<ActionPlatform> CLOSED {
    (  $<ActionPlatform_tes> rdf:type . * ;
       rdf:type [ <ActionPlatform> ] ?
    )
}

<ActionStatus> CLOSED {
    (  $<ActionStatus_tes> rdf:type . * ;
       rdf:type [ <ActionStatus> ] ?
    )
}

<ActionStatusType> CLOSED {
    (  $<ActionStatusType_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <ActionStatusType> ] ?
    )
}

<ActivateAction> CLOSED {
    (  $<ActivateAction_tes> (  &<ControlAction_tes> ;
          rdf:type [ <ControlAction> ] ?
       ) ;
       rdf:type [ <ActivateAction> ] ?
    )
}

<ActivationFee> CLOSED {
    (  $<ActivationFee_tes> rdf:type . * ;
       rdf:type [ <ActivationFee> ] ?
    )
}

<ActiveActionStatus> CLOSED {
    (  $<ActiveActionStatus_tes> rdf:type . * ;
       rdf:type [ <ActiveActionStatus> ] ?
    )
}

<ActiveIngredient> CLOSED {
    (  $<ActiveIngredient_tes> rdf:type . * ;
       rdf:type [ <ActiveIngredient> ] ?
    )
}

<ActiveNotRecruiting> CLOSED {
    (  $<ActiveNotRecruiting_tes> rdf:type . * ;
       rdf:type [ <ActiveNotRecruiting> ] ?
    )
}

<ActivityDuration> CLOSED {
    (  $<ActivityDuration_tes> rdf:type . * ;
       rdf:type [ <ActivityDuration> ] ?
    )
}

<ActivityFrequency> CLOSED {
    (  $<ActivityFrequency_tes> rdf:type . * ;
       rdf:type [ <ActivityFrequency> ] ?
    )
}

<Actors> CLOSED {
    (  $<Actors_tes> rdf:type . * ;
       rdf:type [ <Actors> ] ?
    )
}

<AddAction>  (
    CLOSED {
       (  $<AddAction_tes> (  &<UpdateAction_tes> ;
             rdf:type [ <UpdateAction> ] ?
          ) ;
          rdf:type [ <AddAction> ] ?
       )
    } OR @<InsertAction>
)

<AdditionalName> CLOSED {
    (  $<AdditionalName_tes> rdf:type . * ;
       rdf:type [ <AdditionalName> ] ?
    )
}

<AdditionalNumberOfGuests> CLOSED {
    (  $<AdditionalNumberOfGuests_tes> rdf:type . * ;
       rdf:type [ <AdditionalNumberOfGuests> ] ?
    )
}

<AdditionalProperty> CLOSED {
    (  $<AdditionalProperty_tes> rdf:type . * ;
       rdf:type [ <AdditionalProperty> ] ?
    )
}

<AdditionalVariable> CLOSED {
    (  $<AdditionalVariable_tes> rdf:type . * ;
       rdf:type [ <AdditionalVariable> ] ?
    )
}

<AddOn> CLOSED {
    (  $<AddOn_tes> rdf:type . * ;
       rdf:type [ <AddOn> ] ?
    )
}

<Address> CLOSED {
    (  $<Address_tes> rdf:type . * ;
       rdf:type [ <Address> ] ?
    )
}

<AddressCountry> CLOSED {
    (  $<AddressCountry_tes> rdf:type . * ;
       rdf:type [ <AddressCountry> ] ?
    )
}

<AddressLocality> CLOSED {
    (  $<AddressLocality_tes> rdf:type . * ;
       rdf:type [ <AddressLocality> ] ?
    )
}

<AddressRegion> CLOSED {
    (  $<AddressRegion_tes> rdf:type . * ;
       rdf:type [ <AddressRegion> ] ?
    )
}

<AdministrationRoute> CLOSED {
    (  $<AdministrationRoute_tes> rdf:type . * ;
       rdf:type [ <AdministrationRoute> ] ?
    )
}

<AdministrativeArea>  (
    CLOSED {
       (  $<AdministrativeArea_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ?
          ) ;
          rdf:type [ <AdministrativeArea> ] ?
       )
    } OR @<City> OR @<Country> OR @<SchoolDistrict> OR @<State>
)

<AdultEntertainment> CLOSED {
    (  $<AdultEntertainment_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <AdultEntertainment> ] ?
    )
}

<AdvanceBookingRequirement> CLOSED {
    (  $<AdvanceBookingRequirement_tes> rdf:type . * ;
       rdf:type [ <AdvanceBookingRequirement> ] ?
    )
}

<AdverseOutcome> CLOSED {
    (  $<AdverseOutcome_tes> rdf:type . * ;
       rdf:type [ <AdverseOutcome> ] ?
    )
}

<AdvertiserContentArticle> CLOSED {
    (  $<AdvertiserContentArticle_tes> (  &<Article_tes> ;
          rdf:type [ <Article> ] ?
       ) ;
       rdf:type [ <AdvertiserContentArticle> ] ?
    )
}

<AerobicActivity> CLOSED {
    (  $<AerobicActivity_tes> rdf:type . * ;
       rdf:type [ <AerobicActivity> ] ?
    )
}

<AffectedBy> CLOSED {
    (  $<AffectedBy_tes> rdf:type . * ;
       rdf:type [ <AffectedBy> ] ?
    )
}

<AfterMedia> CLOSED {
    (  $<AfterMedia_tes> rdf:type . * ;
       rdf:type [ <AfterMedia> ] ?
    )
}

<Agent> CLOSED {
    (  $<Agent_tes> rdf:type . * ;
       rdf:type [ <Agent> ] ?
    )
}

<AggregateOffer> CLOSED {
    (  $<AggregateOffer_tes> (  &<Offer_tes> ;
          rdf:type [ <Offer> ] ? ;
          <highPrice> @linkml:String * ;
          <lowPrice> @linkml:String * ;
          <offerCount> @<Integer> * ;
          <offers> @linkml:String *
       ) ;
       rdf:type [ <AggregateOffer> ] ?
    )
}

<AggregateRating>  (
    CLOSED {
       (  $<AggregateRating_tes> (  &<Rating_tes> ;
             rdf:type [ <Rating> ] ? ;
             <itemReviewed> @<Thing> * ;
             <ratingCount> @<Integer> * ;
             <reviewCount> @<Integer> *
          ) ;
          rdf:type [ <AggregateRating> ] ?
       )
    } OR @<EmployerAggregateRating>
)

<AggregateRating> CLOSED {
    (  $<AggregateRating_tes> rdf:type . * ;
       rdf:type [ <AggregateRating> ] ?
    )
}

<AgreeAction> CLOSED {
    (  $<AgreeAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ?
       ) ;
       rdf:type [ <AgreeAction> ] ?
    )
}

<Aircraft> CLOSED {
    (  $<Aircraft_tes> rdf:type . * ;
       rdf:type [ <Aircraft> ] ?
    )
}

<Airline> CLOSED {
    (  $<Airline_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ? ;
          <boardingPolicy> @<BoardingPolicyType> * ;
          <iataCode> @<Text> *
       ) ;
       rdf:type [ <Airline> ] ?
    )
}

<Airport> CLOSED {
    (  $<Airport_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ? ;
          <iataCode> @<Text> * ;
          <icaoCode> @<Text> *
       ) ;
       rdf:type [ <Airport> ] ?
    )
}

<Album> CLOSED {
    (  $<Album_tes> rdf:type . * ;
       rdf:type [ <Album> ] ?
    )
}

<AlbumProductionType> CLOSED {
    (  $<AlbumProductionType_tes> rdf:type . * ;
       rdf:type [ <AlbumProductionType> ] ?
    )
}

<AlbumRelease> CLOSED {
    (  $<AlbumRelease_tes> rdf:type . * ;
       rdf:type [ <AlbumRelease> ] ?
    )
}

<AlbumRelease> CLOSED {
    (  $<AlbumRelease_tes> rdf:type . * ;
       rdf:type [ <AlbumRelease> ] ?
    )
}

<AlbumReleaseType> CLOSED {
    (  $<AlbumReleaseType_tes> rdf:type . * ;
       rdf:type [ <AlbumReleaseType> ] ?
    )
}

<Albums> CLOSED {
    (  $<Albums_tes> rdf:type . * ;
       rdf:type [ <Albums> ] ?
    )
}

<AlcoholWarning> CLOSED {
    (  $<AlcoholWarning_tes> rdf:type . * ;
       rdf:type [ <AlcoholWarning> ] ?
    )
}

<Algorithm> CLOSED {
    (  $<Algorithm_tes> rdf:type . * ;
       rdf:type [ <Algorithm> ] ?
    )
}

<AlignmentObject> CLOSED {
    (  $<AlignmentObject_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <alignmentType> @<Text> * ;
          <educationalFramework> @<Text> * ;
          <targetDescription> @<Text> * ;
          <targetName> @<Text> * ;
          <targetUrl> @<URL> *
       ) ;
       rdf:type [ <AlignmentObject> ] ?
    )
}

<AlignmentType> CLOSED {
    (  $<AlignmentType_tes> rdf:type . * ;
       rdf:type [ <AlignmentType> ] ?
    )
}

<AllergiesHealthAspect> CLOSED {
    (  $<AllergiesHealthAspect_tes> rdf:type . * ;
       rdf:type [ <AllergiesHealthAspect> ] ?
    )
}

<AllocateAction>  (
    CLOSED {
       (  $<AllocateAction_tes> (  &<OrganizeAction_tes> ;
             rdf:type [ <OrganizeAction> ] ?
          ) ;
          rdf:type [ <AllocateAction> ] ?
       )
    } OR @<AcceptAction> OR @<AssignAction> OR @<AuthorizeAction> OR @<RejectAction>
)

<AllWheelDriveConfiguration> CLOSED {
    (  $<AllWheelDriveConfiguration_tes> rdf:type . * ;
       rdf:type [ <AllWheelDriveConfiguration> ] ?
    )
}

<AlternateName> CLOSED {
    (  $<AlternateName_tes> rdf:type . * ;
       rdf:type [ <AlternateName> ] ?
    )
}

<AlternativeHeadline> CLOSED {
    (  $<AlternativeHeadline_tes> rdf:type . * ;
       rdf:type [ <AlternativeHeadline> ] ?
    )
}

<AlternativeOf> CLOSED {
    (  $<AlternativeOf_tes> rdf:type . * ;
       rdf:type [ <AlternativeOf> ] ?
    )
}

<Alumni> CLOSED {
    (  $<Alumni_tes> rdf:type . * ;
       rdf:type [ <Alumni> ] ?
    )
}

<AlumniOf> CLOSED {
    (  $<AlumniOf_tes> rdf:type . * ;
       rdf:type [ <AlumniOf> ] ?
    )
}

<AmenityFeature> CLOSED {
    (  $<AmenityFeature_tes> rdf:type . * ;
       rdf:type [ <AmenityFeature> ] ?
    )
}

<Amount> CLOSED {
    (  $<Amount_tes> rdf:type . * ;
       rdf:type [ <Amount> ] ?
    )
}

<AmountOfThisGood> CLOSED {
    (  $<AmountOfThisGood_tes> rdf:type . * ;
       rdf:type [ <AmountOfThisGood> ] ?
    )
}

<AmpStory> CLOSED {
    (  $<AmpStory_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <AmpStory> ] ?
    )
}

<AMRadioChannel> CLOSED {
    (  $<AMRadioChannel_tes> (  &<RadioChannel_tes> ;
          rdf:type [ <RadioChannel> ] ?
       ) ;
       rdf:type [ <AMRadioChannel> ] ?
    )
}

<AmusementPark> CLOSED {
    (  $<AmusementPark_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <AmusementPark> ] ?
    )
}

<AnaerobicActivity> CLOSED {
    (  $<AnaerobicActivity_tes> rdf:type . * ;
       rdf:type [ <AnaerobicActivity> ] ?
    )
}

<AnalysisNewsArticle> CLOSED {
    (  $<AnalysisNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ?
       ) ;
       rdf:type [ <AnalysisNewsArticle> ] ?
    )
}

<AnatomicalStructure>  (
    CLOSED {
       (  $<AnatomicalStructure_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <associatedPathophysiology> @<Text> * ;
             <bodyLocation> @<Text> * ;
             <connectedTo> @<AnatomicalStructure> * ;
             <diagram> @<ImageObject> * ;
             <partOfSystem> @<AnatomicalSystem> * ;
             <relatedCondition> @<MedicalCondition> * ;
             <relatedTherapy> @<MedicalTherapy> * ;
             <subStructure> @<AnatomicalStructure> *
          ) ;
          rdf:type [ <AnatomicalStructure> ] ?
       )
    } OR @<Bone> OR @<BrainStructure> OR @<Joint> OR @<Ligament> OR @<Muscle> OR @<Nerve> OR @<Vessel>
)

<AnatomicalSystem> CLOSED {
    (  $<AnatomicalSystem_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <associatedPathophysiology> @<Text> * ;
          <comprisedOf> @linkml:String * ;
          <relatedCondition> @<MedicalCondition> * ;
          <relatedStructure> @<AnatomicalStructure> * ;
          <relatedTherapy> @<MedicalTherapy> *
       ) ;
       rdf:type [ <AnatomicalSystem> ] ?
    )
}

<Anesthesia> CLOSED {
    (  $<Anesthesia_tes> rdf:type . * ;
       rdf:type [ <Anesthesia> ] ?
    )
}

<AnimalShelter> CLOSED {
    (  $<AnimalShelter_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <AnimalShelter> ] ?
    )
}

<AnnualPercentageRate> CLOSED {
    (  $<AnnualPercentageRate_tes> rdf:type . * ;
       rdf:type [ <AnnualPercentageRate> ] ?
    )
}

<Answer> CLOSED {
    (  $<Answer_tes> (  &<Comment_tes> ;
          rdf:type [ <Comment> ] ? ;
          <answerExplanation> @linkml:String *
       ) ;
       rdf:type [ <Answer> ] ?
    )
}

<AnswerCount> CLOSED {
    (  $<AnswerCount_tes> rdf:type . * ;
       rdf:type [ <AnswerCount> ] ?
    )
}

<AnswerExplanation> CLOSED {
    (  $<AnswerExplanation_tes> rdf:type . * ;
       rdf:type [ <AnswerExplanation> ] ?
    )
}

<Antagonist> CLOSED {
    (  $<Antagonist_tes> rdf:type . * ;
       rdf:type [ <Antagonist> ] ?
    )
}

<Apartment> CLOSED {
    (  $<Apartment_tes> (  &<Accommodation_tes> ;
          rdf:type [ <Accommodation> ] ? ;
          <occupancy> @<QuantitativeValue> *
       ) ;
       rdf:type [ <Apartment> ] ?
    )
}

<ApartmentComplex> CLOSED {
    (  $<ApartmentComplex_tes> (  &<Residence_tes> ;
          rdf:type [ <Residence> ] ? ;
          <numberOfAccommodationUnits> @<QuantitativeValue> * ;
          <numberOfAvailableAccommodationUnits> @<QuantitativeValue> * ;
          <numberOfBedrooms> @linkml:String * ;
          <petsAllowed> @linkml:String *
       ) ;
       rdf:type [ <ApartmentComplex> ] ?
    )
}

<APIReference> CLOSED {
    (  $<APIReference_tes> (  &<TechArticle_tes> ;
          rdf:type [ <TechArticle> ] ? ;
          <assembly> @<Text> * ;
          <assemblyVersion> @<Text> * ;
          <executableLibraryName> @<Text> * ;
          <programmingModel> @<Text> * ;
          <targetPlatform> @<Text> *
       ) ;
       rdf:type [ <APIReference> ] ?
    )
}

<Appearance> CLOSED {
    (  $<Appearance_tes> rdf:type . * ;
       rdf:type [ <Appearance> ] ?
    )
}

<AppendAction> CLOSED {
    (  $<AppendAction_tes> (  &<InsertAction_tes> ;
          rdf:type [ <InsertAction> ] ?
       ) ;
       rdf:type [ <AppendAction> ] ?
    )
}

<ApplicableLocation> CLOSED {
    (  $<ApplicableLocation_tes> rdf:type . * ;
       rdf:type [ <ApplicableLocation> ] ?
    )
}

<ApplicantLocationRequirements> CLOSED {
    (  $<ApplicantLocationRequirements_tes> rdf:type . * ;
       rdf:type [ <ApplicantLocationRequirements> ] ?
    )
}

<Application> CLOSED {
    (  $<Application_tes> rdf:type . * ;
       rdf:type [ <Application> ] ?
    )
}

<ApplicationCategory> CLOSED {
    (  $<ApplicationCategory_tes> rdf:type . * ;
       rdf:type [ <ApplicationCategory> ] ?
    )
}

<ApplicationContact> CLOSED {
    (  $<ApplicationContact_tes> rdf:type . * ;
       rdf:type [ <ApplicationContact> ] ?
    )
}

<ApplicationDeadline> CLOSED {
    (  $<ApplicationDeadline_tes> rdf:type . * ;
       rdf:type [ <ApplicationDeadline> ] ?
    )
}

<ApplicationStartDate> CLOSED {
    (  $<ApplicationStartDate_tes> rdf:type . * ;
       rdf:type [ <ApplicationStartDate> ] ?
    )
}

<ApplicationSubCategory> CLOSED {
    (  $<ApplicationSubCategory_tes> rdf:type . * ;
       rdf:type [ <ApplicationSubCategory> ] ?
    )
}

<ApplicationSuite> CLOSED {
    (  $<ApplicationSuite_tes> rdf:type . * ;
       rdf:type [ <ApplicationSuite> ] ?
    )
}

<AppliesToDeliveryMethod> CLOSED {
    (  $<AppliesToDeliveryMethod_tes> rdf:type . * ;
       rdf:type [ <AppliesToDeliveryMethod> ] ?
    )
}

<AppliesToPaymentMethod> CLOSED {
    (  $<AppliesToPaymentMethod_tes> rdf:type . * ;
       rdf:type [ <AppliesToPaymentMethod> ] ?
    )
}

<ApplyAction> CLOSED {
    (  $<ApplyAction_tes> (  &<OrganizeAction_tes> ;
          rdf:type [ <OrganizeAction> ] ?
       ) ;
       rdf:type [ <ApplyAction> ] ?
    )
}

<ApprovedIndication> CLOSED {
    (  $<ApprovedIndication_tes> (  &<MedicalIndication_tes> ;
          rdf:type [ <MedicalIndication> ] ?
       ) ;
       rdf:type [ <ApprovedIndication> ] ?
    )
}

<Aquarium> CLOSED {
    (  $<Aquarium_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Aquarium> ] ?
    )
}

<ArchiveComponent> CLOSED {
    (  $<ArchiveComponent_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <itemLocation> @linkml:String * ;
          <holdingArchive> @<ArchiveOrganization> *
       ) ;
       rdf:type [ <ArchiveComponent> ] ?
    )
}

<ArchivedAt> CLOSED {
    (  $<ArchivedAt_tes> rdf:type . * ;
       rdf:type [ <ArchivedAt> ] ?
    )
}

<ArchiveHeld> CLOSED {
    (  $<ArchiveHeld_tes> rdf:type . * ;
       rdf:type [ <ArchiveHeld> ] ?
    )
}

<ArchiveOrganization> CLOSED {
    (  $<ArchiveOrganization_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ? ;
          <archiveHeld> @<ArchiveComponent> *
       ) ;
       rdf:type [ <ArchiveOrganization> ] ?
    )
}

<Area> CLOSED {
    (  $<Area_tes> rdf:type . * ;
       rdf:type [ <Area> ] ?
    )
}

<ArrivalAirport> CLOSED {
    (  $<ArrivalAirport_tes> rdf:type . * ;
       rdf:type [ <ArrivalAirport> ] ?
    )
}

<ArrivalBoatTerminal> CLOSED {
    (  $<ArrivalBoatTerminal_tes> rdf:type . * ;
       rdf:type [ <ArrivalBoatTerminal> ] ?
    )
}

<ArrivalBusStop> CLOSED {
    (  $<ArrivalBusStop_tes> rdf:type . * ;
       rdf:type [ <ArrivalBusStop> ] ?
    )
}

<ArrivalGate> CLOSED {
    (  $<ArrivalGate_tes> rdf:type . * ;
       rdf:type [ <ArrivalGate> ] ?
    )
}

<ArrivalPlatform> CLOSED {
    (  $<ArrivalPlatform_tes> rdf:type . * ;
       rdf:type [ <ArrivalPlatform> ] ?
    )
}

<ArrivalStation> CLOSED {
    (  $<ArrivalStation_tes> rdf:type . * ;
       rdf:type [ <ArrivalStation> ] ?
    )
}

<ArrivalTerminal> CLOSED {
    (  $<ArrivalTerminal_tes> rdf:type . * ;
       rdf:type [ <ArrivalTerminal> ] ?
    )
}

<ArrivalTime> CLOSED {
    (  $<ArrivalTime_tes> rdf:type . * ;
       rdf:type [ <ArrivalTime> ] ?
    )
}

<ArriveAction> CLOSED {
    (  $<ArriveAction_tes> (  &<MoveAction_tes> ;
          rdf:type [ <MoveAction> ] ?
       ) ;
       rdf:type [ <ArriveAction> ] ?
    )
}

<ArtEdition> CLOSED {
    (  $<ArtEdition_tes> rdf:type . * ;
       rdf:type [ <ArtEdition> ] ?
    )
}

<ArterialBranch> CLOSED {
    (  $<ArterialBranch_tes> rdf:type . * ;
       rdf:type [ <ArterialBranch> ] ?
    )
}

<Artery> CLOSED {
    (  $<Artery_tes> (  &<Vessel_tes> ;
          rdf:type [ <Vessel> ] ? ;
          <arterialBranch> @<AnatomicalStructure> * ;
          <supplyTo> @<AnatomicalStructure> *
       ) ;
       rdf:type [ <Artery> ] ?
    )
}

<Artform> CLOSED {
    (  $<Artform_tes> rdf:type . * ;
       rdf:type [ <Artform> ] ?
    )
}

<ArtGallery> CLOSED {
    (  $<ArtGallery_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <ArtGallery> ] ?
    )
}

<Article>  (
    CLOSED {
       (  $<Article_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <articleBody> @<Text> * ;
             <articleSection> @<Text> * ;
             <backstory> @linkml:String * ;
             <pageEnd> @linkml:String * ;
             <pageStart> @linkml:String * ;
             <pagination> @<Text> * ;
             <speakable> @linkml:String * ;
             <wordCount> @<Integer> *
          ) ;
          rdf:type [ <Article> ] ?
       )
    } OR @<AdvertiserContentArticle> OR @<NewsArticle> OR @<Report> OR @<SatiricalArticle> OR @<ScholarlyArticle> OR
    @<SocialMediaPosting> OR @<TechArticle>
)

<ArticleBody> CLOSED {
    (  $<ArticleBody_tes> rdf:type . * ;
       rdf:type [ <ArticleBody> ] ?
    )
}

<ArticleSection> CLOSED {
    (  $<ArticleSection_tes> rdf:type . * ;
       rdf:type [ <ArticleSection> ] ?
    )
}

<Artist> CLOSED {
    (  $<Artist_tes> rdf:type . * ;
       rdf:type [ <Artist> ] ?
    )
}

<ArtworkSurface> CLOSED {
    (  $<ArtworkSurface_tes> rdf:type . * ;
       rdf:type [ <ArtworkSurface> ] ?
    )
}

<AskAction> CLOSED {
    (  $<AskAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ? ;
          <question> @<Question> *
       ) ;
       rdf:type [ <AskAction> ] ?
    )
}

<AskPublicNewsArticle> CLOSED {
    (  $<AskPublicNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ?
       ) ;
       rdf:type [ <AskPublicNewsArticle> ] ?
    )
}

<Aspect> CLOSED {
    (  $<Aspect_tes> rdf:type . * ;
       rdf:type [ <Aspect> ] ?
    )
}

<Assembly> CLOSED {
    (  $<Assembly_tes> rdf:type . * ;
       rdf:type [ <Assembly> ] ?
    )
}

<AssemblyVersion> CLOSED {
    (  $<AssemblyVersion_tes> rdf:type . * ;
       rdf:type [ <AssemblyVersion> ] ?
    )
}

<AssessAction>  (
    CLOSED {
       (  $<AssessAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <AssessAction> ] ?
       )
    } OR @<ChooseAction> OR @<IgnoreAction> OR @<ReactAction> OR @<ReviewAction>
)

<Assesses> CLOSED {
    (  $<Assesses_tes> rdf:type . * ;
       rdf:type [ <Assesses> ] ?
    )
}

<AssignAction> CLOSED {
    (  $<AssignAction_tes> (  &<AllocateAction_tes> ;
          rdf:type [ <AllocateAction> ] ?
       ) ;
       rdf:type [ <AssignAction> ] ?
    )
}

<AssociatedAnatomy> CLOSED {
    (  $<AssociatedAnatomy_tes> rdf:type . * ;
       rdf:type [ <AssociatedAnatomy> ] ?
    )
}

<AssociatedArticle> CLOSED {
    (  $<AssociatedArticle_tes> rdf:type . * ;
       rdf:type [ <AssociatedArticle> ] ?
    )
}

<AssociatedDisease> CLOSED {
    (  $<AssociatedDisease_tes> rdf:type . * ;
       rdf:type [ <AssociatedDisease> ] ?
    )
}

<AssociatedMedia> CLOSED {
    (  $<AssociatedMedia_tes> rdf:type . * ;
       rdf:type [ <AssociatedMedia> ] ?
    )
}

<AssociatedPathophysiology> CLOSED {
    (  $<AssociatedPathophysiology_tes> rdf:type . * ;
       rdf:type [ <AssociatedPathophysiology> ] ?
    )
}

<Athlete> CLOSED {
    (  $<Athlete_tes> rdf:type . * ;
       rdf:type [ <Athlete> ] ?
    )
}

<Atlas> CLOSED {
    (  $<Atlas_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Atlas> ] ?
    )
}

<Attendee> CLOSED {
    (  $<Attendee_tes> rdf:type . * ;
       rdf:type [ <Attendee> ] ?
    )
}

<Attendees> CLOSED {
    (  $<Attendees_tes> rdf:type . * ;
       rdf:type [ <Attendees> ] ?
    )
}

<Attorney> CLOSED {
    (  $<Attorney_tes> (  &<LegalService_tes> ;
          rdf:type [ <LegalService> ] ?
       ) ;
       rdf:type [ <Attorney> ] ?
    )
}

<Audience>  (
    CLOSED {
       (  $<Audience_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <audienceType> @<Text> * ;
             <geographicArea> @<AdministrativeArea> *
          ) ;
          rdf:type [ <Audience> ] ?
       )
    } OR @<BusinessAudience> OR @<EducationalAudience> OR @<MedicalAudience> OR @<PeopleAudience> OR @<Researcher>
)

<Audience> CLOSED {
    (  $<Audience_tes> rdf:type . * ;
       rdf:type [ <Audience> ] ?
    )
}

<AudienceType> CLOSED {
    (  $<AudienceType_tes> rdf:type . * ;
       rdf:type [ <AudienceType> ] ?
    )
}

<Audio> CLOSED {
    (  $<Audio_tes> rdf:type . * ;
       rdf:type [ <Audio> ] ?
    )
}

<Audiobook> CLOSED {
    (  $<Audiobook_tes> (  &<AudioObject_tes> ;
          rdf:type [ <AudioObject> ] ? ;
          &<Book_tes> ;
          rdf:type [ <Book> ] ? ;
          <readBy> @<Person> * ;
          <isbn> @<Text> * ;
          <abridged> @<Boolean> * ;
          <bookEdition> @<Text> * ;
          <bookFormat> @<BookFormatType> * ;
          <illustrator> @<Person> * ;
          <numberOfPages> @<Integer> *
       ) ;
       rdf:type [ <Audiobook> ] ?
    )
}

<AudiobookFormat> CLOSED {
    (  $<AudiobookFormat_tes> rdf:type . * ;
       rdf:type [ <AudiobookFormat> ] ?
    )
}

<AudioObject>  (
    CLOSED {
       (  $<AudioObject_tes> (  &<MediaObject_tes> ;
             rdf:type [ <MediaObject> ] ? ;
             <caption> @linkml:String * ;
             <embeddedTextCaption> @<Text> * ;
             <transcript> @<Text> *
          ) ;
          rdf:type [ <AudioObject> ] ?
       )
    } OR @<AudioObjectSnapshot> OR @<Audiobook>
)

<AudioObjectSnapshot> CLOSED {
    (  $<AudioObjectSnapshot_tes> (  &<AudioObject_tes> ;
          rdf:type [ <AudioObject> ] ?
       ) ;
       rdf:type [ <AudioObjectSnapshot> ] ?
    )
}

<Authenticator> CLOSED {
    (  $<Authenticator_tes> rdf:type . * ;
       rdf:type [ <Authenticator> ] ?
    )
}

<Author> CLOSED {
    (  $<Author_tes> rdf:type . * ;
       rdf:type [ <Author> ] ?
    )
}

<AuthoritativeLegalValue> CLOSED {
    (  $<AuthoritativeLegalValue_tes> rdf:type . * ;
       rdf:type [ <AuthoritativeLegalValue> ] ?
    )
}

<AuthorizeAction> CLOSED {
    (  $<AuthorizeAction_tes> (  &<AllocateAction_tes> ;
          rdf:type [ <AllocateAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <AuthorizeAction> ] ?
    )
}

<AutoBodyShop> CLOSED {
    (  $<AutoBodyShop_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <AutoBodyShop> ] ?
    )
}

<AutoDealer> CLOSED {
    (  $<AutoDealer_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <AutoDealer> ] ?
    )
}

<AutomatedTeller> CLOSED {
    (  $<AutomatedTeller_tes> (  &<FinancialService_tes> ;
          rdf:type [ <FinancialService> ] ?
       ) ;
       rdf:type [ <AutomatedTeller> ] ?
    )
}

<AutomotiveBusiness>  (
    CLOSED {
       (  $<AutomotiveBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <AutomotiveBusiness> ] ?
       )
    } OR @<AutoBodyShop> OR @<AutoDealer> OR @<AutoPartsStore> OR @<AutoRental> OR @<AutoRepair> OR @<AutoWash> OR @<GasStation> OR
    @<MotorcycleDealer> OR @<MotorcycleRepair>
)

<AutoPartsStore> CLOSED {
    (  $<AutoPartsStore_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ? ;
          &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <AutoPartsStore> ] ?
    )
}

<AutoRental> CLOSED {
    (  $<AutoRental_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <AutoRental> ] ?
    )
}

<AutoRepair> CLOSED {
    (  $<AutoRepair_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <AutoRepair> ] ?
    )
}

<AutoWash> CLOSED {
    (  $<AutoWash_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <AutoWash> ] ?
    )
}

<Availability> CLOSED {
    (  $<Availability_tes> rdf:type . * ;
       rdf:type [ <Availability> ] ?
    )
}

<AvailabilityEnds> CLOSED {
    (  $<AvailabilityEnds_tes> rdf:type . * ;
       rdf:type [ <AvailabilityEnds> ] ?
    )
}

<AvailabilityStarts> CLOSED {
    (  $<AvailabilityStarts_tes> rdf:type . * ;
       rdf:type [ <AvailabilityStarts> ] ?
    )
}

<AvailableChannel> CLOSED {
    (  $<AvailableChannel_tes> rdf:type . * ;
       rdf:type [ <AvailableChannel> ] ?
    )
}

<AvailableDeliveryMethod> CLOSED {
    (  $<AvailableDeliveryMethod_tes> rdf:type . * ;
       rdf:type [ <AvailableDeliveryMethod> ] ?
    )
}

<AvailableFrom> CLOSED {
    (  $<AvailableFrom_tes> rdf:type . * ;
       rdf:type [ <AvailableFrom> ] ?
    )
}

<AvailableIn> CLOSED {
    (  $<AvailableIn_tes> rdf:type . * ;
       rdf:type [ <AvailableIn> ] ?
    )
}

<AvailableLanguage> CLOSED {
    (  $<AvailableLanguage_tes> rdf:type . * ;
       rdf:type [ <AvailableLanguage> ] ?
    )
}

<AvailableOnDevice> CLOSED {
    (  $<AvailableOnDevice_tes> rdf:type . * ;
       rdf:type [ <AvailableOnDevice> ] ?
    )
}

<AvailableService> CLOSED {
    (  $<AvailableService_tes> rdf:type . * ;
       rdf:type [ <AvailableService> ] ?
    )
}

<AvailableStrength> CLOSED {
    (  $<AvailableStrength_tes> rdf:type . * ;
       rdf:type [ <AvailableStrength> ] ?
    )
}

<AvailableTest> CLOSED {
    (  $<AvailableTest_tes> rdf:type . * ;
       rdf:type [ <AvailableTest> ] ?
    )
}

<AvailableThrough> CLOSED {
    (  $<AvailableThrough_tes> rdf:type . * ;
       rdf:type [ <AvailableThrough> ] ?
    )
}

<Award> CLOSED {
    (  $<Award_tes> rdf:type . * ;
       rdf:type [ <Award> ] ?
    )
}

<Awards> CLOSED {
    (  $<Awards_tes> rdf:type . * ;
       rdf:type [ <Awards> ] ?
    )
}

<Ayurvedic> CLOSED {
    (  $<Ayurvedic_tes> rdf:type . * ;
       rdf:type [ <Ayurvedic> ] ?
    )
}

<BackgroundNewsArticle> CLOSED {
    (  $<BackgroundNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ?
       ) ;
       rdf:type [ <BackgroundNewsArticle> ] ?
    )
}

<BackOrder> CLOSED {
    (  $<BackOrder_tes> rdf:type . * ;
       rdf:type [ <BackOrder> ] ?
    )
}

<Backstory> CLOSED {
    (  $<Backstory_tes> rdf:type . * ;
       rdf:type [ <Backstory> ] ?
    )
}

<Bacteria> CLOSED {
    (  $<Bacteria_tes> rdf:type . * ;
       rdf:type [ <Bacteria> ] ?
    )
}

<Bakery> CLOSED {
    (  $<Bakery_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <Bakery> ] ?
    )
}

<Balance> CLOSED {
    (  $<Balance_tes> rdf:type . * ;
       rdf:type [ <Balance> ] ?
    )
}

<BankAccount>  (
    CLOSED {
       (  $<BankAccount_tes> (  &<FinancialProduct_tes> ;
             rdf:type [ <FinancialProduct> ] ? ;
             <accountMinimumInflow> @<MonetaryAmount> * ;
             <accountOverdraftLimit> @<MonetaryAmount> * ;
             <bankAccountType> @linkml:String *
          ) ;
          rdf:type [ <BankAccount> ] ?
       )
    } OR @<DepositAccount>
)

<BankAccountType> CLOSED {
    (  $<BankAccountType_tes> rdf:type . * ;
       rdf:type [ <BankAccountType> ] ?
    )
}

<BankOrCreditUnion> CLOSED {
    (  $<BankOrCreditUnion_tes> (  &<FinancialService_tes> ;
          rdf:type [ <FinancialService> ] ?
       ) ;
       rdf:type [ <BankOrCreditUnion> ] ?
    )
}

<Barcode> CLOSED {
    (  $<Barcode_tes> (  &<ImageObject_tes> ;
          rdf:type [ <ImageObject> ] ?
       ) ;
       rdf:type [ <Barcode> ] ?
    )
}

<BarOrPub> CLOSED {
    (  $<BarOrPub_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <BarOrPub> ] ?
    )
}

<BaseSalary> CLOSED {
    (  $<BaseSalary_tes> rdf:type . * ;
       rdf:type [ <BaseSalary> ] ?
    )
}

<BasicIncome> CLOSED {
    (  $<BasicIncome_tes> rdf:type . * ;
       rdf:type [ <BasicIncome> ] ?
    )
}

<Beach> CLOSED {
    (  $<Beach_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Beach> ] ?
    )
}

<BeautySalon> CLOSED {
    (  $<BeautySalon_tes> (  &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <BeautySalon> ] ?
    )
}

<Bed> CLOSED {
    (  $<Bed_tes> rdf:type . * ;
       rdf:type [ <Bed> ] ?
    )
}

<BedAndBreakfast> CLOSED {
    (  $<BedAndBreakfast_tes> (  &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ?
       ) ;
       rdf:type [ <BedAndBreakfast> ] ?
    )
}

<BedDetails> CLOSED {
    (  $<BedDetails_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <numberOfBeds> @<Number> * ;
          <typeOfBed> @linkml:String *
       ) ;
       rdf:type [ <BedDetails> ] ?
    )
}

<BedType> CLOSED {
    (  $<BedType_tes> (  &<QualitativeValue_tes> ;
          rdf:type [ <QualitativeValue> ] ?
       ) ;
       rdf:type [ <BedType> ] ?
    )
}

<BeforeMedia> CLOSED {
    (  $<BeforeMedia_tes> rdf:type . * ;
       rdf:type [ <BeforeMedia> ] ?
    )
}

<BefriendAction> CLOSED {
    (  $<BefriendAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ?
       ) ;
       rdf:type [ <BefriendAction> ] ?
    )
}

<BeneficiaryBank> CLOSED {
    (  $<BeneficiaryBank_tes> rdf:type . * ;
       rdf:type [ <BeneficiaryBank> ] ?
    )
}

<Benefits> CLOSED {
    (  $<Benefits_tes> rdf:type . * ;
       rdf:type [ <Benefits> ] ?
    )
}

<BenefitsHealthAspect> CLOSED {
    (  $<BenefitsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <BenefitsHealthAspect> ] ?
    )
}

<BenefitsSummaryUrl> CLOSED {
    (  $<BenefitsSummaryUrl_tes> rdf:type . * ;
       rdf:type [ <BenefitsSummaryUrl> ] ?
    )
}

<BestRating> CLOSED {
    (  $<BestRating_tes> rdf:type . * ;
       rdf:type [ <BestRating> ] ?
    )
}

<BikeStore> CLOSED {
    (  $<BikeStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <BikeStore> ] ?
    )
}

<BillingAddress> CLOSED {
    (  $<BillingAddress_tes> rdf:type . * ;
       rdf:type [ <BillingAddress> ] ?
    )
}

<BillingDuration> CLOSED {
    (  $<BillingDuration_tes> rdf:type . * ;
       rdf:type [ <BillingDuration> ] ?
    )
}

<BillingIncrement> CLOSED {
    (  $<BillingIncrement_tes> rdf:type . * ;
       rdf:type [ <BillingIncrement> ] ?
    )
}

<BillingPeriod> CLOSED {
    (  $<BillingPeriod_tes> rdf:type . * ;
       rdf:type [ <BillingPeriod> ] ?
    )
}

<BillingStart> CLOSED {
    (  $<BillingStart_tes> rdf:type . * ;
       rdf:type [ <BillingStart> ] ?
    )
}

<BioChemEntity>  (
    CLOSED {
       (  $<BioChemEntity_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <hasRepresentation> @linkml:String * ;
             <associatedDisease> @linkml:String * ;
             <bioChemInteraction> @<BioChemEntity> * ;
             <bioChemSimilarity> @<BioChemEntity> * ;
             <biologicalRole> @<DefinedTerm> * ;
             <hasBioChemEntityPart> @<BioChemEntity> * ;
             <hasMolecularFunction> @linkml:String * ;
             <isEncodedByBioChemEntity> @<Gene> * ;
             <isInvolvedInBiologicalProcess> @linkml:String * ;
             <isLocatedInSubcellularLocation> @linkml:String * ;
             <isPartOfBioChemEntity> @<BioChemEntity> * ;
             <taxonomicRange> @linkml:String *
          ) ;
          rdf:type [ <BioChemEntity> ] ?
       )
    } OR @<ChemicalSubstance> OR @<Gene> OR @<MolecularEntity> OR @<Protein>
)

<BioChemInteraction> CLOSED {
    (  $<BioChemInteraction_tes> rdf:type . * ;
       rdf:type [ <BioChemInteraction> ] ?
    )
}

<BioChemSimilarity> CLOSED {
    (  $<BioChemSimilarity_tes> rdf:type . * ;
       rdf:type [ <BioChemSimilarity> ] ?
    )
}

<BiologicalRole> CLOSED {
    (  $<BiologicalRole_tes> rdf:type . * ;
       rdf:type [ <BiologicalRole> ] ?
    )
}

<BiomechnicalClass> CLOSED {
    (  $<BiomechnicalClass_tes> rdf:type . * ;
       rdf:type [ <BiomechnicalClass> ] ?
    )
}

<BirthDate> CLOSED {
    (  $<BirthDate_tes> rdf:type . * ;
       rdf:type [ <BirthDate> ] ?
    )
}

<BirthPlace> CLOSED {
    (  $<BirthPlace_tes> rdf:type . * ;
       rdf:type [ <BirthPlace> ] ?
    )
}

<Bitrate> CLOSED {
    (  $<Bitrate_tes> rdf:type . * ;
       rdf:type [ <Bitrate> ] ?
    )
}

<Blog> CLOSED {
    (  $<Blog_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <issn> @<Text> * ;
          <blogPost> @<BlogPosting> * ;
          <blogPosts> @<BlogPosting> *
       ) ;
       rdf:type [ <Blog> ] ?
    )
}

<BlogPost> CLOSED {
    (  $<BlogPost_tes> rdf:type . * ;
       rdf:type [ <BlogPost> ] ?
    )
}

<BlogPosting>  (
    CLOSED {
       (  $<BlogPosting_tes> (  &<SocialMediaPosting_tes> ;
             rdf:type [ <SocialMediaPosting> ] ?
          ) ;
          rdf:type [ <BlogPosting> ] ?
       )
    } OR @<LiveBlogPosting>
)

<BlogPosts> CLOSED {
    (  $<BlogPosts_tes> rdf:type . * ;
       rdf:type [ <BlogPosts> ] ?
    )
}

<BloodSupply> CLOSED {
    (  $<BloodSupply_tes> rdf:type . * ;
       rdf:type [ <BloodSupply> ] ?
    )
}

<BloodTest> CLOSED {
    (  $<BloodTest_tes> (  &<MedicalTest_tes> ;
          rdf:type [ <MedicalTest> ] ?
       ) ;
       rdf:type [ <BloodTest> ] ?
    )
}

<BoardingGroup> CLOSED {
    (  $<BoardingGroup_tes> rdf:type . * ;
       rdf:type [ <BoardingGroup> ] ?
    )
}

<BoardingPolicy> CLOSED {
    (  $<BoardingPolicy_tes> rdf:type . * ;
       rdf:type [ <BoardingPolicy> ] ?
    )
}

<BoardingPolicyType> CLOSED {
    (  $<BoardingPolicyType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <BoardingPolicyType> ] ?
    )
}

<BoatReservation> CLOSED {
    (  $<BoatReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ?
       ) ;
       rdf:type [ <BoatReservation> ] ?
    )
}

<BoatTerminal> CLOSED {
    (  $<BoatTerminal_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <BoatTerminal> ] ?
    )
}

<BoatTrip> CLOSED {
    (  $<BoatTrip_tes> (  &<Trip_tes> ;
          rdf:type [ <Trip> ] ? ;
          <arrivalBoatTerminal> @<BoatTerminal> * ;
          <departureBoatTerminal> @<BoatTerminal> *
       ) ;
       rdf:type [ <BoatTrip> ] ?
    )
}

<BodyLocation> CLOSED {
    (  $<BodyLocation_tes> rdf:type . * ;
       rdf:type [ <BodyLocation> ] ?
    )
}

<BodyMeasurementArm> CLOSED {
    (  $<BodyMeasurementArm_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementArm> ] ?
    )
}

<BodyMeasurementBust> CLOSED {
    (  $<BodyMeasurementBust_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementBust> ] ?
    )
}

<BodyMeasurementChest> CLOSED {
    (  $<BodyMeasurementChest_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementChest> ] ?
    )
}

<BodyMeasurementFoot> CLOSED {
    (  $<BodyMeasurementFoot_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementFoot> ] ?
    )
}

<BodyMeasurementHand> CLOSED {
    (  $<BodyMeasurementHand_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementHand> ] ?
    )
}

<BodyMeasurementHead> CLOSED {
    (  $<BodyMeasurementHead_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementHead> ] ?
    )
}

<BodyMeasurementHeight> CLOSED {
    (  $<BodyMeasurementHeight_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementHeight> ] ?
    )
}

<BodyMeasurementHips> CLOSED {
    (  $<BodyMeasurementHips_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementHips> ] ?
    )
}

<BodyMeasurementInsideLeg> CLOSED {
    (  $<BodyMeasurementInsideLeg_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementInsideLeg> ] ?
    )
}

<BodyMeasurementNeck> CLOSED {
    (  $<BodyMeasurementNeck_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementNeck> ] ?
    )
}

<BodyMeasurementTypeEnumeration> CLOSED {
    (  $<BodyMeasurementTypeEnumeration_tes> (  &<MeasurementTypeEnumeration_tes> ;
          rdf:type [ <MeasurementTypeEnumeration> ] ?
       ) ;
       rdf:type [ <BodyMeasurementTypeEnumeration> ] ?
    )
}

<BodyMeasurementUnderbust> CLOSED {
    (  $<BodyMeasurementUnderbust_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementUnderbust> ] ?
    )
}

<BodyMeasurementWaist> CLOSED {
    (  $<BodyMeasurementWaist_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementWaist> ] ?
    )
}

<BodyMeasurementWeight> CLOSED {
    (  $<BodyMeasurementWeight_tes> rdf:type . * ;
       rdf:type [ <BodyMeasurementWeight> ] ?
    )
}

<BodyOfWater>  (
    CLOSED {
       (  $<BodyOfWater_tes> (  &<Landform_tes> ;
             rdf:type [ <Landform> ] ?
          ) ;
          rdf:type [ <BodyOfWater> ] ?
       )
    } OR @<Canal> OR @<LakeBodyOfWater> OR @<OceanBodyOfWater> OR @<Pond> OR @<Reservoir> OR @<RiverBodyOfWater> OR
    @<SeaBodyOfWater> OR @<Waterfall>
)

<BodyType> CLOSED {
    (  $<BodyType_tes> rdf:type . * ;
       rdf:type [ <BodyType> ] ?
    )
}

<Bone> CLOSED {
    (  $<Bone_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ?
       ) ;
       rdf:type [ <Bone> ] ?
    )
}

<Book> CLOSED {
    (  $<Book_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <isbn> @<Text> * ;
          <abridged> @<Boolean> * ;
          <bookEdition> @<Text> * ;
          <bookFormat> @<BookFormatType> * ;
          <illustrator> @<Person> * ;
          <numberOfPages> @<Integer> *
       ) ;
       rdf:type [ <Book> ] ?
    )
}

<BookEdition> CLOSED {
    (  $<BookEdition_tes> rdf:type . * ;
       rdf:type [ <BookEdition> ] ?
    )
}

<BookFormat> CLOSED {
    (  $<BookFormat_tes> rdf:type . * ;
       rdf:type [ <BookFormat> ] ?
    )
}

<BookFormatType> CLOSED {
    (  $<BookFormatType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <BookFormatType> ] ?
    )
}

<BookingAgent> CLOSED {
    (  $<BookingAgent_tes> rdf:type . * ;
       rdf:type [ <BookingAgent> ] ?
    )
}

<BookingTime> CLOSED {
    (  $<BookingTime_tes> rdf:type . * ;
       rdf:type [ <BookingTime> ] ?
    )
}

<BookmarkAction> CLOSED {
    (  $<BookmarkAction_tes> (  &<OrganizeAction_tes> ;
          rdf:type [ <OrganizeAction> ] ?
       ) ;
       rdf:type [ <BookmarkAction> ] ?
    )
}

<BookSeries> CLOSED {
    (  $<BookSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ?
       ) ;
       rdf:type [ <BookSeries> ] ?
    )
}

<BookStore> CLOSED {
    (  $<BookStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <BookStore> ] ?
    )
}

<Boolean> CLOSED {
    (  $<Boolean_tes> rdf:type . * ;
       rdf:type [ <Boolean> ] ?
    )
}

<BorrowAction> CLOSED {
    (  $<BorrowAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <lender> @linkml:String *
       ) ;
       rdf:type [ <BorrowAction> ] ?
    )
}

<BowlingAlley> CLOSED {
    (  $<BowlingAlley_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <BowlingAlley> ] ?
    )
}

<Box> CLOSED {
    (  $<Box_tes> rdf:type . * ;
       rdf:type [ <Box> ] ?
    )
}

<BrainStructure> CLOSED {
    (  $<BrainStructure_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ?
       ) ;
       rdf:type [ <BrainStructure> ] ?
    )
}

<Branch> CLOSED {
    (  $<Branch_tes> rdf:type . * ;
       rdf:type [ <Branch> ] ?
    )
}

<BranchCode> CLOSED {
    (  $<BranchCode_tes> rdf:type . * ;
       rdf:type [ <BranchCode> ] ?
    )
}

<BranchOf> CLOSED {
    (  $<BranchOf_tes> rdf:type . * ;
       rdf:type [ <BranchOf> ] ?
    )
}

<Brand> CLOSED {
    (  $<Brand_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <logo> @linkml:String * ;
          <aggregateRating> @<AggregateRating> * ;
          <review> @<Review> * ;
          <slogan> @<Text> *
       ) ;
       rdf:type [ <Brand> ] ?
    )
}

<Brand> CLOSED {
    (  $<Brand_tes> rdf:type . * ;
       rdf:type [ <Brand> ] ?
    )
}

<Breadcrumb> CLOSED {
    (  $<Breadcrumb_tes> rdf:type . * ;
       rdf:type [ <Breadcrumb> ] ?
    )
}

<BreadcrumbList> CLOSED {
    (  $<BreadcrumbList_tes> (  &<ItemList_tes> ;
          rdf:type [ <ItemList> ] ?
       ) ;
       rdf:type [ <BreadcrumbList> ] ?
    )
}

<BreastfeedingWarning> CLOSED {
    (  $<BreastfeedingWarning_tes> rdf:type . * ;
       rdf:type [ <BreastfeedingWarning> ] ?
    )
}

<Brewery> CLOSED {
    (  $<Brewery_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <Brewery> ] ?
    )
}

<Bridge> CLOSED {
    (  $<Bridge_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Bridge> ] ?
    )
}

<BroadcastAffiliateOf> CLOSED {
    (  $<BroadcastAffiliateOf_tes> rdf:type . * ;
       rdf:type [ <BroadcastAffiliateOf> ] ?
    )
}

<BroadcastChannel>  (
    CLOSED {
       (  $<BroadcastChannel_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <genre> @linkml:String * ;
             <broadcastChannelId> @<Text> * ;
             <broadcastFrequency> @linkml:String * ;
             <broadcastServiceTier> @<Text> * ;
             <inBroadcastLineup> @<CableOrSatelliteService> * ;
             <providesBroadcastService> @<BroadcastService> *
          ) ;
          rdf:type [ <BroadcastChannel> ] ?
       )
    } OR @<RadioChannel> OR @<TelevisionChannel>
)

<BroadcastChannelId> CLOSED {
    (  $<BroadcastChannelId_tes> rdf:type . * ;
       rdf:type [ <BroadcastChannelId> ] ?
    )
}

<BroadcastDisplayName> CLOSED {
    (  $<BroadcastDisplayName_tes> rdf:type . * ;
       rdf:type [ <BroadcastDisplayName> ] ?
    )
}

<Broadcaster> CLOSED {
    (  $<Broadcaster_tes> rdf:type . * ;
       rdf:type [ <Broadcaster> ] ?
    )
}

<BroadcastEvent> CLOSED {
    (  $<BroadcastEvent_tes> (  &<PublicationEvent_tes> ;
          rdf:type [ <PublicationEvent> ] ? ;
          <broadcastOfEvent> @<Event> * ;
          <isLiveBroadcast> @<Boolean> * ;
          <subtitleLanguage> @linkml:String * ;
          <videoFormat> @<Text> *
       ) ;
       rdf:type [ <BroadcastEvent> ] ?
    )
}

<BroadcastFrequency> CLOSED {
    (  $<BroadcastFrequency_tes> rdf:type . * ;
       rdf:type [ <BroadcastFrequency> ] ?
    )
}

<BroadcastFrequencySpecification> CLOSED {
    (  $<BroadcastFrequencySpecification_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <broadcastFrequencyValue> @linkml:String * ;
          <broadcastSignalModulation> @linkml:String * ;
          <broadcastSubChannel> @<Text> *
       ) ;
       rdf:type [ <BroadcastFrequencySpecification> ] ?
    )
}

<BroadcastFrequencyValue> CLOSED {
    (  $<BroadcastFrequencyValue_tes> rdf:type . * ;
       rdf:type [ <BroadcastFrequencyValue> ] ?
    )
}

<BroadcastOfEvent> CLOSED {
    (  $<BroadcastOfEvent_tes> rdf:type . * ;
       rdf:type [ <BroadcastOfEvent> ] ?
    )
}

<BroadcastRelease> CLOSED {
    (  $<BroadcastRelease_tes> rdf:type . * ;
       rdf:type [ <BroadcastRelease> ] ?
    )
}

<BroadcastService>  (
    CLOSED {
       (  $<BroadcastService_tes> (  &<Service_tes> ;
             rdf:type [ <Service> ] ? ;
             <callSign> @<Text> * ;
             <area> @<Place> * ;
             <broadcastAffiliateOf> @<Organization> * ;
             <broadcastDisplayName> @<Text> * ;
             <broadcastFrequency> @linkml:String * ;
             <broadcastTimezone> @<Text> * ;
             <broadcaster> @<Organization> * ;
             <hasBroadcastChannel> @<BroadcastChannel> * ;
             <inLanguage> @linkml:String * ;
             <parentService> @<BroadcastService> * ;
             <videoFormat> @<Text> *
          ) ;
          rdf:type [ <BroadcastService> ] ?
       )
    } OR @<RadioBroadcastService>
)

<BroadcastServiceTier> CLOSED {
    (  $<BroadcastServiceTier_tes> rdf:type . * ;
       rdf:type [ <BroadcastServiceTier> ] ?
    )
}

<BroadcastSignalModulation> CLOSED {
    (  $<BroadcastSignalModulation_tes> rdf:type . * ;
       rdf:type [ <BroadcastSignalModulation> ] ?
    )
}

<BroadcastSubChannel> CLOSED {
    (  $<BroadcastSubChannel_tes> rdf:type . * ;
       rdf:type [ <BroadcastSubChannel> ] ?
    )
}

<BroadcastTimezone> CLOSED {
    (  $<BroadcastTimezone_tes> rdf:type . * ;
       rdf:type [ <BroadcastTimezone> ] ?
    )
}

<Broker> CLOSED {
    (  $<Broker_tes> rdf:type . * ;
       rdf:type [ <Broker> ] ?
    )
}

<BrokerageAccount> CLOSED {
    (  $<BrokerageAccount_tes> (  &<InvestmentOrDeposit_tes> ;
          rdf:type [ <InvestmentOrDeposit> ] ?
       ) ;
       rdf:type [ <BrokerageAccount> ] ?
    )
}

<BrowserRequirements> CLOSED {
    (  $<BrowserRequirements_tes> rdf:type . * ;
       rdf:type [ <BrowserRequirements> ] ?
    )
}

<BuddhistTemple> CLOSED {
    (  $<BuddhistTemple_tes> (  &<PlaceOfWorship_tes> ;
          rdf:type [ <PlaceOfWorship> ] ?
       ) ;
       rdf:type [ <BuddhistTemple> ] ?
    )
}

<BusinessAudience> CLOSED {
    (  $<BusinessAudience_tes> (  &<Audience_tes> ;
          rdf:type [ <Audience> ] ? ;
          <numberOfEmployees> @<QuantitativeValue> * ;
          <yearlyRevenue> @<QuantitativeValue> * ;
          <yearsInOperation> @<QuantitativeValue> *
       ) ;
       rdf:type [ <BusinessAudience> ] ?
    )
}

<BusinessDays> CLOSED {
    (  $<BusinessDays_tes> rdf:type . * ;
       rdf:type [ <BusinessDays> ] ?
    )
}

<BusinessEntityType> CLOSED {
    (  $<BusinessEntityType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <BusinessEntityType> ] ?
    )
}

<BusinessEvent> CLOSED {
    (  $<BusinessEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <BusinessEvent> ] ?
    )
}

<BusinessFunction> CLOSED {
    (  $<BusinessFunction_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <BusinessFunction> ] ?
    )
}

<BusinessFunction> CLOSED {
    (  $<BusinessFunction_tes> rdf:type . * ;
       rdf:type [ <BusinessFunction> ] ?
    )
}

<BusinessSupport> CLOSED {
    (  $<BusinessSupport_tes> rdf:type . * ;
       rdf:type [ <BusinessSupport> ] ?
    )
}

<BusName> CLOSED {
    (  $<BusName_tes> rdf:type . * ;
       rdf:type [ <BusName> ] ?
    )
}

<BusNumber> CLOSED {
    (  $<BusNumber_tes> rdf:type . * ;
       rdf:type [ <BusNumber> ] ?
    )
}

<BusOrCoach> CLOSED {
    (  $<BusOrCoach_tes> (  &<Vehicle_tes> ;
          rdf:type [ <Vehicle> ] ? ;
          <acrissCode> @<Text> * ;
          <roofLoad> @<QuantitativeValue> *
       ) ;
       rdf:type [ <BusOrCoach> ] ?
    )
}

<BusReservation> CLOSED {
    (  $<BusReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ?
       ) ;
       rdf:type [ <BusReservation> ] ?
    )
}

<BusStation> CLOSED {
    (  $<BusStation_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <BusStation> ] ?
    )
}

<BusStop> CLOSED {
    (  $<BusStop_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <BusStop> ] ?
    )
}

<BusTrip> CLOSED {
    (  $<BusTrip_tes> (  &<Trip_tes> ;
          rdf:type [ <Trip> ] ? ;
          <arrivalBusStop> @linkml:String * ;
          <busName> @<Text> * ;
          <busNumber> @<Text> * ;
          <departureBusStop> @linkml:String *
       ) ;
       rdf:type [ <BusTrip> ] ?
    )
}

<BuyAction> CLOSED {
    (  $<BuyAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <seller> @linkml:String * ;
          <vendor> @linkml:String * ;
          <warrantyPromise> @<WarrantyPromise> *
       ) ;
       rdf:type [ <BuyAction> ] ?
    )
}

<ByArtist> CLOSED {
    (  $<ByArtist_tes> rdf:type . * ;
       rdf:type [ <ByArtist> ] ?
    )
}

<ByDay> CLOSED {
    (  $<ByDay_tes> rdf:type . * ;
       rdf:type [ <ByDay> ] ?
    )
}

<ByMonth> CLOSED {
    (  $<ByMonth_tes> rdf:type . * ;
       rdf:type [ <ByMonth> ] ?
    )
}

<ByMonthDay> CLOSED {
    (  $<ByMonthDay_tes> rdf:type . * ;
       rdf:type [ <ByMonthDay> ] ?
    )
}

<ByMonthWeek> CLOSED {
    (  $<ByMonthWeek_tes> rdf:type . * ;
       rdf:type [ <ByMonthWeek> ] ?
    )
}

<CableOrSatelliteService> CLOSED {
    (  $<CableOrSatelliteService_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ?
       ) ;
       rdf:type [ <CableOrSatelliteService> ] ?
    )
}

<CafeOrCoffeeShop> CLOSED {
    (  $<CafeOrCoffeeShop_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <CafeOrCoffeeShop> ] ?
    )
}

<Calories> CLOSED {
    (  $<Calories_tes> rdf:type . * ;
       rdf:type [ <Calories> ] ?
    )
}

<Campground> CLOSED {
    (  $<Campground_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ? ;
          &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ? ;
          <branchOf> @<Organization> * ;
          <currenciesAccepted> @<Text> * ;
          <paymentAccepted> @<Text> * ;
          <priceRange> @<Text> * ;
          <actionableFeedbackPolicy> @linkml:String * ;
          <areaServed> @linkml:String * ;
          <correctionsPolicy> @linkml:String * ;
          <diversityStaffingReport> @linkml:String * ;
          <duns> @<Text> * ;
          <funder> @linkml:String * ;
          <leiCode> @<Text> * ;
          <location> @linkml:String * ;
          <memberOf> @linkml:String * ;
          <ownershipFundingInfo> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <sponsor> @linkml:String * ;
          <taxID> @<Text> * ;
          <unnamedSourcesPolicy> @linkml:String * ;
          <alumni> @<Person> * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <brand> @linkml:String * ;
          <contactPoint> @<ContactPoint> * ;
          <contactPoints> @<ContactPoint> * ;
          <department> @<Organization> * ;
          <dissolutionDate> @<Date> * ;
          <diversityPolicy> @linkml:String * ;
          <email> @<Text> * ;
          <employee> @<Person> * ;
          <employees> @<Person> * ;
          <ethicsPolicy> @linkml:String * ;
          <founder> @<Person> * ;
          <founders> @<Person> * ;
          <foundingDate> @<Date> * ;
          <foundingLocation> @<Place> * ;
          <hasCredential> @<EducationalOccupationalCredential> * ;
          <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
          <hasOfferCatalog> @<OfferCatalog> * ;
          <hasPOS> @<Place> * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <knowsAbout> @linkml:String * ;
          <knowsLanguage> @linkml:String * ;
          <legalName> @<Text> * ;
          <makesOffer> @<Offer> * ;
          <member> @linkml:String * ;
          <members> @linkml:String * ;
          <naics> @<Text> * ;
          <nonprofitStatus> @<NonprofitType> * ;
          <numberOfEmployees> @<QuantitativeValue> * ;
          <owns> @linkml:String * ;
          <parentOrganization> @<Organization> * ;
          <seeks> @<Demand> * ;
          <serviceArea> @linkml:String * ;
          <subOrganization> @<Organization> * ;
          <vatID> @<Text> * ;
          <audience> @<Audience> * ;
          <availableLanguage> @linkml:String * ;
          <checkinTime> @linkml:String * ;
          <checkoutTime> @linkml:String * ;
          <numberOfRooms> @linkml:String * ;
          <petsAllowed> @linkml:String * ;
          <starRating> @<Rating> *
       ) ;
       rdf:type [ <Campground> ] ?
    )
}

<CampingPitch> CLOSED {
    (  $<CampingPitch_tes> (  &<Accommodation_tes> ;
          rdf:type [ <Accommodation> ] ?
       ) ;
       rdf:type [ <CampingPitch> ] ?
    )
}

<Canal> CLOSED {
    (  $<Canal_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <Canal> ] ?
    )
}

<CancelAction> CLOSED {
    (  $<CancelAction_tes> (  &<PlanAction_tes> ;
          rdf:type [ <PlanAction> ] ?
       ) ;
       rdf:type [ <CancelAction> ] ?
    )
}

<Car> CLOSED {
    (  $<Car_tes> (  &<Vehicle_tes> ;
          rdf:type [ <Vehicle> ] ? ;
          <acrissCode> @<Text> * ;
          <roofLoad> @<QuantitativeValue> *
       ) ;
       rdf:type [ <Car> ] ?
    )
}

<CarbohydrateContent> CLOSED {
    (  $<CarbohydrateContent_tes> rdf:type . * ;
       rdf:type [ <CarbohydrateContent> ] ?
    )
}

<Cardiovascular> CLOSED {
    (  $<Cardiovascular_tes> rdf:type . * ;
       rdf:type [ <Cardiovascular> ] ?
    )
}

<CardiovascularExam> CLOSED {
    (  $<CardiovascularExam_tes> rdf:type . * ;
       rdf:type [ <CardiovascularExam> ] ?
    )
}

<CargoVolume> CLOSED {
    (  $<CargoVolume_tes> rdf:type . * ;
       rdf:type [ <CargoVolume> ] ?
    )
}

<Carrier> CLOSED {
    (  $<Carrier_tes> rdf:type . * ;
       rdf:type [ <Carrier> ] ?
    )
}

<CarrierRequirements> CLOSED {
    (  $<CarrierRequirements_tes> rdf:type . * ;
       rdf:type [ <CarrierRequirements> ] ?
    )
}

<CarUsageType> CLOSED {
    (  $<CarUsageType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <CarUsageType> ] ?
    )
}

<CaseSeries> CLOSED {
    (  $<CaseSeries_tes> rdf:type . * ;
       rdf:type [ <CaseSeries> ] ?
    )
}

<CashBack> CLOSED {
    (  $<CashBack_tes> rdf:type . * ;
       rdf:type [ <CashBack> ] ?
    )
}

<Casino> CLOSED {
    (  $<Casino_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <Casino> ] ?
    )
}

<CassetteFormat> CLOSED {
    (  $<CassetteFormat_tes> rdf:type . * ;
       rdf:type [ <CassetteFormat> ] ?
    )
}

<Catalog> CLOSED {
    (  $<Catalog_tes> rdf:type . * ;
       rdf:type [ dcat:Catalog ] ?
    )
}

<Catalog> CLOSED {
    (  $<Catalog_tes> rdf:type . * ;
       rdf:type [ <Catalog> ] ?
    )
}

<CatalogNumber> CLOSED {
    (  $<CatalogNumber_tes> rdf:type . * ;
       rdf:type [ <CatalogNumber> ] ?
    )
}

<CategoryCode>  (
    CLOSED {
       (  $<CategoryCode_tes> (  &<DefinedTerm_tes> ;
             rdf:type [ <DefinedTerm> ] ? ;
             <codeValue> @<Text> * ;
             <inCodeSet> @linkml:String *
          ) ;
          rdf:type [ <CategoryCode> ] ?
       )
    } OR @<MedicalCode>
)

<CategoryCodeSet> CLOSED {
    (  $<CategoryCodeSet_tes> (  &<DefinedTermSet_tes> ;
          rdf:type [ <DefinedTermSet> ] ? ;
          <hasCategoryCode> @<CategoryCode> *
       ) ;
       rdf:type [ <CategoryCodeSet> ] ?
    )
}

<CatholicChurch> CLOSED {
    (  $<CatholicChurch_tes> (  &<Church_tes> ;
          rdf:type [ <Church> ] ?
       ) ;
       rdf:type [ <CatholicChurch> ] ?
    )
}

<CauseOf> CLOSED {
    (  $<CauseOf_tes> rdf:type . * ;
       rdf:type [ <CauseOf> ] ?
    )
}

<CausesHealthAspect> CLOSED {
    (  $<CausesHealthAspect_tes> rdf:type . * ;
       rdf:type [ <CausesHealthAspect> ] ?
    )
}

<CDCPMDRecord> CLOSED {
    (  $<CDCPMDRecord_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <cvdCollectionDate> @linkml:String * ;
          <cvdFacilityCounty> @<Text> * ;
          <cvdFacilityId> @<Text> * ;
          <cvdNumBeds> @<Number> * ;
          <cvdNumBedsOcc> @<Number> * ;
          <cvdNumC19Died> @<Number> * ;
          <cvdNumC19HOPats> @<Number> * ;
          <cvdNumC19HospPats> @<Number> * ;
          <cvdNumC19MechVentPats> @<Number> * ;
          <cvdNumC19OFMechVentPats> @<Number> * ;
          <cvdNumC19OverflowPats> @<Number> * ;
          <cvdNumICUBeds> @<Number> * ;
          <cvdNumICUBedsOcc> @<Number> * ;
          <cvdNumTotBeds> @<Number> * ;
          <cvdNumVent> @<Number> * ;
          <cvdNumVentUse> @<Number> * ;
          <datePosted> @linkml:String *
       ) ;
       rdf:type [ <CDCPMDRecord> ] ?
    )
}

<CDFormat> CLOSED {
    (  $<CDFormat_tes> rdf:type . * ;
       rdf:type [ <CDFormat> ] ?
    )
}

<Cemetery> CLOSED {
    (  $<Cemetery_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Cemetery> ] ?
    )
}

<Chapter> CLOSED {
    (  $<Chapter_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <pageEnd> @linkml:String * ;
          <pageStart> @linkml:String * ;
          <pagination> @<Text> *
       ) ;
       rdf:type [ <Chapter> ] ?
    )
}

<Character> CLOSED {
    (  $<Character_tes> rdf:type . * ;
       rdf:type [ <Character> ] ?
    )
}

<CharacterAttribute> CLOSED {
    (  $<CharacterAttribute_tes> rdf:type . * ;
       rdf:type [ <CharacterAttribute> ] ?
    )
}

<CharacterName> CLOSED {
    (  $<CharacterName_tes> rdf:type . * ;
       rdf:type [ <CharacterName> ] ?
    )
}

<CharitableIncorporatedOrganization> CLOSED {
    (  $<CharitableIncorporatedOrganization_tes> rdf:type . * ;
       rdf:type [ <CharitableIncorporatedOrganization> ] ?
    )
}

<CheatCode> CLOSED {
    (  $<CheatCode_tes> rdf:type . * ;
       rdf:type [ <CheatCode> ] ?
    )
}

<CheckAction> CLOSED {
    (  $<CheckAction_tes> (  &<FindAction_tes> ;
          rdf:type [ <FindAction> ] ?
       ) ;
       rdf:type [ <CheckAction> ] ?
    )
}

<CheckInAction> CLOSED {
    (  $<CheckInAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ?
       ) ;
       rdf:type [ <CheckInAction> ] ?
    )
}

<CheckinTime> CLOSED {
    (  $<CheckinTime_tes> rdf:type . * ;
       rdf:type [ <CheckinTime> ] ?
    )
}

<CheckOutAction> CLOSED {
    (  $<CheckOutAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ?
       ) ;
       rdf:type [ <CheckOutAction> ] ?
    )
}

<CheckoutPage> CLOSED {
    (  $<CheckoutPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <CheckoutPage> ] ?
    )
}

<CheckoutTime> CLOSED {
    (  $<CheckoutTime_tes> rdf:type . * ;
       rdf:type [ <CheckoutTime> ] ?
    )
}

<ChemicalComposition> CLOSED {
    (  $<ChemicalComposition_tes> rdf:type . * ;
       rdf:type [ <ChemicalComposition> ] ?
    )
}

<ChemicalRole> CLOSED {
    (  $<ChemicalRole_tes> rdf:type . * ;
       rdf:type [ <ChemicalRole> ] ?
    )
}

<ChemicalSubstance> CLOSED {
    (  $<ChemicalSubstance_tes> (  &<BioChemEntity_tes> ;
          rdf:type [ <BioChemEntity> ] ? ;
          <chemicalComposition> @<Text> * ;
          <chemicalRole> @<DefinedTerm> * ;
          <potentialUse> @<DefinedTerm> *
       ) ;
       rdf:type [ <ChemicalSubstance> ] ?
    )
}

<ChildCare> CLOSED {
    (  $<ChildCare_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <ChildCare> ] ?
    )
}

<ChildMaxAge> CLOSED {
    (  $<ChildMaxAge_tes> rdf:type . * ;
       rdf:type [ <ChildMaxAge> ] ?
    )
}

<ChildMinAge> CLOSED {
    (  $<ChildMinAge_tes> rdf:type . * ;
       rdf:type [ <ChildMinAge> ] ?
    )
}

<Children> CLOSED {
    (  $<Children_tes> rdf:type . * ;
       rdf:type [ <Children> ] ?
    )
}

<ChildrensEvent> CLOSED {
    (  $<ChildrensEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <ChildrensEvent> ] ?
    )
}

<ChildTaxon> CLOSED {
    (  $<ChildTaxon_tes> rdf:type . * ;
       rdf:type [ <ChildTaxon> ] ?
    )
}

<Chiropractic> CLOSED {
    (  $<Chiropractic_tes> rdf:type . * ;
       rdf:type [ <Chiropractic> ] ?
    )
}

<CholesterolContent> CLOSED {
    (  $<CholesterolContent_tes> rdf:type . * ;
       rdf:type [ <CholesterolContent> ] ?
    )
}

<ChooseAction>  (
    CLOSED {
       (  $<ChooseAction_tes> (  &<AssessAction_tes> ;
             rdf:type [ <AssessAction> ] ? ;
             <actionOption> @<Thing> * ;
             <option> @<Thing> *
          ) ;
          rdf:type [ <ChooseAction> ] ?
       )
    } OR @<VoteAction>
)

<Church>  (
    CLOSED {
       (  $<Church_tes> (  &<PlaceOfWorship_tes> ;
             rdf:type [ <PlaceOfWorship> ] ?
          ) ;
          rdf:type [ <Church> ] ?
       )
    } OR @<CatholicChurch>
)

<Circle> CLOSED {
    (  $<Circle_tes> rdf:type . * ;
       rdf:type [ <Circle> ] ?
    )
}

<Citation> CLOSED {
    (  $<Citation_tes> rdf:type . * ;
       rdf:type [ <Citation> ] ?
    )
}

<City> CLOSED {
    (  $<City_tes> (  &<AdministrativeArea_tes> ;
          rdf:type [ <AdministrativeArea> ] ?
       ) ;
       rdf:type [ <City> ] ?
    )
}

<CityHall> CLOSED {
    (  $<CityHall_tes> (  &<GovernmentBuilding_tes> ;
          rdf:type [ <GovernmentBuilding> ] ?
       ) ;
       rdf:type [ <CityHall> ] ?
    )
}

<CivicStructure>  (
    CLOSED {
       (  $<CivicStructure_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ? ;
             <openingHours> @<Text> *
          ) ;
          rdf:type [ <CivicStructure> ] ?
       )
    } OR @<Airport> OR @<Aquarium> OR @<Beach> OR @<BoatTerminal> OR @<Bridge> OR @<BusStation> OR @<BusStop> OR @<Campground> OR
    @<Cemetery> OR @<Crematorium> OR @<EducationalOrganization> OR @<EventVenue> OR @<GovernmentBuilding> OR @<Museum> OR
    @<MusicVenue> OR @<Park> OR @<ParkingFacility> OR @<PerformingArtsTheater> OR @<PlaceOfWorship> OR @<Playground> OR
    @<PublicToilet> OR @<RVPark> OR @<SubwayStation> OR @<TaxiStand> OR @<TrainStation> OR @<Zoo>
)

<Claim> CLOSED {
    (  $<Claim_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <appearance> @<CreativeWork> * ;
          <firstAppearance> @<CreativeWork> * ;
          <claimInterpreter> @linkml:String *
       ) ;
       rdf:type [ <Claim> ] ?
    )
}

<ClaimInterpreter> CLOSED {
    (  $<ClaimInterpreter_tes> rdf:type . * ;
       rdf:type [ <ClaimInterpreter> ] ?
    )
}

<ClaimReview> CLOSED {
    (  $<ClaimReview_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ? ;
          <claimReviewed> @<Text> *
       ) ;
       rdf:type [ <ClaimReview> ] ?
    )
}

<ClaimReviewed> CLOSED {
    (  $<ClaimReviewed_tes> rdf:type . * ;
       rdf:type [ <ClaimReviewed> ] ?
    )
}

<Class>  (
    CLOSED {
       (  $<Class_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <supersededBy> @linkml:String *
          ) ;
          rdf:type [ <Class> ] ?
       )
    } OR @<DataType>
)

<CleaningFee> CLOSED {
    (  $<CleaningFee_tes> rdf:type . * ;
       rdf:type [ <CleaningFee> ] ?
    )
}

<ClincalPharmacology> CLOSED {
    (  $<ClincalPharmacology_tes> rdf:type . * ;
       rdf:type [ <ClincalPharmacology> ] ?
    )
}

<ClinicalPharmacology> CLOSED {
    (  $<ClinicalPharmacology_tes> rdf:type . * ;
       rdf:type [ <ClinicalPharmacology> ] ?
    )
}

<Clinician> CLOSED {
    (  $<Clinician_tes> rdf:type . * ;
       rdf:type [ <Clinician> ] ?
    )
}

<Clip>  (
    CLOSED {
       (  $<Clip_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <actor> @<Person> * ;
             <clipNumber> @linkml:String * ;
             <partOfEpisode> @<Episode> * ;
             <partOfSeason> @<CreativeWorkSeason> * ;
             <partOfSeries> @<CreativeWorkSeries> * ;
             <actors> @<Person> * ;
             <director> @<Person> * ;
             <directors> @<Person> * ;
             <endOffset> @linkml:String * ;
             <musicBy> @linkml:String * ;
             <startOffset> @linkml:String *
          ) ;
          rdf:type [ <Clip> ] ?
       )
    } OR @<MovieClip> OR @<RadioClip> OR @<TVClip> OR @<VideoGameClip>
)

<Closes> CLOSED {
    (  $<Closes_tes> rdf:type . * ;
       rdf:type [ <Closes> ] ?
    )
}

<ClothingStore> CLOSED {
    (  $<ClothingStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ClothingStore> ] ?
    )
}

<Coach> CLOSED {
    (  $<Coach_tes> rdf:type . * ;
       rdf:type [ <Coach> ] ?
    )
}

<Code> CLOSED {
    (  $<Code_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Code> ] ?
    )
}

<Code> CLOSED {
    (  $<Code_tes> rdf:type . * ;
       rdf:type [ <Code> ] ?
    )
}

<CodeRepository> CLOSED {
    (  $<CodeRepository_tes> rdf:type . * ;
       rdf:type [ <CodeRepository> ] ?
    )
}

<CodeSampleType> CLOSED {
    (  $<CodeSampleType_tes> rdf:type . * ;
       rdf:type [ <CodeSampleType> ] ?
    )
}

<CodingSystem> CLOSED {
    (  $<CodingSystem_tes> rdf:type . * ;
       rdf:type [ <CodingSystem> ] ?
    )
}

<CohortStudy> CLOSED {
    (  $<CohortStudy_tes> rdf:type . * ;
       rdf:type [ <CohortStudy> ] ?
    )
}

<Colleague> CLOSED {
    (  $<Colleague_tes> rdf:type . * ;
       rdf:type [ <Colleague> ] ?
    )
}

<Colleagues> CLOSED {
    (  $<Colleagues_tes> rdf:type . * ;
       rdf:type [ <Colleagues> ] ?
    )
}

<Collection>  (
    CLOSED {
       (  $<Collection_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <collectionSize> @<Integer> *
          ) ;
          rdf:type [ <Collection> ] ?
       )
    } OR @<ProductCollection>
)

<CollectionPage>  (
    CLOSED {
       (  $<CollectionPage_tes> (  &<WebPage_tes> ;
             rdf:type [ <WebPage> ] ?
          ) ;
          rdf:type [ <CollectionPage> ] ?
       )
    } OR @<MediaGallery>
)

<CollectionSize> CLOSED {
    (  $<CollectionSize_tes> rdf:type . * ;
       rdf:type [ <CollectionSize> ] ?
    )
}

<CollegeOrUniversity> CLOSED {
    (  $<CollegeOrUniversity_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <CollegeOrUniversity> ] ?
    )
}

<Color> CLOSED {
    (  $<Color_tes> rdf:type . * ;
       rdf:type [ <Color> ] ?
    )
}

<Colorist> CLOSED {
    (  $<Colorist_tes> rdf:type . * ;
       rdf:type [ <Colorist> ] ?
    )
}

<ComedyClub> CLOSED {
    (  $<ComedyClub_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <ComedyClub> ] ?
    )
}

<ComedyEvent> CLOSED {
    (  $<ComedyEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <ComedyEvent> ] ?
    )
}

<ComicCoverArt> CLOSED {
    (  $<ComicCoverArt_tes> (  &<CoverArt_tes> ;
          rdf:type [ <CoverArt> ] ? ;
          &<ComicStory_tes> ;
          rdf:type [ <ComicStory> ] ?
       ) ;
       rdf:type [ <ComicCoverArt> ] ?
    )
}

<ComicIssue> CLOSED {
    (  $<ComicIssue_tes> (  &<PublicationIssue_tes> ;
          rdf:type [ <PublicationIssue> ] ? ;
          <artist> @<Person> * ;
          <colorist> @<Person> * ;
          <inker> @<Person> * ;
          <letterer> @<Person> * ;
          <penciler> @<Person> * ;
          <variantCover> @<Text> *
       ) ;
       rdf:type [ <ComicIssue> ] ?
    )
}

<ComicSeries> CLOSED {
    (  $<ComicSeries_tes> (  &<Periodical_tes> ;
          rdf:type [ <Periodical> ] ?
       ) ;
       rdf:type [ <ComicSeries> ] ?
    )
}

<ComicStory> CLOSED {
    (  $<ComicStory_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <artist> @<Person> * ;
          <colorist> @<Person> * ;
          <inker> @<Person> * ;
          <letterer> @<Person> * ;
          <penciler> @<Person> *
       ) ;
       rdf:type [ <ComicStory> ] ?
    )
}

<Comment>  (
    CLOSED {
       (  $<Comment_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <downvoteCount> @<Integer> * ;
             <parentItem> @<Comment> * ;
             <upvoteCount> @<Integer> *
          ) ;
          rdf:type [ <Comment> ] ?
       )
    } OR @<Answer> OR @<CorrectionComment> OR @<Question>
)

<Comment> CLOSED {
    (  $<Comment_tes> rdf:type . * ;
       rdf:type [ <Comment> ] ?
    )
}

<CommentAction> CLOSED {
    (  $<CommentAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ? ;
          <resultComment> @<Comment> *
       ) ;
       rdf:type [ <CommentAction> ] ?
    )
}

<CommentCount> CLOSED {
    (  $<CommentCount_tes> rdf:type . * ;
       rdf:type [ <CommentCount> ] ?
    )
}

<CommentPermission> CLOSED {
    (  $<CommentPermission_tes> rdf:type . * ;
       rdf:type [ <CommentPermission> ] ?
    )
}

<CommentText> CLOSED {
    (  $<CommentText_tes> rdf:type . * ;
       rdf:type [ <CommentText> ] ?
    )
}

<CommentTime> CLOSED {
    (  $<CommentTime_tes> rdf:type . * ;
       rdf:type [ <CommentTime> ] ?
    )
}

<CommunicateAction>  (
    CLOSED {
       (  $<CommunicateAction_tes> (  &<InteractAction_tes> ;
             rdf:type [ <InteractAction> ] ? ;
             <about> @<Thing> * ;
             <language> @<Language> * ;
             <recipient> @linkml:String * ;
             <inLanguage> @linkml:String *
          ) ;
          rdf:type [ <CommunicateAction> ] ?
       )
    } OR @<AskAction> OR @<CheckInAction> OR @<CheckOutAction> OR @<CommentAction> OR @<InformAction> OR @<InviteAction> OR
    @<ReplyAction> OR @<ShareAction>
)

<CommunityHealth> CLOSED {
    (  $<CommunityHealth_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <CommunityHealth> ] ?
    )
}

<CompetencyRequired> CLOSED {
    (  $<CompetencyRequired_tes> rdf:type . * ;
       rdf:type [ <CompetencyRequired> ] ?
    )
}

<CompilationAlbum> CLOSED {
    (  $<CompilationAlbum_tes> rdf:type . * ;
       rdf:type [ <CompilationAlbum> ] ?
    )
}

<Completed> CLOSED {
    (  $<Completed_tes> rdf:type . * ;
       rdf:type [ <Completed> ] ?
    )
}

<CompletedActionStatus> CLOSED {
    (  $<CompletedActionStatus_tes> rdf:type . * ;
       rdf:type [ <CompletedActionStatus> ] ?
    )
}

<CompleteDataFeed> CLOSED {
    (  $<CompleteDataFeed_tes> (  &<DataFeed_tes> ;
          rdf:type [ <DataFeed> ] ?
       ) ;
       rdf:type [ <CompleteDataFeed> ] ?
    )
}

<Composer> CLOSED {
    (  $<Composer_tes> rdf:type . * ;
       rdf:type [ <Composer> ] ?
    )
}

<CompoundPriceSpecification> CLOSED {
    (  $<CompoundPriceSpecification_tes> (  &<PriceSpecification_tes> ;
          rdf:type [ <PriceSpecification> ] ? ;
          <priceComponent> @<UnitPriceSpecification> * ;
          <priceType> @linkml:String *
       ) ;
       rdf:type [ <CompoundPriceSpecification> ] ?
    )
}

<ComprisedOf> CLOSED {
    (  $<ComprisedOf_tes> rdf:type . * ;
       rdf:type [ <ComprisedOf> ] ?
    )
}

<ComputerLanguage> CLOSED {
    (  $<ComputerLanguage_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ?
       ) ;
       rdf:type [ <ComputerLanguage> ] ?
    )
}

<ComputerStore> CLOSED {
    (  $<ComputerStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ComputerStore> ] ?
    )
}

<ConditionsOfAccess> CLOSED {
    (  $<ConditionsOfAccess_tes> rdf:type . * ;
       rdf:type [ <ConditionsOfAccess> ] ?
    )
}

<ConfirmAction> CLOSED {
    (  $<ConfirmAction_tes> (  &<InformAction_tes> ;
          rdf:type [ <InformAction> ] ?
       ) ;
       rdf:type [ <ConfirmAction> ] ?
    )
}

<ConnectedTo> CLOSED {
    (  $<ConnectedTo_tes> rdf:type . * ;
       rdf:type [ <ConnectedTo> ] ?
    )
}

<Consortium> CLOSED {
    (  $<Consortium_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <Consortium> ] ?
    )
}

<ConstrainingProperty> CLOSED {
    (  $<ConstrainingProperty_tes> rdf:type . * ;
       rdf:type [ <ConstrainingProperty> ] ?
    )
}

<ConsumeAction>  (
    CLOSED {
       (  $<ConsumeAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <actionAccessibilityRequirement> @<ActionAccessSpecification> * ;
             <expectsAcceptanceOf> @<Offer> *
          ) ;
          rdf:type [ <ConsumeAction> ] ?
       )
    } OR @<DrinkAction> OR @<EatAction> OR @<InstallAction> OR @<ListenAction> OR @<ReadAction> OR @<UseAction> OR @<ViewAction> OR
    @<WatchAction>
)

<ContactlessPayment> CLOSED {
    (  $<ContactlessPayment_tes> rdf:type . * ;
       rdf:type [ <ContactlessPayment> ] ?
    )
}

<ContactOption> CLOSED {
    (  $<ContactOption_tes> rdf:type . * ;
       rdf:type [ <ContactOption> ] ?
    )
}

<ContactPage> CLOSED {
    (  $<ContactPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <ContactPage> ] ?
    )
}

<ContactPoint>  (
    CLOSED {
       (  $<ContactPoint_tes> (  &<StructuredValue_tes> ;
             rdf:type [ <StructuredValue> ] ? ;
             <areaServed> @linkml:String * ;
             <availableLanguage> @linkml:String * ;
             <contactOption> @<ContactPointOption> * ;
             <contactType> @<Text> * ;
             <email> @<Text> * ;
             <faxNumber> @<Text> * ;
             <hoursAvailable> @<OpeningHoursSpecification> * ;
             <productSupported> @linkml:String * ;
             <serviceArea> @linkml:String * ;
             <telephone> @<Text> *
          ) ;
          rdf:type [ <ContactPoint> ] ?
       )
    } OR @<PostalAddress>
)

<ContactPoint> CLOSED {
    (  $<ContactPoint_tes> rdf:type . * ;
       rdf:type [ <ContactPoint> ] ?
    )
}

<ContactPointOption> CLOSED {
    (  $<ContactPointOption_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ContactPointOption> ] ?
    )
}

<ContactPoints> CLOSED {
    (  $<ContactPoints_tes> rdf:type . * ;
       rdf:type [ <ContactPoints> ] ?
    )
}

<ContactType> CLOSED {
    (  $<ContactType_tes> rdf:type . * ;
       rdf:type [ <ContactType> ] ?
    )
}

<ContagiousnessHealthAspect> CLOSED {
    (  $<ContagiousnessHealthAspect_tes> rdf:type . * ;
       rdf:type [ <ContagiousnessHealthAspect> ] ?
    )
}

<ContainedIn> CLOSED {
    (  $<ContainedIn_tes> rdf:type . * ;
       rdf:type [ <ContainedIn> ] ?
    )
}

<ContainedInPlace> CLOSED {
    (  $<ContainedInPlace_tes> rdf:type . * ;
       rdf:type [ <ContainedInPlace> ] ?
    )
}

<ContainsPlace> CLOSED {
    (  $<ContainsPlace_tes> rdf:type . * ;
       rdf:type [ <ContainsPlace> ] ?
    )
}

<ContentRating> CLOSED {
    (  $<ContentRating_tes> rdf:type . * ;
       rdf:type [ <ContentRating> ] ?
    )
}

<ContentReferenceTime> CLOSED {
    (  $<ContentReferenceTime_tes> rdf:type . * ;
       rdf:type [ <ContentReferenceTime> ] ?
    )
}

<ContentSize> CLOSED {
    (  $<ContentSize_tes> rdf:type . * ;
       rdf:type [ <ContentSize> ] ?
    )
}

<ContentType> CLOSED {
    (  $<ContentType_tes> rdf:type . * ;
       rdf:type [ <ContentType> ] ?
    )
}

<ContentUrl> CLOSED {
    (  $<ContentUrl_tes> rdf:type . * ;
       rdf:type [ <ContentUrl> ] ?
    )
}

<Continent> CLOSED {
    (  $<Continent_tes> (  &<Landform_tes> ;
          rdf:type [ <Landform> ] ?
       ) ;
       rdf:type [ <Continent> ] ?
    )
}

<Contraindication> CLOSED {
    (  $<Contraindication_tes> rdf:type . * ;
       rdf:type [ <Contraindication> ] ?
    )
}

<Contributor> CLOSED {
    (  $<Contributor_tes> rdf:type . * ;
       rdf:type [ <Contributor> ] ?
    )
}

<ControlAction>  (
    CLOSED {
       (  $<ControlAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <ControlAction> ] ?
       )
    } OR @<ActivateAction> OR @<DeactivateAction> OR @<ResumeAction> OR @<SuspendAction>
)

<ConvenienceStore> CLOSED {
    (  $<ConvenienceStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ConvenienceStore> ] ?
    )
}

<Conversation> CLOSED {
    (  $<Conversation_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Conversation> ] ?
    )
}

<CookAction> CLOSED {
    (  $<CookAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ? ;
          <foodEstablishment> @linkml:String * ;
          <foodEvent> @<FoodEvent> * ;
          <recipe> @<Recipe> *
       ) ;
       rdf:type [ <CookAction> ] ?
    )
}

<CookingMethod> CLOSED {
    (  $<CookingMethod_tes> rdf:type . * ;
       rdf:type [ <CookingMethod> ] ?
    )
}

<CoOp> CLOSED {
    (  $<CoOp_tes> rdf:type . * ;
       rdf:type [ <CoOp> ] ?
    )
}

<CopyrightHolder> CLOSED {
    (  $<CopyrightHolder_tes> rdf:type . * ;
       rdf:type [ <CopyrightHolder> ] ?
    )
}

<CopyrightNotice> CLOSED {
    (  $<CopyrightNotice_tes> rdf:type . * ;
       rdf:type [ <CopyrightNotice> ] ?
    )
}

<CopyrightYear> CLOSED {
    (  $<CopyrightYear_tes> rdf:type . * ;
       rdf:type [ <CopyrightYear> ] ?
    )
}

<Corporation> CLOSED {
    (  $<Corporation_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ? ;
          <tickerSymbol> @<Text> *
       ) ;
       rdf:type [ <Corporation> ] ?
    )
}

<Correction> CLOSED {
    (  $<Correction_tes> rdf:type . * ;
       rdf:type [ <Correction> ] ?
    )
}

<CorrectionComment> CLOSED {
    (  $<CorrectionComment_tes> (  &<Comment_tes> ;
          rdf:type [ <Comment> ] ?
       ) ;
       rdf:type [ <CorrectionComment> ] ?
    )
}

<CostCategory> CLOSED {
    (  $<CostCategory_tes> rdf:type . * ;
       rdf:type [ <CostCategory> ] ?
    )
}

<CostCurrency> CLOSED {
    (  $<CostCurrency_tes> rdf:type . * ;
       rdf:type [ <CostCurrency> ] ?
    )
}

<CostOrigin> CLOSED {
    (  $<CostOrigin_tes> rdf:type . * ;
       rdf:type [ <CostOrigin> ] ?
    )
}

<CostPerUnit> CLOSED {
    (  $<CostPerUnit_tes> rdf:type . * ;
       rdf:type [ <CostPerUnit> ] ?
    )
}

<CountriesNotSupported> CLOSED {
    (  $<CountriesNotSupported_tes> rdf:type . * ;
       rdf:type [ <CountriesNotSupported> ] ?
    )
}

<CountriesSupported> CLOSED {
    (  $<CountriesSupported_tes> rdf:type . * ;
       rdf:type [ <CountriesSupported> ] ?
    )
}

<Country> CLOSED {
    (  $<Country_tes> (  &<AdministrativeArea_tes> ;
          rdf:type [ <AdministrativeArea> ] ?
       ) ;
       rdf:type [ <Country> ] ?
    )
}

<CountryOfAssembly> CLOSED {
    (  $<CountryOfAssembly_tes> rdf:type . * ;
       rdf:type [ <CountryOfAssembly> ] ?
    )
}

<CountryOfLastProcessing> CLOSED {
    (  $<CountryOfLastProcessing_tes> rdf:type . * ;
       rdf:type [ <CountryOfLastProcessing> ] ?
    )
}

<CountryOfOrigin> CLOSED {
    (  $<CountryOfOrigin_tes> rdf:type . * ;
       rdf:type [ <CountryOfOrigin> ] ?
    )
}

<Course> CLOSED {
    (  $<Course_tes> (  &<LearningResource_tes> ;
          rdf:type [ <LearningResource> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <courseCode> @<Text> * ;
          <coursePrerequisites> @linkml:String * ;
          <educationalCredentialAwarded> @linkml:String * ;
          <hasCourseInstance> @<CourseInstance> * ;
          <numberOfCredits> @linkml:String * ;
          <occupationalCredentialAwarded> @linkml:String *
       ) ;
       rdf:type [ <Course> ] ?
    )
}

<CourseCode> CLOSED {
    (  $<CourseCode_tes> rdf:type . * ;
       rdf:type [ <CourseCode> ] ?
    )
}

<CourseInstance> CLOSED {
    (  $<CourseInstance_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          <courseMode> @linkml:String * ;
          <courseWorkload> @<Text> * ;
          <instructor> @<Person> *
       ) ;
       rdf:type [ <CourseInstance> ] ?
    )
}

<CourseMode> CLOSED {
    (  $<CourseMode_tes> rdf:type . * ;
       rdf:type [ <CourseMode> ] ?
    )
}

<CoursePrerequisites> CLOSED {
    (  $<CoursePrerequisites_tes> rdf:type . * ;
       rdf:type [ <CoursePrerequisites> ] ?
    )
}

<CourseWorkload> CLOSED {
    (  $<CourseWorkload_tes> rdf:type . * ;
       rdf:type [ <CourseWorkload> ] ?
    )
}

<Courthouse> CLOSED {
    (  $<Courthouse_tes> (  &<GovernmentBuilding_tes> ;
          rdf:type [ <GovernmentBuilding> ] ?
       ) ;
       rdf:type [ <Courthouse> ] ?
    )
}

<CoverageEndTime> CLOSED {
    (  $<CoverageEndTime_tes> rdf:type . * ;
       rdf:type [ <CoverageEndTime> ] ?
    )
}

<CoverageStartTime> CLOSED {
    (  $<CoverageStartTime_tes> rdf:type . * ;
       rdf:type [ <CoverageStartTime> ] ?
    )
}

<CoverArt>  (
    CLOSED {
       (  $<CoverArt_tes> (  &<VisualArtwork_tes> ;
             rdf:type [ <VisualArtwork> ] ?
          ) ;
          rdf:type [ <CoverArt> ] ?
       )
    } OR @<ComicCoverArt>
)

<CovidTestingFacility> CLOSED {
    (  $<CovidTestingFacility_tes> (  &<MedicalClinic_tes> ;
          rdf:type [ <MedicalClinic> ] ?
       ) ;
       rdf:type [ <CovidTestingFacility> ] ?
    )
}

<CreateAction>  (
    CLOSED {
       (  $<CreateAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <CreateAction> ] ?
       )
    } OR @<CookAction> OR @<DrawAction> OR @<FilmAction> OR @<PaintAction> OR @<PhotographAction> OR @<WriteAction>
)

<CreativeWork>  (
    CLOSED {
       (  $<CreativeWork_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <about> @<Thing> * ;
             <acquireLicensePage> @linkml:String * ;
             <contentLocation> @<Place> * ;
             <creator> @linkml:String * ;
             <dateCreated> @linkml:String * ;
             <editEIDR> @linkml:String * ;
             <funder> @linkml:String * ;
             <genre> @linkml:String * ;
             <hasPart> @<CreativeWork> * ;
             <interpretedAsClaim> @<Claim> * ;
             <isPartOf> @linkml:String * ;
             <mainEntity> @<Thing> * ;
             <material> @linkml:String * ;
             <position> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <spatialCoverage> @<Place> * ;
             <sponsor> @linkml:String * ;
             <usageInfo> @linkml:String * ;
             <workExample> @<CreativeWork> * ;
             <abstract> @<Text> * ;
             <accessMode> @<Text> * ;
             <accessModeSufficient> @<ItemList> * ;
             <accessibilityAPI> @<Text> * ;
             <accessibilityControl> @<Text> * ;
             <accessibilityFeature> @<Text> * ;
             <accessibilityHazard> @<Text> * ;
             <accessibilitySummary> @<Text> * ;
             <accountablePerson> @<Person> * ;
             <aggregateRating> @<AggregateRating> * ;
             <alternativeHeadline> @<Text> * ;
             <archivedAt> @linkml:String * ;
             <assesses> @linkml:String * ;
             <associatedMedia> @<MediaObject> * ;
             <audience> @<Audience> * ;
             <audio> @linkml:String * ;
             <author> @linkml:String * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <character> @<Person> * ;
             <citation> @linkml:String * ;
             <comment> @<Comment> * ;
             <commentCount> @<Integer> * ;
             <conditionsOfAccess> @<Text> * ;
             <contentRating> @linkml:String * ;
             <contentReferenceTime> @<DateTime> * ;
             <contributor> @linkml:String * ;
             <copyrightHolder> @linkml:String * ;
             <copyrightNotice> @<Text> * ;
             <copyrightYear> @<Number> * ;
             <correction> @linkml:String * ;
             <countryOfOrigin> @<Country> * ;
             <creativeWorkStatus> @linkml:String * ;
             <creditText> @<Text> * ;
             <dateModified> @linkml:String * ;
             <datePublished> @linkml:String * ;
             <discussionUrl> @<URL> * ;
             <editor> @<Person> * ;
             <educationalAlignment> @<AlignmentObject> * ;
             <educationalLevel> @linkml:String * ;
             <educationalUse> @linkml:String * ;
             <encoding> @<MediaObject> * ;
             <encodingFormat> @linkml:String * ;
             <encodings> @<MediaObject> * ;
             <exampleOfWork> @<CreativeWork> * ;
             <expires> @<Date> * ;
             <fileFormat> @linkml:String * ;
             <headline> @<Text> * ;
             <inLanguage> @linkml:String * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <interactivityType> @<Text> * ;
             <isAccessibleForFree> @<Boolean> * ;
             <isBasedOn> @linkml:String * ;
             <isBasedOnUrl> @linkml:String * ;
             <isFamilyFriendly> @<Boolean> * ;
             <keywords> @linkml:String * ;
             <learningResourceType> @linkml:String * ;
             <license> @linkml:String * ;
             <locationCreated> @<Place> * ;
             <maintainer> @linkml:String * ;
             <materialExtent> @linkml:String * ;
             <mentions> @<Thing> * ;
             <offers> @linkml:String * ;
             <pattern> @linkml:String * ;
             <producer> @linkml:String * ;
             <provider> @linkml:String * ;
             <publication> @<PublicationEvent> * ;
             <publisher> @linkml:String * ;
             <publisherImprint> @<Organization> * ;
             <recordedAt> @<Event> * ;
             <releasedEvent> @<PublicationEvent> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <schemaVersion> @linkml:String * ;
             <sdDatePublished> @<Date> * ;
             <sdLicense> @linkml:String * ;
             <sdPublisher> @linkml:String * ;
             <size> @linkml:String * ;
             <sourceOrganization> @<Organization> * ;
             <spatial> @<Place> * ;
             <teaches> @linkml:String * ;
             <temporal> @linkml:String * ;
             <temporalCoverage> @linkml:String * ;
             <text> @<Text> * ;
             <thumbnailUrl> @<URL> * ;
             <timeRequired> @<Duration> * ;
             <translationOfWork> @<CreativeWork> * ;
             <translator> @linkml:String * ;
             <typicalAgeRange> @<Text> * ;
             <version> @linkml:String * ;
             <video> @linkml:String * ;
             <workTranslation> @<CreativeWork> *
          ) ;
          rdf:type [ <CreativeWork> ] ?
       )
    } OR @<AmpStory> OR @<ArchiveComponent> OR @<Article> OR @<Atlas> OR @<Blog> OR @<Book> OR @<Chapter> OR @<Claim> OR @<Clip> OR
    @<Code> OR @<Collection> OR @<ComicStory> OR @<Comment> OR @<Conversation> OR @<CreativeWorkSeason> OR @<DataCatalog> OR
    @<Dataset> OR @<DefinedTermSet> OR @<DigitalDocument> OR @<Drawing> OR @<EducationalOccupationalCredential> OR @<Episode> OR
    @<Game> OR @<Guide> OR @<HowTo> OR @<HyperToc> OR @<HyperTocEntry> OR @<LearningResource> OR @<Legislation> OR @<Manuscript> OR
    @<Map> OR @<MathSolver> OR @<MediaObject> OR @<MediaReviewItem> OR @<Menu> OR @<MenuSection> OR @<Message> OR @<Movie> OR
    @<MusicComposition> OR @<MusicPlaylist> OR @<MusicRecording> OR @<Painting> OR @<Photograph> OR @<Play> OR @<Poster> OR
    @<PublicationIssue> OR @<PublicationVolume> OR @<Quotation> OR @<Review> OR @<Sculpture> OR @<Season> OR @<SheetMusic> OR
    @<ShortStory> OR @<SoftwareApplication> OR @<SoftwareSourceCode> OR @<SpecialAnnouncement> OR @<Statement> OR @<TVSeason> OR
    @<Thesis> OR @<VisualArtwork> OR @<WebContent> OR @<WebPage> OR @<WebPageElement> OR @<WebSite>
)

<CreativeWorkSeason>  (
    CLOSED {
       (  $<CreativeWorkSeason_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <actor> @<Person> * ;
             <episode> @<Episode> * ;
             <partOfSeries> @<CreativeWorkSeries> * ;
             <seasonNumber> @linkml:String * ;
             <director> @<Person> * ;
             <endDate> @linkml:String * ;
             <episodes> @<Episode> * ;
             <numberOfEpisodes> @<Integer> * ;
             <productionCompany> @<Organization> * ;
             <startDate> @linkml:String * ;
             <trailer> @<VideoObject> *
          ) ;
          rdf:type [ <CreativeWorkSeason> ] ?
       )
    } OR @<PodcastSeason> OR @<RadioSeason>
)

<CreativeWorkSeries>  (
    CLOSED {
       (  $<CreativeWorkSeries_tes> (  &<Series_tes> ;
             rdf:type [ <Series> ] ? ;
             &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <issn> @<Text> * ;
             <endDate> @linkml:String * ;
             <startDate> @linkml:String * ;
             <about> @<Thing> * ;
             <acquireLicensePage> @linkml:String * ;
             <contentLocation> @<Place> * ;
             <creator> @linkml:String * ;
             <dateCreated> @linkml:String * ;
             <editEIDR> @linkml:String * ;
             <funder> @linkml:String * ;
             <genre> @linkml:String * ;
             <hasPart> @<CreativeWork> * ;
             <interpretedAsClaim> @<Claim> * ;
             <isPartOf> @linkml:String * ;
             <mainEntity> @<Thing> * ;
             <material> @linkml:String * ;
             <position> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <spatialCoverage> @<Place> * ;
             <sponsor> @linkml:String * ;
             <usageInfo> @linkml:String * ;
             <workExample> @<CreativeWork> * ;
             <abstract> @<Text> * ;
             <accessMode> @<Text> * ;
             <accessModeSufficient> @<ItemList> * ;
             <accessibilityAPI> @<Text> * ;
             <accessibilityControl> @<Text> * ;
             <accessibilityFeature> @<Text> * ;
             <accessibilityHazard> @<Text> * ;
             <accessibilitySummary> @<Text> * ;
             <accountablePerson> @<Person> * ;
             <aggregateRating> @<AggregateRating> * ;
             <alternativeHeadline> @<Text> * ;
             <archivedAt> @linkml:String * ;
             <assesses> @linkml:String * ;
             <associatedMedia> @<MediaObject> * ;
             <audience> @<Audience> * ;
             <audio> @linkml:String * ;
             <author> @linkml:String * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <character> @<Person> * ;
             <citation> @linkml:String * ;
             <comment> @<Comment> * ;
             <commentCount> @<Integer> * ;
             <conditionsOfAccess> @<Text> * ;
             <contentRating> @linkml:String * ;
             <contentReferenceTime> @<DateTime> * ;
             <contributor> @linkml:String * ;
             <copyrightHolder> @linkml:String * ;
             <copyrightNotice> @<Text> * ;
             <copyrightYear> @<Number> * ;
             <correction> @linkml:String * ;
             <countryOfOrigin> @<Country> * ;
             <creativeWorkStatus> @linkml:String * ;
             <creditText> @<Text> * ;
             <dateModified> @linkml:String * ;
             <datePublished> @linkml:String * ;
             <discussionUrl> @<URL> * ;
             <editor> @<Person> * ;
             <educationalAlignment> @<AlignmentObject> * ;
             <educationalLevel> @linkml:String * ;
             <educationalUse> @linkml:String * ;
             <encoding> @<MediaObject> * ;
             <encodingFormat> @linkml:String * ;
             <encodings> @<MediaObject> * ;
             <exampleOfWork> @<CreativeWork> * ;
             <expires> @<Date> * ;
             <fileFormat> @linkml:String * ;
             <headline> @<Text> * ;
             <inLanguage> @linkml:String * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <interactivityType> @<Text> * ;
             <isAccessibleForFree> @<Boolean> * ;
             <isBasedOn> @linkml:String * ;
             <isBasedOnUrl> @linkml:String * ;
             <isFamilyFriendly> @<Boolean> * ;
             <keywords> @linkml:String * ;
             <learningResourceType> @linkml:String * ;
             <license> @linkml:String * ;
             <locationCreated> @<Place> * ;
             <maintainer> @linkml:String * ;
             <materialExtent> @linkml:String * ;
             <mentions> @<Thing> * ;
             <offers> @linkml:String * ;
             <pattern> @linkml:String * ;
             <producer> @linkml:String * ;
             <provider> @linkml:String * ;
             <publication> @<PublicationEvent> * ;
             <publisher> @linkml:String * ;
             <publisherImprint> @<Organization> * ;
             <recordedAt> @<Event> * ;
             <releasedEvent> @<PublicationEvent> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <schemaVersion> @linkml:String * ;
             <sdDatePublished> @<Date> * ;
             <sdLicense> @linkml:String * ;
             <sdPublisher> @linkml:String * ;
             <size> @linkml:String * ;
             <sourceOrganization> @<Organization> * ;
             <spatial> @<Place> * ;
             <teaches> @linkml:String * ;
             <temporal> @linkml:String * ;
             <temporalCoverage> @linkml:String * ;
             <text> @<Text> * ;
             <thumbnailUrl> @<URL> * ;
             <timeRequired> @<Duration> * ;
             <translationOfWork> @<CreativeWork> * ;
             <translator> @linkml:String * ;
             <typicalAgeRange> @<Text> * ;
             <version> @linkml:String * ;
             <video> @linkml:String * ;
             <workTranslation> @<CreativeWork> *
          ) ;
          rdf:type [ <CreativeWorkSeries> ] ?
       )
    } OR @<BookSeries> OR @<MovieSeries> OR @<Periodical> OR @<PodcastSeries> OR @<RadioSeries> OR @<TVSeries> OR
    @<VideoGameSeries>
)

<CreativeWorkStatus> CLOSED {
    (  $<CreativeWorkStatus_tes> rdf:type . * ;
       rdf:type [ <CreativeWorkStatus> ] ?
    )
}

<CredentialCategory> CLOSED {
    (  $<CredentialCategory_tes> rdf:type . * ;
       rdf:type [ <CredentialCategory> ] ?
    )
}

<CreditCard> CLOSED {
    (  $<CreditCard_tes> (  &<PaymentCard_tes> ;
          rdf:type [ <PaymentCard> ] ? ;
          &<LoanOrCredit_tes> ;
          rdf:type [ <LoanOrCredit> ] ? ;
          <loanTerm> @<QuantitativeValue> * ;
          <amount> @linkml:String * ;
          <currency> @<Text> * ;
          <gracePeriod> @<Duration> * ;
          <loanRepaymentForm> @<RepaymentSpecification> * ;
          <loanType> @linkml:String * ;
          <recourseLoan> @<Boolean> * ;
          <renegotiableLoan> @<Boolean> * ;
          <requiredCollateral> @linkml:String *
       ) ;
       rdf:type [ <CreditCard> ] ?
    )
}

<CreditedTo> CLOSED {
    (  $<CreditedTo_tes> rdf:type . * ;
       rdf:type [ <CreditedTo> ] ?
    )
}

<CreditText> CLOSED {
    (  $<CreditText_tes> rdf:type . * ;
       rdf:type [ <CreditText> ] ?
    )
}

<Crematorium> CLOSED {
    (  $<Crematorium_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Crematorium> ] ?
    )
}

<CriticReview> CLOSED {
    (  $<CriticReview_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ?
       ) ;
       rdf:type [ <CriticReview> ] ?
    )
}

<CrossSectional> CLOSED {
    (  $<CrossSectional_tes> rdf:type . * ;
       rdf:type [ <CrossSectional> ] ?
    )
}

<CssSelector> CLOSED {
    (  $<CssSelector_tes> rdf:type . * ;
       rdf:type [ <CssSelector> ] ?
    )
}

<CssSelectorType> CLOSED {
    (  $<CssSelectorType_tes> (  &<Text_tes> ;
          rdf:type [ <Text> ] ?
       ) ;
       rdf:type [ <CssSelectorType> ] ?
    )
}

<CT> CLOSED {
    (  $<CT_tes> rdf:type . * ;
       rdf:type [ <CT> ] ?
    )
}

<CurrenciesAccepted> CLOSED {
    (  $<CurrenciesAccepted_tes> rdf:type . * ;
       rdf:type [ <CurrenciesAccepted> ] ?
    )
}

<Currency> CLOSED {
    (  $<Currency_tes> rdf:type . * ;
       rdf:type [ <Currency> ] ?
    )
}

<CurrencyConversionService> CLOSED {
    (  $<CurrencyConversionService_tes> (  &<FinancialProduct_tes> ;
          rdf:type [ <FinancialProduct> ] ?
       ) ;
       rdf:type [ <CurrencyConversionService> ] ?
    )
}

<CurrentExchangeRate> CLOSED {
    (  $<CurrentExchangeRate_tes> rdf:type . * ;
       rdf:type [ <CurrentExchangeRate> ] ?
    )
}

<Customer> CLOSED {
    (  $<Customer_tes> rdf:type . * ;
       rdf:type [ <Customer> ] ?
    )
}

<CustomerRemorseReturnFees> CLOSED {
    (  $<CustomerRemorseReturnFees_tes> rdf:type . * ;
       rdf:type [ <CustomerRemorseReturnFees> ] ?
    )
}

<CustomerRemorseReturnLabelSource> CLOSED {
    (  $<CustomerRemorseReturnLabelSource_tes> rdf:type . * ;
       rdf:type [ <CustomerRemorseReturnLabelSource> ] ?
    )
}

<CustomerRemorseReturnShippingFeesAmount> CLOSED {
    (  $<CustomerRemorseReturnShippingFeesAmount_tes> rdf:type . * ;
       rdf:type [ <CustomerRemorseReturnShippingFeesAmount> ] ?
    )
}

<CutoffTime> CLOSED {
    (  $<CutoffTime_tes> rdf:type . * ;
       rdf:type [ <CutoffTime> ] ?
    )
}

<CvdCollectionDate> CLOSED {
    (  $<CvdCollectionDate_tes> rdf:type . * ;
       rdf:type [ <CvdCollectionDate> ] ?
    )
}

<CvdFacilityCounty> CLOSED {
    (  $<CvdFacilityCounty_tes> rdf:type . * ;
       rdf:type [ <CvdFacilityCounty> ] ?
    )
}

<CvdFacilityId> CLOSED {
    (  $<CvdFacilityId_tes> rdf:type . * ;
       rdf:type [ <CvdFacilityId> ] ?
    )
}

<CvdNumBeds> CLOSED {
    (  $<CvdNumBeds_tes> rdf:type . * ;
       rdf:type [ <CvdNumBeds> ] ?
    )
}

<CvdNumBedsOcc> CLOSED {
    (  $<CvdNumBedsOcc_tes> rdf:type . * ;
       rdf:type [ <CvdNumBedsOcc> ] ?
    )
}

<CvdNumC19Died> CLOSED {
    (  $<CvdNumC19Died_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19Died> ] ?
    )
}

<CvdNumC19HOPats> CLOSED {
    (  $<CvdNumC19HOPats_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19HOPats> ] ?
    )
}

<CvdNumC19HospPats> CLOSED {
    (  $<CvdNumC19HospPats_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19HospPats> ] ?
    )
}

<CvdNumC19MechVentPats> CLOSED {
    (  $<CvdNumC19MechVentPats_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19MechVentPats> ] ?
    )
}

<CvdNumC19OFMechVentPats> CLOSED {
    (  $<CvdNumC19OFMechVentPats_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19OFMechVentPats> ] ?
    )
}

<CvdNumC19OverflowPats> CLOSED {
    (  $<CvdNumC19OverflowPats_tes> rdf:type . * ;
       rdf:type [ <CvdNumC19OverflowPats> ] ?
    )
}

<CvdNumICUBeds> CLOSED {
    (  $<CvdNumICUBeds_tes> rdf:type . * ;
       rdf:type [ <CvdNumICUBeds> ] ?
    )
}

<CvdNumICUBedsOcc> CLOSED {
    (  $<CvdNumICUBedsOcc_tes> rdf:type . * ;
       rdf:type [ <CvdNumICUBedsOcc> ] ?
    )
}

<CvdNumTotBeds> CLOSED {
    (  $<CvdNumTotBeds_tes> rdf:type . * ;
       rdf:type [ <CvdNumTotBeds> ] ?
    )
}

<CvdNumVent> CLOSED {
    (  $<CvdNumVent_tes> rdf:type . * ;
       rdf:type [ <CvdNumVent> ] ?
    )
}

<CvdNumVentUse> CLOSED {
    (  $<CvdNumVentUse_tes> rdf:type . * ;
       rdf:type [ <CvdNumVentUse> ] ?
    )
}

<DamagedCondition> CLOSED {
    (  $<DamagedCondition_tes> rdf:type . * ;
       rdf:type [ <DamagedCondition> ] ?
    )
}

<DanceEvent> CLOSED {
    (  $<DanceEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <DanceEvent> ] ?
    )
}

<DanceGroup> CLOSED {
    (  $<DanceGroup_tes> (  &<PerformingGroup_tes> ;
          rdf:type [ <PerformingGroup> ] ?
       ) ;
       rdf:type [ <DanceGroup> ] ?
    )
}

<DataCatalog> CLOSED {
    (  $<DataCatalog_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <dataset> @<Dataset> * ;
          <measurementTechnique> @linkml:String *
       ) ;
       rdf:type [ <DataCatalog> ] ?
    )
}

<DataDownload> CLOSED {
    (  $<DataDownload_tes> (  &<MediaObject_tes> ;
          rdf:type [ <MediaObject> ] ? ;
          <measurementTechnique> @linkml:String *
       ) ;
       rdf:type [ <DataDownload> ] ?
    )
}

<DataFeed>  (
    CLOSED {
       (  $<DataFeed_tes> (  &<Dataset_tes> ;
             rdf:type [ <Dataset> ] ? ;
             <dataFeedElement> @linkml:String *
          ) ;
          rdf:type [ <DataFeed> ] ?
       )
    } OR @<CompleteDataFeed>
)

<DataFeedElement> CLOSED {
    (  $<DataFeedElement_tes> rdf:type . * ;
       rdf:type [ <DataFeedElement> ] ?
    )
}

<DataFeedItem> CLOSED {
    (  $<DataFeedItem_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <dateCreated> @linkml:String * ;
          <dateDeleted> @linkml:String * ;
          <dateModified> @linkml:String * ;
          <item> @<Thing> *
       ) ;
       rdf:type [ <DataFeedItem> ] ?
    )
}

<Dataset>  (
    CLOSED {
       (  $<Dataset_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <issn> @<Text> * ;
             <catalog> @<DataCatalog> * ;
             <datasetTimeInterval> @<DateTime> * ;
             <distribution> @<DataDownload> * ;
             <includedDataCatalog> @<DataCatalog> * ;
             <includedInDataCatalog> @<DataCatalog> * ;
             <measurementTechnique> @linkml:String * ;
             <variableMeasured> @linkml:String *
          ) ;
          rdf:type [ <Dataset> ] ?
       )
    } OR @<DataFeed>
)

<Dataset> CLOSED {
    (  $<Dataset_tes> rdf:type . * ;
       rdf:type [ <Dataset> ] ?
    )
}

<DatasetTimeInterval> CLOSED {
    (  $<DatasetTimeInterval_tes> rdf:type . * ;
       rdf:type [ <DatasetTimeInterval> ] ?
    )
}

<DataType> CLOSED {
    (  $<DataType_tes> (  &<Class_tes> ;
          rdf:type [ <Class> ] ?
       ) ;
       rdf:type [ <DataType> ] ?
    )
}

<Date> CLOSED {
    (  $<Date_tes> rdf:type . * ;
       rdf:type [ <Date> ] ?
    )
}

<DateDeleted> CLOSED {
    (  $<DateDeleted_tes> rdf:type . * ;
       rdf:type [ <DateDeleted> ] ?
    )
}

<DatedMoneySpecification> CLOSED {
    (  $<DatedMoneySpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <amount> @linkml:String * ;
          <currency> @<Text> * ;
          <endDate> @linkml:String * ;
          <startDate> @linkml:String *
       ) ;
       rdf:type [ <DatedMoneySpecification> ] ?
    )
}

<DateIssued> CLOSED {
    (  $<DateIssued_tes> rdf:type . * ;
       rdf:type [ <DateIssued> ] ?
    )
}

<Dateline> CLOSED {
    (  $<Dateline_tes> rdf:type . * ;
       rdf:type [ <Dateline> ] ?
    )
}

<DateModified> CLOSED {
    (  $<DateModified_tes> rdf:type . * ;
       rdf:type [ <DateModified> ] ?
    )
}

<DatePosted> CLOSED {
    (  $<DatePosted_tes> rdf:type . * ;
       rdf:type [ <DatePosted> ] ?
    )
}

<DatePublished> CLOSED {
    (  $<DatePublished_tes> rdf:type . * ;
       rdf:type [ <DatePublished> ] ?
    )
}

<DateRead> CLOSED {
    (  $<DateRead_tes> rdf:type . * ;
       rdf:type [ <DateRead> ] ?
    )
}

<DateReceived> CLOSED {
    (  $<DateReceived_tes> rdf:type . * ;
       rdf:type [ <DateReceived> ] ?
    )
}

<DateSent> CLOSED {
    (  $<DateSent_tes> rdf:type . * ;
       rdf:type [ <DateSent> ] ?
    )
}

<DateTime> CLOSED {
    (  $<DateTime_tes> rdf:type . * ;
       rdf:type [ <DateTime> ] ?
    )
}

<DateVehicleFirstRegistered> CLOSED {
    (  $<DateVehicleFirstRegistered_tes> rdf:type . * ;
       rdf:type [ <DateVehicleFirstRegistered> ] ?
    )
}

<DayOfWeek> CLOSED {
    (  $<DayOfWeek_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <DayOfWeek> ] ?
    )
}

<DayOfWeek> CLOSED {
    (  $<DayOfWeek_tes> rdf:type . * ;
       rdf:type [ <DayOfWeek> ] ?
    )
}

<DaySpa> CLOSED {
    (  $<DaySpa_tes> (  &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <DaySpa> ] ?
    )
}

<DDxElement> CLOSED {
    (  $<DDxElement_tes> (  &<MedicalIntangible_tes> ;
          rdf:type [ <MedicalIntangible> ] ? ;
          <diagnosis> @<MedicalCondition> * ;
          <distinguishingSign> @<MedicalSignOrSymptom> *
       ) ;
       rdf:type [ <DDxElement> ] ?
    )
}

<DeactivateAction> CLOSED {
    (  $<DeactivateAction_tes> (  &<ControlAction_tes> ;
          rdf:type [ <ControlAction> ] ?
       ) ;
       rdf:type [ <DeactivateAction> ] ?
    )
}

<DeathDate> CLOSED {
    (  $<DeathDate_tes> rdf:type . * ;
       rdf:type [ <DeathDate> ] ?
    )
}

<DeathPlace> CLOSED {
    (  $<DeathPlace_tes> rdf:type . * ;
       rdf:type [ <DeathPlace> ] ?
    )
}

<DecontextualizedContent> CLOSED {
    (  $<DecontextualizedContent_tes> rdf:type . * ;
       rdf:type [ <DecontextualizedContent> ] ?
    )
}

<DefaultValue> CLOSED {
    (  $<DefaultValue_tes> rdf:type . * ;
       rdf:type [ <DefaultValue> ] ?
    )
}

<DefenceEstablishment> CLOSED {
    (  $<DefenceEstablishment_tes> (  &<GovernmentBuilding_tes> ;
          rdf:type [ <GovernmentBuilding> ] ?
       ) ;
       rdf:type [ <DefenceEstablishment> ] ?
    )
}

<DefinedRegion> CLOSED {
    (  $<DefinedRegion_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <addressCountry> @linkml:String * ;
          <addressRegion> @<Text> * ;
          <postalCode> @<Text> * ;
          <postalCodePrefix> @<Text> * ;
          <postalCodeRange> @<PostalCodeRangeSpecification> *
       ) ;
       rdf:type [ <DefinedRegion> ] ?
    )
}

<DefinedTerm>  (
    CLOSED {
       (  $<DefinedTerm_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <inDefinedTermSet> @linkml:String * ;
             <termCode> @<Text> *
          ) ;
          rdf:type [ <DefinedTerm> ] ?
       )
    } OR @<CategoryCode>
)

<DefinedTermSet>  (
    CLOSED {
       (  $<DefinedTermSet_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <hasDefinedTerm> @<DefinedTerm> *
          ) ;
          rdf:type [ <DefinedTermSet> ] ?
       )
    } OR @<CategoryCodeSet>
)

<DefinitiveLegalValue> CLOSED {
    (  $<DefinitiveLegalValue_tes> rdf:type . * ;
       rdf:type [ <DefinitiveLegalValue> ] ?
    )
}

<DeleteAction> CLOSED {
    (  $<DeleteAction_tes> (  &<UpdateAction_tes> ;
          rdf:type [ <UpdateAction> ] ?
       ) ;
       rdf:type [ <DeleteAction> ] ?
    )
}

<DeliveryAddress> CLOSED {
    (  $<DeliveryAddress_tes> rdf:type . * ;
       rdf:type [ <DeliveryAddress> ] ?
    )
}

<DeliveryChargeSpecification> CLOSED {
    (  $<DeliveryChargeSpecification_tes> (  &<PriceSpecification_tes> ;
          rdf:type [ <PriceSpecification> ] ? ;
          <areaServed> @linkml:String * ;
          <eligibleRegion> @linkml:String * ;
          <appliesToDeliveryMethod> @<DeliveryMethod> * ;
          <ineligibleRegion> @linkml:String *
       ) ;
       rdf:type [ <DeliveryChargeSpecification> ] ?
    )
}

<DeliveryEvent> CLOSED {
    (  $<DeliveryEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          <accessCode> @<Text> * ;
          <availableFrom> @<DateTime> * ;
          <availableThrough> @<DateTime> * ;
          <hasDeliveryMethod> @<DeliveryMethod> *
       ) ;
       rdf:type [ <DeliveryEvent> ] ?
    )
}

<DeliveryLeadTime> CLOSED {
    (  $<DeliveryLeadTime_tes> rdf:type . * ;
       rdf:type [ <DeliveryLeadTime> ] ?
    )
}

<DeliveryMethod> CLOSED {
    (  $<DeliveryMethod_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <DeliveryMethod> ] ?
    )
}

<DeliveryStatus> CLOSED {
    (  $<DeliveryStatus_tes> rdf:type . * ;
       rdf:type [ <DeliveryStatus> ] ?
    )
}

<DeliveryTime> CLOSED {
    (  $<DeliveryTime_tes> rdf:type . * ;
       rdf:type [ <DeliveryTime> ] ?
    )
}

<DeliveryTimeSettings> CLOSED {
    (  $<DeliveryTimeSettings_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <deliveryTime> @<ShippingDeliveryTime> * ;
          <isUnlabelledFallback> @<Boolean> * ;
          <shippingDestination> @<DefinedRegion> * ;
          <transitTimeLabel> @<Text> *
       ) ;
       rdf:type [ <DeliveryTimeSettings> ] ?
    )
}

<Demand> CLOSED {
    (  $<Demand_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <areaServed> @linkml:String * ;
          <availableAtOrFrom> @<Place> * ;
          <eligibleRegion> @linkml:String * ;
          <gtin> @<Text> * ;
          <gtin12> @<Text> * ;
          <gtin13> @<Text> * ;
          <gtin14> @<Text> * ;
          <gtin8> @<Text> * ;
          <seller> @linkml:String * ;
          <serialNumber> @<Text> * ;
          <sku> @<Text> * ;
          <acceptedPaymentMethod> @linkml:String * ;
          <advanceBookingRequirement> @<QuantitativeValue> * ;
          <availability> @<ItemAvailability> * ;
          <availabilityEnds> @linkml:String * ;
          <availabilityStarts> @linkml:String * ;
          <availableDeliveryMethod> @<DeliveryMethod> * ;
          <businessFunction> @<BusinessFunction> * ;
          <deliveryLeadTime> @<QuantitativeValue> * ;
          <eligibleCustomerType> @<BusinessEntityType> * ;
          <eligibleDuration> @<QuantitativeValue> * ;
          <eligibleQuantity> @<QuantitativeValue> * ;
          <eligibleTransactionVolume> @<PriceSpecification> * ;
          <includesObject> @<TypeAndQuantityNode> * ;
          <ineligibleRegion> @linkml:String * ;
          <inventoryLevel> @<QuantitativeValue> * ;
          <itemCondition> @<OfferItemCondition> * ;
          <itemOffered> @linkml:String * ;
          <mpn> @<Text> * ;
          <priceSpecification> @<PriceSpecification> * ;
          <validFrom> @linkml:String * ;
          <validThrough> @linkml:String * ;
          <warranty> @<WarrantyPromise> *
       ) ;
       rdf:type [ <Demand> ] ?
    )
}

<DemoAlbum> CLOSED {
    (  $<DemoAlbum_tes> rdf:type . * ;
       rdf:type [ <DemoAlbum> ] ?
    )
}

<Dentist> CLOSED {
    (  $<Dentist_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ? ;
          &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ? ;
          &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ? ;
          <healthPlanNetworkId> @<Text> * ;
          <isAcceptingNewPatients> @<Boolean> * ;
          <medicalSpecialty> @<MedicalSpecialty> *
       ) ;
       rdf:type [ <Dentist> ] ?
    )
}

<Dentistry> CLOSED {
    (  $<Dentistry_tes> rdf:type . * ;
       rdf:type [ <Dentistry> ] ?
    )
}

<DepartAction> CLOSED {
    (  $<DepartAction_tes> (  &<MoveAction_tes> ;
          rdf:type [ <MoveAction> ] ?
       ) ;
       rdf:type [ <DepartAction> ] ?
    )
}

<Department> CLOSED {
    (  $<Department_tes> rdf:type . * ;
       rdf:type [ <Department> ] ?
    )
}

<DepartmentStore> CLOSED {
    (  $<DepartmentStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <DepartmentStore> ] ?
    )
}

<DepartureAirport> CLOSED {
    (  $<DepartureAirport_tes> rdf:type . * ;
       rdf:type [ <DepartureAirport> ] ?
    )
}

<DepartureBoatTerminal> CLOSED {
    (  $<DepartureBoatTerminal_tes> rdf:type . * ;
       rdf:type [ <DepartureBoatTerminal> ] ?
    )
}

<DepartureBusStop> CLOSED {
    (  $<DepartureBusStop_tes> rdf:type . * ;
       rdf:type [ <DepartureBusStop> ] ?
    )
}

<DepartureGate> CLOSED {
    (  $<DepartureGate_tes> rdf:type . * ;
       rdf:type [ <DepartureGate> ] ?
    )
}

<DeparturePlatform> CLOSED {
    (  $<DeparturePlatform_tes> rdf:type . * ;
       rdf:type [ <DeparturePlatform> ] ?
    )
}

<DepartureStation> CLOSED {
    (  $<DepartureStation_tes> rdf:type . * ;
       rdf:type [ <DepartureStation> ] ?
    )
}

<DepartureTerminal> CLOSED {
    (  $<DepartureTerminal_tes> rdf:type . * ;
       rdf:type [ <DepartureTerminal> ] ?
    )
}

<DepartureTime> CLOSED {
    (  $<DepartureTime_tes> rdf:type . * ;
       rdf:type [ <DepartureTime> ] ?
    )
}

<Dependencies> CLOSED {
    (  $<Dependencies_tes> rdf:type . * ;
       rdf:type [ <Dependencies> ] ?
    )
}

<DepositAccount> CLOSED {
    (  $<DepositAccount_tes> (  &<BankAccount_tes> ;
          rdf:type [ <BankAccount> ] ? ;
          &<InvestmentOrDeposit_tes> ;
          rdf:type [ <InvestmentOrDeposit> ] ? ;
          <amount> @linkml:String *
       ) ;
       rdf:type [ <DepositAccount> ] ?
    )
}

<Depth> CLOSED {
    (  $<Depth_tes> rdf:type . * ;
       rdf:type [ <Depth> ] ?
    )
}

<Dermatologic> CLOSED {
    (  $<Dermatologic_tes> rdf:type . * ;
       rdf:type [ <Dermatologic> ] ?
    )
}

<Dermatology> CLOSED {
    (  $<Dermatology_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Dermatology> ] ?
    )
}

<Device> CLOSED {
    (  $<Device_tes> rdf:type . * ;
       rdf:type [ <Device> ] ?
    )
}

<DiabeticDiet> CLOSED {
    (  $<DiabeticDiet_tes> rdf:type . * ;
       rdf:type [ <DiabeticDiet> ] ?
    )
}

<Diagnosis> CLOSED {
    (  $<Diagnosis_tes> rdf:type . * ;
       rdf:type [ <Diagnosis> ] ?
    )
}

<Diagnostic> CLOSED {
    (  $<Diagnostic_tes> rdf:type . * ;
       rdf:type [ <Diagnostic> ] ?
    )
}

<DiagnosticLab> CLOSED {
    (  $<DiagnosticLab_tes> (  &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ? ;
          <availableTest> @<MedicalTest> *
       ) ;
       rdf:type [ <DiagnosticLab> ] ?
    )
}

<DiagnosticProcedure> CLOSED {
    (  $<DiagnosticProcedure_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <DiagnosticProcedure> ] ?
    )
}

<Diagram> CLOSED {
    (  $<Diagram_tes> rdf:type . * ;
       rdf:type [ <Diagram> ] ?
    )
}

<Diet> CLOSED {
    (  $<Diet_tes> (  &<LifestyleModification_tes> ;
          rdf:type [ <LifestyleModification> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <dietFeatures> @<Text> * ;
          <endorsers> @linkml:String * ;
          <expertConsiderations> @<Text> * ;
          <physiologicalBenefits> @<Text> * ;
          <risks> @<Text> * ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <position> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <Diet> ] ?
    )
}

<DietarySupplement> CLOSED {
    (  $<DietarySupplement_tes> (  &<Substance_tes> ;
          rdf:type [ <Substance> ] ? ;
          <isProprietary> @<Boolean> * ;
          <manufacturer> @<Organization> * ;
          <mechanismOfAction> @<Text> * ;
          <nonProprietaryName> @<Text> * ;
          <proprietaryName> @<Text> * ;
          <recommendedIntake> @<RecommendedDoseSchedule> * ;
          <safetyConsideration> @<Text> * ;
          <targetPopulation> @<Text> *
       ) ;
       rdf:type [ <DietarySupplement> ] ?
    )
}

<DietFeatures> CLOSED {
    (  $<DietFeatures_tes> rdf:type . * ;
       rdf:type [ <DietFeatures> ] ?
    )
}

<DietNutrition> CLOSED {
    (  $<DietNutrition_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <DietNutrition> ] ?
    )
}

<DifferentialDiagnosis> CLOSED {
    (  $<DifferentialDiagnosis_tes> rdf:type . * ;
       rdf:type [ <DifferentialDiagnosis> ] ?
    )
}

<DigitalAudioTapeFormat> CLOSED {
    (  $<DigitalAudioTapeFormat_tes> rdf:type . * ;
       rdf:type [ <DigitalAudioTapeFormat> ] ?
    )
}

<DigitalDocument>  (
    CLOSED {
       (  $<DigitalDocument_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <hasDigitalDocumentPermission> @<DigitalDocumentPermission> *
          ) ;
          rdf:type [ <DigitalDocument> ] ?
       )
    } OR @<NoteDigitalDocument> OR @<PresentationDigitalDocument> OR @<SpreadsheetDigitalDocument> OR @<TextDigitalDocument>
)

<DigitalDocumentPermission> CLOSED {
    (  $<DigitalDocumentPermission_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <grantee> @linkml:String * ;
          <permissionType> @<DigitalDocumentPermissionType> *
       ) ;
       rdf:type [ <DigitalDocumentPermission> ] ?
    )
}

<DigitalDocumentPermissionType> CLOSED {
    (  $<DigitalDocumentPermissionType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <DigitalDocumentPermissionType> ] ?
    )
}

<DigitalFormat> CLOSED {
    (  $<DigitalFormat_tes> rdf:type . * ;
       rdf:type [ <DigitalFormat> ] ?
    )
}

<DirectApply> CLOSED {
    (  $<DirectApply_tes> rdf:type . * ;
       rdf:type [ <DirectApply> ] ?
    )
}

<Director> CLOSED {
    (  $<Director_tes> rdf:type . * ;
       rdf:type [ <Director> ] ?
    )
}

<Directors> CLOSED {
    (  $<Directors_tes> rdf:type . * ;
       rdf:type [ <Directors> ] ?
    )
}

<DisabilitySupport> CLOSED {
    (  $<DisabilitySupport_tes> rdf:type . * ;
       rdf:type [ <DisabilitySupport> ] ?
    )
}

<DisagreeAction> CLOSED {
    (  $<DisagreeAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ?
       ) ;
       rdf:type [ <DisagreeAction> ] ?
    )
}

<Discontinued> CLOSED {
    (  $<Discontinued_tes> rdf:type . * ;
       rdf:type [ <Discontinued> ] ?
    )
}

<Discount> CLOSED {
    (  $<Discount_tes> rdf:type . * ;
       rdf:type [ <Discount> ] ?
    )
}

<DiscountCode> CLOSED {
    (  $<DiscountCode_tes> rdf:type . * ;
       rdf:type [ <DiscountCode> ] ?
    )
}

<DiscountCurrency> CLOSED {
    (  $<DiscountCurrency_tes> rdf:type . * ;
       rdf:type [ <DiscountCurrency> ] ?
    )
}

<DiscoverAction> CLOSED {
    (  $<DiscoverAction_tes> (  &<FindAction_tes> ;
          rdf:type [ <FindAction> ] ?
       ) ;
       rdf:type [ <DiscoverAction> ] ?
    )
}

<Discusses> CLOSED {
    (  $<Discusses_tes> rdf:type . * ;
       rdf:type [ <Discusses> ] ?
    )
}

<DiscussionForumPosting> CLOSED {
    (  $<DiscussionForumPosting_tes> (  &<SocialMediaPosting_tes> ;
          rdf:type [ <SocialMediaPosting> ] ?
       ) ;
       rdf:type [ <DiscussionForumPosting> ] ?
    )
}

<DiscussionUrl> CLOSED {
    (  $<DiscussionUrl_tes> rdf:type . * ;
       rdf:type [ <DiscussionUrl> ] ?
    )
}

<DiseasePreventionInfo> CLOSED {
    (  $<DiseasePreventionInfo_tes> rdf:type . * ;
       rdf:type [ <DiseasePreventionInfo> ] ?
    )
}

<DiseaseSpreadStatistics> CLOSED {
    (  $<DiseaseSpreadStatistics_tes> rdf:type . * ;
       rdf:type [ <DiseaseSpreadStatistics> ] ?
    )
}

<DislikeAction> CLOSED {
    (  $<DislikeAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ?
       ) ;
       rdf:type [ <DislikeAction> ] ?
    )
}

<DissolutionDate> CLOSED {
    (  $<DissolutionDate_tes> rdf:type . * ;
       rdf:type [ <DissolutionDate> ] ?
    )
}

<Distance> CLOSED {
    (  $<Distance_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <Distance> ] ?
    )
}

<Distance> CLOSED {
    (  $<Distance_tes> rdf:type . * ;
       rdf:type [ <Distance> ] ?
    )
}

<DistanceFee> CLOSED {
    (  $<DistanceFee_tes> rdf:type . * ;
       rdf:type [ <DistanceFee> ] ?
    )
}

<Distillery> CLOSED {
    (  $<Distillery_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <Distillery> ] ?
    )
}

<DistinguishingSign> CLOSED {
    (  $<DistinguishingSign_tes> rdf:type . * ;
       rdf:type [ <DistinguishingSign> ] ?
    )
}

<Distribution> CLOSED {
    (  $<Distribution_tes> rdf:type . * ;
       rdf:type [ dcat:Distribution ] ?
    )
}

<Distribution> CLOSED {
    (  $<Distribution_tes> rdf:type . * ;
       rdf:type [ <Distribution> ] ?
    )
}

<DiversityPolicy> CLOSED {
    (  $<DiversityPolicy_tes> rdf:type . * ;
       rdf:type [ <DiversityPolicy> ] ?
    )
}

<DJMixAlbum> CLOSED {
    (  $<DJMixAlbum_tes> rdf:type . * ;
       rdf:type [ <DJMixAlbum> ] ?
    )
}

<Documentation> CLOSED {
    (  $<Documentation_tes> rdf:type . * ;
       rdf:type [ <Documentation> ] ?
    )
}

<DoesNotShip> CLOSED {
    (  $<DoesNotShip_tes> rdf:type . * ;
       rdf:type [ <DoesNotShip> ] ?
    )
}

<DomiciledMortgage> CLOSED {
    (  $<DomiciledMortgage_tes> rdf:type . * ;
       rdf:type [ <DomiciledMortgage> ] ?
    )
}

<DonateAction> CLOSED {
    (  $<DonateAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <DonateAction> ] ?
    )
}

<DoorTime> CLOSED {
    (  $<DoorTime_tes> rdf:type . * ;
       rdf:type [ <DoorTime> ] ?
    )
}

<DosageForm> CLOSED {
    (  $<DosageForm_tes> rdf:type . * ;
       rdf:type [ <DosageForm> ] ?
    )
}

<DoseSchedule>  (
    CLOSED {
       (  $<DoseSchedule_tes> (  &<MedicalIntangible_tes> ;
             rdf:type [ <MedicalIntangible> ] ? ;
             <frequency> @<Text> * ;
             <doseUnit> @<Text> * ;
             <doseValue> @linkml:String * ;
             <targetPopulation> @<Text> *
          ) ;
          rdf:type [ <DoseSchedule> ] ?
       )
    } OR @<MaximumDoseSchedule> OR @<RecommendedDoseSchedule> OR @<ReportedDoseSchedule>
)

<DoseSchedule> CLOSED {
    (  $<DoseSchedule_tes> rdf:type . * ;
       rdf:type [ <DoseSchedule> ] ?
    )
}

<DoseUnit> CLOSED {
    (  $<DoseUnit_tes> rdf:type . * ;
       rdf:type [ <DoseUnit> ] ?
    )
}

<DoseValue> CLOSED {
    (  $<DoseValue_tes> rdf:type . * ;
       rdf:type [ <DoseValue> ] ?
    )
}

<DoubleBlindedTrial> CLOSED {
    (  $<DoubleBlindedTrial_tes> rdf:type . * ;
       rdf:type [ <DoubleBlindedTrial> ] ?
    )
}

<DownloadAction> CLOSED {
    (  $<DownloadAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ?
       ) ;
       rdf:type [ <DownloadAction> ] ?
    )
}

<DownloadUrl> CLOSED {
    (  $<DownloadUrl_tes> rdf:type . * ;
       rdf:type [ <DownloadUrl> ] ?
    )
}

<Downpayment> CLOSED {
    (  $<Downpayment_tes> rdf:type . * ;
       rdf:type [ <Downpayment> ] ?
    )
}

<DownPayment> CLOSED {
    (  $<DownPayment_tes> rdf:type . * ;
       rdf:type [ <DownPayment> ] ?
    )
}

<DownvoteCount> CLOSED {
    (  $<DownvoteCount_tes> rdf:type . * ;
       rdf:type [ <DownvoteCount> ] ?
    )
}

<DrainsTo> CLOSED {
    (  $<DrainsTo_tes> rdf:type . * ;
       rdf:type [ <DrainsTo> ] ?
    )
}

<DrawAction> CLOSED {
    (  $<DrawAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ?
       ) ;
       rdf:type [ <DrawAction> ] ?
    )
}

<Drawing> CLOSED {
    (  $<Drawing_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Drawing> ] ?
    )
}

<DrinkAction> CLOSED {
    (  $<DrinkAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <DrinkAction> ] ?
    )
}

<DriveWheelConfiguration> CLOSED {
    (  $<DriveWheelConfiguration_tes> rdf:type . * ;
       rdf:type [ <DriveWheelConfiguration> ] ?
    )
}

<DriveWheelConfigurationValue> CLOSED {
    (  $<DriveWheelConfigurationValue_tes> (  &<QualitativeValue_tes> ;
          rdf:type [ <QualitativeValue> ] ?
       ) ;
       rdf:type [ <DriveWheelConfigurationValue> ] ?
    )
}

<DrivingSchoolVehicleUsage> CLOSED {
    (  $<DrivingSchoolVehicleUsage_tes> rdf:type . * ;
       rdf:type [ <DrivingSchoolVehicleUsage> ] ?
    )
}

<DropoffLocation> CLOSED {
    (  $<DropoffLocation_tes> rdf:type . * ;
       rdf:type [ <DropoffLocation> ] ?
    )
}

<DropoffTime> CLOSED {
    (  $<DropoffTime_tes> rdf:type . * ;
       rdf:type [ <DropoffTime> ] ?
    )
}

<Drug> CLOSED {
    (  $<Drug_tes> (  &<Substance_tes> ;
          rdf:type [ <Substance> ] ? ;
          <administrationRoute> @<Text> * ;
          <alcoholWarning> @<Text> * ;
          <availableStrength> @<DrugStrength> * ;
          <breastfeedingWarning> @<Text> * ;
          <clincalPharmacology> @<Text> * ;
          <clinicalPharmacology> @<Text> * ;
          <dosageForm> @<Text> * ;
          <doseSchedule> @<DoseSchedule> * ;
          <drugClass> @<DrugClass> * ;
          <drugUnit> @<Text> * ;
          <foodWarning> @<Text> * ;
          <includedInHealthInsurancePlan> @<HealthInsurancePlan> * ;
          <interactingDrug> @<Drug> * ;
          <isAvailableGenerically> @<Boolean> * ;
          <isProprietary> @<Boolean> * ;
          <labelDetails> @<URL> * ;
          <manufacturer> @<Organization> * ;
          <mechanismOfAction> @<Text> * ;
          <nonProprietaryName> @<Text> * ;
          <overdosage> @<Text> * ;
          <pregnancyCategory> @<DrugPregnancyCategory> * ;
          <pregnancyWarning> @<Text> * ;
          <prescribingInfo> @<URL> * ;
          <prescriptionStatus> @linkml:String * ;
          <proprietaryName> @<Text> * ;
          <relatedDrug> @<Drug> * ;
          <rxcui> @<Text> * ;
          <warning> @linkml:String *
       ) ;
       rdf:type [ <Drug> ] ?
    )
}

<Drug> CLOSED {
    (  $<Drug_tes> rdf:type . * ;
       rdf:type [ <Drug> ] ?
    )
}

<DrugClass> CLOSED {
    (  $<DrugClass_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <drug> @<Drug> *
       ) ;
       rdf:type [ <DrugClass> ] ?
    )
}

<DrugClass> CLOSED {
    (  $<DrugClass_tes> rdf:type . * ;
       rdf:type [ <DrugClass> ] ?
    )
}

<DrugCost> CLOSED {
    (  $<DrugCost_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <applicableLocation> @<AdministrativeArea> * ;
          <costCategory> @<DrugCostCategory> * ;
          <costCurrency> @<Text> * ;
          <costOrigin> @<Text> * ;
          <costPerUnit> @linkml:String * ;
          <drugUnit> @<Text> *
       ) ;
       rdf:type [ <DrugCost> ] ?
    )
}

<DrugCostCategory> CLOSED {
    (  $<DrugCostCategory_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <DrugCostCategory> ] ?
    )
}

<DrugLegalStatus> CLOSED {
    (  $<DrugLegalStatus_tes> (  &<MedicalIntangible_tes> ;
          rdf:type [ <MedicalIntangible> ] ? ;
          <applicableLocation> @<AdministrativeArea> *
       ) ;
       rdf:type [ <DrugLegalStatus> ] ?
    )
}

<DrugPregnancyCategory> CLOSED {
    (  $<DrugPregnancyCategory_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <DrugPregnancyCategory> ] ?
    )
}

<DrugPrescriptionStatus> CLOSED {
    (  $<DrugPrescriptionStatus_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <DrugPrescriptionStatus> ] ?
    )
}

<DrugStrength> CLOSED {
    (  $<DrugStrength_tes> (  &<MedicalIntangible_tes> ;
          rdf:type [ <MedicalIntangible> ] ? ;
          <activeIngredient> @<Text> * ;
          <availableIn> @<AdministrativeArea> * ;
          <maximumIntake> @<MaximumDoseSchedule> * ;
          <strengthUnit> @<Text> * ;
          <strengthValue> @<Number> *
       ) ;
       rdf:type [ <DrugStrength> ] ?
    )
}

<DrugUnit> CLOSED {
    (  $<DrugUnit_tes> rdf:type . * ;
       rdf:type [ <DrugUnit> ] ?
    )
}

<DryCleaningOrLaundry> CLOSED {
    (  $<DryCleaningOrLaundry_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <DryCleaningOrLaundry> ] ?
    )
}

<DuplicateTherapy> CLOSED {
    (  $<DuplicateTherapy_tes> rdf:type . * ;
       rdf:type [ <DuplicateTherapy> ] ?
    )
}

<Duration> CLOSED {
    (  $<Duration_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <Duration> ] ?
    )
}

<DurationOfWarranty> CLOSED {
    (  $<DurationOfWarranty_tes> rdf:type . * ;
       rdf:type [ <DurationOfWarranty> ] ?
    )
}

<DuringMedia> CLOSED {
    (  $<DuringMedia_tes> rdf:type . * ;
       rdf:type [ <DuringMedia> ] ?
    )
}

<DVDFormat> CLOSED {
    (  $<DVDFormat_tes> rdf:type . * ;
       rdf:type [ <DVDFormat> ] ?
    )
}

<Ear> CLOSED {
    (  $<Ear_tes> rdf:type . * ;
       rdf:type [ <Ear> ] ?
    )
}

<EarlyPrepaymentPenalty> CLOSED {
    (  $<EarlyPrepaymentPenalty_tes> rdf:type . * ;
       rdf:type [ <EarlyPrepaymentPenalty> ] ?
    )
}

<EatAction> CLOSED {
    (  $<EatAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <EatAction> ] ?
    )
}

<EBook> CLOSED {
    (  $<EBook_tes> rdf:type . * ;
       rdf:type [ <EBook> ] ?
    )
}

<EditedOrCroppedContent> CLOSED {
    (  $<EditedOrCroppedContent_tes> rdf:type . * ;
       rdf:type [ <EditedOrCroppedContent> ] ?
    )
}

<Editor> CLOSED {
    (  $<Editor_tes> rdf:type . * ;
       rdf:type [ <Editor> ] ?
    )
}

<EducationalAlignment> CLOSED {
    (  $<EducationalAlignment_tes> rdf:type . * ;
       rdf:type [ <EducationalAlignment> ] ?
    )
}

<EducationalAudience> CLOSED {
    (  $<EducationalAudience_tes> (  &<Audience_tes> ;
          rdf:type [ <Audience> ] ? ;
          <educationalRole> @<Text> *
       ) ;
       rdf:type [ <EducationalAudience> ] ?
    )
}

<EducationalCredentialAwarded> CLOSED {
    (  $<EducationalCredentialAwarded_tes> rdf:type . * ;
       rdf:type [ <EducationalCredentialAwarded> ] ?
    )
}

<EducationalFramework> CLOSED {
    (  $<EducationalFramework_tes> rdf:type . * ;
       rdf:type [ <EducationalFramework> ] ?
    )
}

<EducationalLevel> CLOSED {
    (  $<EducationalLevel_tes> rdf:type . * ;
       rdf:type [ <EducationalLevel> ] ?
    )
}

<EducationalOccupationalCredential> CLOSED {
    (  $<EducationalOccupationalCredential_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <competencyRequired> @linkml:String * ;
          <credentialCategory> @linkml:String * ;
          <recognizedBy> @<Organization> * ;
          <validFor> @<Duration> * ;
          <validIn> @<AdministrativeArea> *
       ) ;
       rdf:type [ <EducationalOccupationalCredential> ] ?
    )
}

<EducationalOccupationalProgram>  (
    CLOSED {
       (  $<EducationalOccupationalProgram_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <applicationDeadline> @<Date> * ;
             <applicationStartDate> @<Date> * ;
             <dayOfWeek> @<DayOfWeek> * ;
             <educationalCredentialAwarded> @linkml:String * ;
             <educationalProgramMode> @linkml:String * ;
             <endDate> @linkml:String * ;
             <financialAidEligible> @linkml:String * ;
             <hasCourse> @<Course> * ;
             <maximumEnrollment> @<Integer> * ;
             <numberOfCredits> @linkml:String * ;
             <occupationalCategory> @linkml:String * ;
             <occupationalCredentialAwarded> @linkml:String * ;
             <offers> @linkml:String * ;
             <programPrerequisites> @linkml:String * ;
             <programType> @linkml:String * ;
             <provider> @linkml:String * ;
             <salaryUponCompletion> @<MonetaryAmountDistribution> * ;
             <startDate> @linkml:String * ;
             <termDuration> @<Duration> * ;
             <termsPerYear> @<Number> * ;
             <timeOfDay> @<Text> * ;
             <timeToComplete> @<Duration> * ;
             <trainingSalary> @<MonetaryAmountDistribution> * ;
             <typicalCreditsPerTerm> @linkml:String *
          ) ;
          rdf:type [ <EducationalOccupationalProgram> ] ?
       )
    } OR @<WorkBasedProgram>
)

<EducationalOrganization>  (
    CLOSED {
       (  $<EducationalOrganization_tes> (  &<CivicStructure_tes> ;
             rdf:type [ <CivicStructure> ] ? ;
             &<Organization_tes> ;
             rdf:type [ <Organization> ] ? ;
             <alumni> @<Person> * ;
             <actionableFeedbackPolicy> @linkml:String * ;
             <areaServed> @linkml:String * ;
             <correctionsPolicy> @linkml:String * ;
             <diversityStaffingReport> @linkml:String * ;
             <duns> @<Text> * ;
             <funder> @linkml:String * ;
             <leiCode> @<Text> * ;
             <location> @linkml:String * ;
             <memberOf> @linkml:String * ;
             <ownershipFundingInfo> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <sponsor> @linkml:String * ;
             <taxID> @<Text> * ;
             <unnamedSourcesPolicy> @linkml:String * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <brand> @linkml:String * ;
             <contactPoint> @<ContactPoint> * ;
             <contactPoints> @<ContactPoint> * ;
             <department> @<Organization> * ;
             <dissolutionDate> @<Date> * ;
             <diversityPolicy> @linkml:String * ;
             <email> @<Text> * ;
             <employee> @<Person> * ;
             <employees> @<Person> * ;
             <ethicsPolicy> @linkml:String * ;
             <founder> @<Person> * ;
             <founders> @<Person> * ;
             <foundingDate> @<Date> * ;
             <foundingLocation> @<Place> * ;
             <hasCredential> @<EducationalOccupationalCredential> * ;
             <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
             <hasOfferCatalog> @<OfferCatalog> * ;
             <hasPOS> @<Place> * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <knowsAbout> @linkml:String * ;
             <knowsLanguage> @linkml:String * ;
             <legalName> @<Text> * ;
             <makesOffer> @<Offer> * ;
             <member> @linkml:String * ;
             <members> @linkml:String * ;
             <naics> @<Text> * ;
             <nonprofitStatus> @<NonprofitType> * ;
             <numberOfEmployees> @<QuantitativeValue> * ;
             <owns> @linkml:String * ;
             <parentOrganization> @<Organization> * ;
             <seeks> @<Demand> * ;
             <serviceArea> @linkml:String * ;
             <subOrganization> @<Organization> * ;
             <vatID> @<Text> *
          ) ;
          rdf:type [ <EducationalOrganization> ] ?
       )
    } OR @<CollegeOrUniversity> OR @<ElementarySchool> OR @<HighSchool> OR @<MiddleSchool> OR @<Preschool> OR @<School>
)

<EducationalProgramMode> CLOSED {
    (  $<EducationalProgramMode_tes> rdf:type . * ;
       rdf:type [ <EducationalProgramMode> ] ?
    )
}

<EducationalRole> CLOSED {
    (  $<EducationalRole_tes> rdf:type . * ;
       rdf:type [ <EducationalRole> ] ?
    )
}

<EducationalUse> CLOSED {
    (  $<EducationalUse_tes> rdf:type . * ;
       rdf:type [ <EducationalUse> ] ?
    )
}

<EducationEvent> CLOSED {
    (  $<EducationEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          <assesses> @linkml:String * ;
          <educationalLevel> @linkml:String * ;
          <teaches> @linkml:String *
       ) ;
       rdf:type [ <EducationEvent> ] ?
    )
}

<EducationRequirements> CLOSED {
    (  $<EducationRequirements_tes> rdf:type . * ;
       rdf:type [ <EducationRequirements> ] ?
    )
}

<EduQuestionType> CLOSED {
    (  $<EduQuestionType_tes> rdf:type . * ;
       rdf:type [ <EduQuestionType> ] ?
    )
}

<EffectivenessHealthAspect> CLOSED {
    (  $<EffectivenessHealthAspect_tes> rdf:type . * ;
       rdf:type [ <EffectivenessHealthAspect> ] ?
    )
}

<Electrician> CLOSED {
    (  $<Electrician_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <Electrician> ] ?
    )
}

<ElectronicsStore> CLOSED {
    (  $<ElectronicsStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ElectronicsStore> ] ?
    )
}

<ElementarySchool> CLOSED {
    (  $<ElementarySchool_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <ElementarySchool> ] ?
    )
}

<Elevation> CLOSED {
    (  $<Elevation_tes> rdf:type . * ;
       rdf:type [ <Elevation> ] ?
    )
}

<EligibilityToWorkRequirement> CLOSED {
    (  $<EligibilityToWorkRequirement_tes> rdf:type . * ;
       rdf:type [ <EligibilityToWorkRequirement> ] ?
    )
}

<EligibleCustomerType> CLOSED {
    (  $<EligibleCustomerType_tes> rdf:type . * ;
       rdf:type [ <EligibleCustomerType> ] ?
    )
}

<EligibleDuration> CLOSED {
    (  $<EligibleDuration_tes> rdf:type . * ;
       rdf:type [ <EligibleDuration> ] ?
    )
}

<EligibleQuantity> CLOSED {
    (  $<EligibleQuantity_tes> rdf:type . * ;
       rdf:type [ <EligibleQuantity> ] ?
    )
}

<EligibleTransactionVolume> CLOSED {
    (  $<EligibleTransactionVolume_tes> rdf:type . * ;
       rdf:type [ <EligibleTransactionVolume> ] ?
    )
}

<Email> CLOSED {
    (  $<Email_tes> rdf:type . * ;
       rdf:type [ <Email> ] ?
    )
}

<EmailMessage> CLOSED {
    (  $<EmailMessage_tes> (  &<Message_tes> ;
          rdf:type [ <Message> ] ?
       ) ;
       rdf:type [ <EmailMessage> ] ?
    )
}

<Embassy> CLOSED {
    (  $<Embassy_tes> (  &<GovernmentBuilding_tes> ;
          rdf:type [ <GovernmentBuilding> ] ?
       ) ;
       rdf:type [ <Embassy> ] ?
    )
}

<EmbedUrl> CLOSED {
    (  $<EmbedUrl_tes> rdf:type . * ;
       rdf:type [ <EmbedUrl> ] ?
    )
}

<Emergency> CLOSED {
    (  $<Emergency_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Emergency> ] ?
    )
}

<EmergencyService>  (
    CLOSED {
       (  $<EmergencyService_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <EmergencyService> ] ?
       )
    } OR @<FireStation> OR @<PoliceStation>
)

<EmissionsCO2> CLOSED {
    (  $<EmissionsCO2_tes> rdf:type . * ;
       rdf:type [ <EmissionsCO2> ] ?
    )
}

<Employee> CLOSED {
    (  $<Employee_tes> rdf:type . * ;
       rdf:type [ <Employee> ] ?
    )
}

<EmployeeRole> CLOSED {
    (  $<EmployeeRole_tes> (  &<OrganizationRole_tes> ;
          rdf:type [ <OrganizationRole> ] ? ;
          <baseSalary> @linkml:String * ;
          <salaryCurrency> @<Text> *
       ) ;
       rdf:type [ <EmployeeRole> ] ?
    )
}

<Employees> CLOSED {
    (  $<Employees_tes> rdf:type . * ;
       rdf:type [ <Employees> ] ?
    )
}

<EmployerAggregateRating> CLOSED {
    (  $<EmployerAggregateRating_tes> (  &<AggregateRating_tes> ;
          rdf:type [ <AggregateRating> ] ?
       ) ;
       rdf:type [ <EmployerAggregateRating> ] ?
    )
}

<EmployerOverview> CLOSED {
    (  $<EmployerOverview_tes> rdf:type . * ;
       rdf:type [ <EmployerOverview> ] ?
    )
}

<EmployerReview> CLOSED {
    (  $<EmployerReview_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ?
       ) ;
       rdf:type [ <EmployerReview> ] ?
    )
}

<EmploymentAgency> CLOSED {
    (  $<EmploymentAgency_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <EmploymentAgency> ] ?
    )
}

<EmploymentType> CLOSED {
    (  $<EmploymentType_tes> rdf:type . * ;
       rdf:type [ <EmploymentType> ] ?
    )
}

<EmploymentUnit> CLOSED {
    (  $<EmploymentUnit_tes> rdf:type . * ;
       rdf:type [ <EmploymentUnit> ] ?
    )
}

<EncodesBioChemEntity> CLOSED {
    (  $<EncodesBioChemEntity_tes> rdf:type . * ;
       rdf:type [ <EncodesBioChemEntity> ] ?
    )
}

<EncodesCreativeWork> CLOSED {
    (  $<EncodesCreativeWork_tes> rdf:type . * ;
       rdf:type [ <EncodesCreativeWork> ] ?
    )
}

<Encoding> CLOSED {
    (  $<Encoding_tes> rdf:type . * ;
       rdf:type [ <Encoding> ] ?
    )
}

<EncodingFormat> CLOSED {
    (  $<EncodingFormat_tes> rdf:type . * ;
       rdf:type [ <EncodingFormat> ] ?
    )
}

<Encodings> CLOSED {
    (  $<Encodings_tes> rdf:type . * ;
       rdf:type [ <Encodings> ] ?
    )
}

<EncodingType> CLOSED {
    (  $<EncodingType_tes> rdf:type . * ;
       rdf:type [ <EncodingType> ] ?
    )
}

<EndDate> CLOSED {
    (  $<EndDate_tes> rdf:type . * ;
       rdf:type [ <EndDate> ] ?
    )
}

<Endocrine> CLOSED {
    (  $<Endocrine_tes> rdf:type . * ;
       rdf:type [ <Endocrine> ] ?
    )
}

<EndOffset> CLOSED {
    (  $<EndOffset_tes> rdf:type . * ;
       rdf:type [ <EndOffset> ] ?
    )
}

<EndorseAction> CLOSED {
    (  $<EndorseAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ? ;
          <endorsee> @linkml:String *
       ) ;
       rdf:type [ <EndorseAction> ] ?
    )
}

<EndorsementRating> CLOSED {
    (  $<EndorsementRating_tes> (  &<Rating_tes> ;
          rdf:type [ <Rating> ] ?
       ) ;
       rdf:type [ <EndorsementRating> ] ?
    )
}

<Endorsers> CLOSED {
    (  $<Endorsers_tes> rdf:type . * ;
       rdf:type [ <Endorsers> ] ?
    )
}

<EndTime> CLOSED {
    (  $<EndTime_tes> rdf:type . * ;
       rdf:type [ <EndTime> ] ?
    )
}

<Energy> CLOSED {
    (  $<Energy_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <Energy> ] ?
    )
}

<EnergyConsumptionDetails> CLOSED {
    (  $<EnergyConsumptionDetails_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <energyEfficiencyScaleMax> @<EUEnergyEfficiencyEnumeration> * ;
          <energyEfficiencyScaleMin> @<EUEnergyEfficiencyEnumeration> * ;
          <hasEnergyEfficiencyCategory> @<EnergyEfficiencyEnumeration> *
       ) ;
       rdf:type [ <EnergyConsumptionDetails> ] ?
    )
}

<EnergyEfficiencyEnumeration>  (
    CLOSED {
       (  $<EnergyEfficiencyEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <EnergyEfficiencyEnumeration> ] ?
       )
    } OR @<EUEnergyEfficiencyEnumeration> OR @<EnergyStarEnergyEfficiencyEnumeration>
)

<EnergyEfficiencyScaleMax> CLOSED {
    (  $<EnergyEfficiencyScaleMax_tes> rdf:type . * ;
       rdf:type [ <EnergyEfficiencyScaleMax> ] ?
    )
}

<EnergyEfficiencyScaleMin> CLOSED {
    (  $<EnergyEfficiencyScaleMin_tes> rdf:type . * ;
       rdf:type [ <EnergyEfficiencyScaleMin> ] ?
    )
}

<EnergyStarCertified> CLOSED {
    (  $<EnergyStarCertified_tes> rdf:type . * ;
       rdf:type [ <EnergyStarCertified> ] ?
    )
}

<EnergyStarEnergyEfficiencyEnumeration> CLOSED {
    (  $<EnergyStarEnergyEfficiencyEnumeration_tes> (  &<EnergyEfficiencyEnumeration_tes> ;
          rdf:type [ <EnergyEfficiencyEnumeration> ] ?
       ) ;
       rdf:type [ <EnergyStarEnergyEfficiencyEnumeration> ] ?
    )
}

<EngineDisplacement> CLOSED {
    (  $<EngineDisplacement_tes> rdf:type . * ;
       rdf:type [ <EngineDisplacement> ] ?
    )
}

<EnginePower> CLOSED {
    (  $<EnginePower_tes> rdf:type . * ;
       rdf:type [ <EnginePower> ] ?
    )
}

<EngineSpecification> CLOSED {
    (  $<EngineSpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <engineDisplacement> @<QuantitativeValue> * ;
          <enginePower> @<QuantitativeValue> * ;
          <engineType> @linkml:String * ;
          <fuelType> @linkml:String * ;
          <torque> @<QuantitativeValue> *
       ) ;
       rdf:type [ <EngineSpecification> ] ?
    )
}

<EngineType> CLOSED {
    (  $<EngineType_tes> rdf:type . * ;
       rdf:type [ <EngineType> ] ?
    )
}

<EnrollingByInvitation> CLOSED {
    (  $<EnrollingByInvitation_tes> rdf:type . * ;
       rdf:type [ <EnrollingByInvitation> ] ?
    )
}

<EntertainmentBusiness>  (
    CLOSED {
       (  $<EntertainmentBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <EntertainmentBusiness> ] ?
       )
    } OR @<AdultEntertainment> OR @<AmusementPark> OR @<ArtGallery> OR @<Casino> OR @<ComedyClub> OR @<MovieTheater> OR
    @<NightClub>
)

<EntryPoint> CLOSED {
    (  $<EntryPoint_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <actionApplication> @<SoftwareApplication> * ;
          <actionPlatform> @linkml:String * ;
          <application> @<SoftwareApplication> * ;
          <contentType> @<Text> * ;
          <encodingType> @<Text> * ;
          <httpMethod> @<Text> * ;
          <urlTemplate> @<Text> *
       ) ;
       rdf:type [ <EntryPoint> ] ?
    )
}

<Enumeration>  (
    CLOSED {
       (  $<Enumeration_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <supersededBy> @linkml:String *
          ) ;
          rdf:type [ <Enumeration> ] ?
       )
    } OR @<BoardingPolicyType> OR @<BookFormatType> OR @<BusinessEntityType> OR @<BusinessFunction> OR @<CarUsageType> OR
    @<ContactPointOption> OR @<DayOfWeek> OR @<DeliveryMethod> OR @<DigitalDocumentPermissionType> OR
    @<EnergyEfficiencyEnumeration> OR @<EventAttendanceModeEnumeration> OR @<GamePlayMode> OR @<GenderType> OR
    @<GovernmentBenefitsType> OR @<HealthAspectEnumeration> OR @<ItemAvailability> OR @<ItemListOrderType> OR @<LegalValueLevel> OR
    @<MapCategoryType> OR @<MeasurementTypeEnumeration> OR @<MediaManipulationRatingEnumeration> OR @<MedicalEnumeration> OR
    @<MerchantReturnEnumeration> OR @<MusicAlbumProductionType> OR @<MusicAlbumReleaseType> OR @<MusicReleaseFormatType> OR
    @<NonprofitType> OR @<OfferItemCondition> OR @<PaymentMethod> OR @<PhysicalActivityCategory> OR
    @<PriceComponentTypeEnumeration> OR @<PriceTypeEnumeration> OR @<QualitativeValue> OR @<RefundTypeEnumeration> OR
    @<RestrictedDiet> OR @<ReturnFeesEnumeration> OR @<ReturnLabelSourceEnumeration> OR @<ReturnMethodEnumeration> OR
    @<RsvpResponseType> OR @<SizeGroupEnumeration> OR @<SizeSystemEnumeration> OR @<Specialty> OR @<StatusEnumeration> OR
    @<WarrantyScope>
)

<Epidemiology> CLOSED {
    (  $<Epidemiology_tes> rdf:type . * ;
       rdf:type [ <Epidemiology> ] ?
    )
}

<Episode>  (
    CLOSED {
       (  $<Episode_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <actor> @<Person> * ;
             <duration> @<Duration> * ;
             <episodeNumber> @linkml:String * ;
             <partOfSeason> @<CreativeWorkSeason> * ;
             <partOfSeries> @<CreativeWorkSeries> * ;
             <actors> @<Person> * ;
             <director> @<Person> * ;
             <directors> @<Person> * ;
             <musicBy> @linkml:String * ;
             <productionCompany> @<Organization> * ;
             <trailer> @<VideoObject> *
          ) ;
          rdf:type [ <Episode> ] ?
       )
    } OR @<PodcastEpisode> OR @<RadioEpisode> OR @<TVEpisode>
)

<Episodes> CLOSED {
    (  $<Episodes_tes> rdf:type . * ;
       rdf:type [ <Episodes> ] ?
    )
}

<EPRelease> CLOSED {
    (  $<EPRelease_tes> rdf:type . * ;
       rdf:type [ <EPRelease> ] ?
    )
}

<Equal> CLOSED {
    (  $<Equal_tes> rdf:type . * ;
       rdf:type [ <Equal> ] ?
    )
}

<Error> CLOSED {
    (  $<Error_tes> rdf:type . * ;
       rdf:type [ <Error> ] ?
    )
}

<EstimatedCost> CLOSED {
    (  $<EstimatedCost_tes> rdf:type . * ;
       rdf:type [ <EstimatedCost> ] ?
    )
}

<EstimatedFlightDuration> CLOSED {
    (  $<EstimatedFlightDuration_tes> rdf:type . * ;
       rdf:type [ <EstimatedFlightDuration> ] ?
    )
}

<EstimatedSalary> CLOSED {
    (  $<EstimatedSalary_tes> rdf:type . * ;
       rdf:type [ <EstimatedSalary> ] ?
    )
}

<EstimatesRiskOf> CLOSED {
    (  $<EstimatesRiskOf_tes> rdf:type . * ;
       rdf:type [ <EstimatesRiskOf> ] ?
    )
}

<EthicsPolicy> CLOSED {
    (  $<EthicsPolicy_tes> rdf:type . * ;
       rdf:type [ <EthicsPolicy> ] ?
    )
}

<EUEnergyEfficiencyCategoryA> CLOSED {
    (  $<EUEnergyEfficiencyCategoryA_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryA> ] ?
    )
}

<EUEnergyEfficiencyCategoryA1Plus> CLOSED {
    (  $<EUEnergyEfficiencyCategoryA1Plus_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryA1Plus> ] ?
    )
}

<EUEnergyEfficiencyCategoryA2Plus> CLOSED {
    (  $<EUEnergyEfficiencyCategoryA2Plus_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryA2Plus> ] ?
    )
}

<EUEnergyEfficiencyCategoryA3Plus> CLOSED {
    (  $<EUEnergyEfficiencyCategoryA3Plus_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryA3Plus> ] ?
    )
}

<EUEnergyEfficiencyCategoryB> CLOSED {
    (  $<EUEnergyEfficiencyCategoryB_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryB> ] ?
    )
}

<EUEnergyEfficiencyCategoryC> CLOSED {
    (  $<EUEnergyEfficiencyCategoryC_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryC> ] ?
    )
}

<EUEnergyEfficiencyCategoryD> CLOSED {
    (  $<EUEnergyEfficiencyCategoryD_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryD> ] ?
    )
}

<EUEnergyEfficiencyCategoryE> CLOSED {
    (  $<EUEnergyEfficiencyCategoryE_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryE> ] ?
    )
}

<EUEnergyEfficiencyCategoryF> CLOSED {
    (  $<EUEnergyEfficiencyCategoryF_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryF> ] ?
    )
}

<EUEnergyEfficiencyCategoryG> CLOSED {
    (  $<EUEnergyEfficiencyCategoryG_tes> rdf:type . * ;
       rdf:type [ <EUEnergyEfficiencyCategoryG> ] ?
    )
}

<EUEnergyEfficiencyEnumeration> CLOSED {
    (  $<EUEnergyEfficiencyEnumeration_tes> (  &<EnergyEfficiencyEnumeration_tes> ;
          rdf:type [ <EnergyEfficiencyEnumeration> ] ?
       ) ;
       rdf:type [ <EUEnergyEfficiencyEnumeration> ] ?
    )
}

<Event>  (
    CLOSED {
       (  $<Event_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <about> @<Thing> * ;
             <actor> @<Person> * ;
             <duration> @<Duration> * ;
             <funder> @linkml:String * ;
             <location> @linkml:String * ;
             <sponsor> @linkml:String * ;
             <workFeatured> @<CreativeWork> * ;
             <workPerformed> @<CreativeWork> * ;
             <aggregateRating> @<AggregateRating> * ;
             <attendee> @linkml:String * ;
             <attendees> @linkml:String * ;
             <audience> @<Audience> * ;
             <composer> @linkml:String * ;
             <contributor> @linkml:String * ;
             <director> @<Person> * ;
             <doorTime> @linkml:String * ;
             <endDate> @linkml:String * ;
             <eventAttendanceMode> @<EventAttendanceModeEnumeration> * ;
             <eventSchedule> @<Schedule> * ;
             <eventStatus> @<EventStatusType> * ;
             <inLanguage> @linkml:String * ;
             <isAccessibleForFree> @<Boolean> * ;
             <maximumAttendeeCapacity> @<Integer> * ;
             <maximumPhysicalAttendeeCapacity> @<Integer> * ;
             <maximumVirtualAttendeeCapacity> @<Integer> * ;
             <offers> @linkml:String * ;
             <organizer> @linkml:String * ;
             <performer> @linkml:String * ;
             <performers> @linkml:String * ;
             <previousStartDate> @<Date> * ;
             <recordedIn> @<CreativeWork> * ;
             <remainingAttendeeCapacity> @<Integer> * ;
             <review> @<Review> * ;
             <startDate> @linkml:String * ;
             <subEvent> @<Event> * ;
             <subEvents> @<Event> * ;
             <superEvent> @<Event> * ;
             <translator> @linkml:String * ;
             <typicalAgeRange> @<Text> *
          ) ;
          rdf:type [ <Event> ] ?
       )
    } OR @<BusinessEvent> OR @<ChildrensEvent> OR @<ComedyEvent> OR @<CourseInstance> OR @<DanceEvent> OR @<DeliveryEvent> OR
    @<EducationEvent> OR @<EventSeries> OR @<ExhibitionEvent> OR @<Festival> OR @<FoodEvent> OR @<Hackathon> OR @<LiteraryEvent> OR
    @<MusicEvent> OR @<PublicationEvent> OR @<SaleEvent> OR @<ScreeningEvent> OR @<SocialEvent> OR @<SportsEvent> OR
    @<TheaterEvent> OR @<UserInteraction> OR @<VisualArtsEvent>
)

<Event> CLOSED {
    (  $<Event_tes> rdf:type . * ;
       rdf:type [ <Event> ] ?
    )
}

<EventAttendanceMode> CLOSED {
    (  $<EventAttendanceMode_tes> rdf:type . * ;
       rdf:type [ <EventAttendanceMode> ] ?
    )
}

<EventAttendanceModeEnumeration> CLOSED {
    (  $<EventAttendanceModeEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <EventAttendanceModeEnumeration> ] ?
    )
}

<EventCancelled> CLOSED {
    (  $<EventCancelled_tes> rdf:type . * ;
       rdf:type [ <EventCancelled> ] ?
    )
}

<EventMovedOnline> CLOSED {
    (  $<EventMovedOnline_tes> rdf:type . * ;
       rdf:type [ <EventMovedOnline> ] ?
    )
}

<EventPostponed> CLOSED {
    (  $<EventPostponed_tes> rdf:type . * ;
       rdf:type [ <EventPostponed> ] ?
    )
}

<EventRescheduled> CLOSED {
    (  $<EventRescheduled_tes> rdf:type . * ;
       rdf:type [ <EventRescheduled> ] ?
    )
}

<EventReservation> CLOSED {
    (  $<EventReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ?
       ) ;
       rdf:type [ <EventReservation> ] ?
    )
}

<Events> CLOSED {
    (  $<Events_tes> rdf:type . * ;
       rdf:type [ <Events> ] ?
    )
}

<EventSchedule> CLOSED {
    (  $<EventSchedule_tes> rdf:type . * ;
       rdf:type [ <EventSchedule> ] ?
    )
}

<EventScheduled> CLOSED {
    (  $<EventScheduled_tes> rdf:type . * ;
       rdf:type [ <EventScheduled> ] ?
    )
}

<EventSeries> CLOSED {
    (  $<EventSeries_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          &<Series_tes> ;
          rdf:type [ <Series> ] ?
       ) ;
       rdf:type [ <EventSeries> ] ?
    )
}

<EventStatus> CLOSED {
    (  $<EventStatus_tes> rdf:type . * ;
       rdf:type [ <EventStatus> ] ?
    )
}

<EventStatusType> CLOSED {
    (  $<EventStatusType_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <EventStatusType> ] ?
    )
}

<EventVenue> CLOSED {
    (  $<EventVenue_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <EventVenue> ] ?
    )
}

<EvidenceLevel> CLOSED {
    (  $<EvidenceLevel_tes> rdf:type . * ;
       rdf:type [ <EvidenceLevel> ] ?
    )
}

<EvidenceLevelA> CLOSED {
    (  $<EvidenceLevelA_tes> rdf:type . * ;
       rdf:type [ <EvidenceLevelA> ] ?
    )
}

<EvidenceLevelB> CLOSED {
    (  $<EvidenceLevelB_tes> rdf:type . * ;
       rdf:type [ <EvidenceLevelB> ] ?
    )
}

<EvidenceLevelC> CLOSED {
    (  $<EvidenceLevelC_tes> rdf:type . * ;
       rdf:type [ <EvidenceLevelC> ] ?
    )
}

<EvidenceOrigin> CLOSED {
    (  $<EvidenceOrigin_tes> rdf:type . * ;
       rdf:type [ <EvidenceOrigin> ] ?
    )
}

<ExampleOfWork> CLOSED {
    (  $<ExampleOfWork_tes> rdf:type . * ;
       rdf:type [ <ExampleOfWork> ] ?
    )
}

<ExceptDate> CLOSED {
    (  $<ExceptDate_tes> rdf:type . * ;
       rdf:type [ <ExceptDate> ] ?
    )
}

<ExchangeRateSpecification> CLOSED {
    (  $<ExchangeRateSpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <currency> @<Text> * ;
          <currentExchangeRate> @<UnitPriceSpecification> * ;
          <exchangeRateSpread> @linkml:String *
       ) ;
       rdf:type [ <ExchangeRateSpecification> ] ?
    )
}

<ExchangeRateSpread> CLOSED {
    (  $<ExchangeRateSpread_tes> rdf:type . * ;
       rdf:type [ <ExchangeRateSpread> ] ?
    )
}

<ExchangeRefund> CLOSED {
    (  $<ExchangeRefund_tes> rdf:type . * ;
       rdf:type [ <ExchangeRefund> ] ?
    )
}

<ExecutableLibraryName> CLOSED {
    (  $<ExecutableLibraryName_tes> rdf:type . * ;
       rdf:type [ <ExecutableLibraryName> ] ?
    )
}

<ExerciseAction> CLOSED {
    (  $<ExerciseAction_tes> (  &<PlayAction_tes> ;
          rdf:type [ <PlayAction> ] ? ;
          <course> @<Place> * ;
          <diet> @<Diet> * ;
          <exerciseCourse> @<Place> * ;
          <exercisePlan> @<ExercisePlan> * ;
          <exerciseRelatedDiet> @<Diet> * ;
          <fromLocation> @<Place> * ;
          <opponent> @<Person> * ;
          <sportsActivityLocation> @<SportsActivityLocation> * ;
          <sportsEvent> @<SportsEvent> * ;
          <sportsTeam> @<SportsTeam> * ;
          <toLocation> @<Place> * ;
          <distance> @<Distance> * ;
          <exerciseType> @<Text> *
       ) ;
       rdf:type [ <ExerciseAction> ] ?
    )
}

<ExerciseGym> CLOSED {
    (  $<ExerciseGym_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <ExerciseGym> ] ?
    )
}

<ExercisePlan> CLOSED {
    (  $<ExercisePlan_tes> (  &<PhysicalActivity_tes> ;
          rdf:type [ <PhysicalActivity> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <activityDuration> @linkml:String * ;
          <activityFrequency> @linkml:String * ;
          <additionalVariable> @<Text> * ;
          <exerciseType> @<Text> * ;
          <intensity> @linkml:String * ;
          <repetitions> @linkml:String * ;
          <restPeriods> @linkml:String * ;
          <workload> @linkml:String * ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <position> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <ExercisePlan> ] ?
    )
}

<ExerciseType> CLOSED {
    (  $<ExerciseType_tes> rdf:type . * ;
       rdf:type [ <ExerciseType> ] ?
    )
}

<ExhibitionEvent> CLOSED {
    (  $<ExhibitionEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <ExhibitionEvent> ] ?
    )
}

<ExifData> CLOSED {
    (  $<ExifData_tes> rdf:type . * ;
       rdf:type [ <ExifData> ] ?
    )
}

<ExpectedArrivalFrom> CLOSED {
    (  $<ExpectedArrivalFrom_tes> rdf:type . * ;
       rdf:type [ <ExpectedArrivalFrom> ] ?
    )
}

<ExpectedArrivalUntil> CLOSED {
    (  $<ExpectedArrivalUntil_tes> rdf:type . * ;
       rdf:type [ <ExpectedArrivalUntil> ] ?
    )
}

<ExpectedPrognosis> CLOSED {
    (  $<ExpectedPrognosis_tes> rdf:type . * ;
       rdf:type [ <ExpectedPrognosis> ] ?
    )
}

<ExpectsAcceptanceOf> CLOSED {
    (  $<ExpectsAcceptanceOf_tes> rdf:type . * ;
       rdf:type [ <ExpectsAcceptanceOf> ] ?
    )
}

<ExperienceInPlaceOfEducation> CLOSED {
    (  $<ExperienceInPlaceOfEducation_tes> rdf:type . * ;
       rdf:type [ <ExperienceInPlaceOfEducation> ] ?
    )
}

<ExperienceRequirements> CLOSED {
    (  $<ExperienceRequirements_tes> rdf:type . * ;
       rdf:type [ <ExperienceRequirements> ] ?
    )
}

<ExpertConsiderations> CLOSED {
    (  $<ExpertConsiderations_tes> rdf:type . * ;
       rdf:type [ <ExpertConsiderations> ] ?
    )
}

<Expires> CLOSED {
    (  $<Expires_tes> rdf:type . * ;
       rdf:type [ <Expires> ] ?
    )
}

<ExpressedIn> CLOSED {
    (  $<ExpressedIn_tes> rdf:type . * ;
       rdf:type [ <ExpressedIn> ] ?
    )
}

<Eye> CLOSED {
    (  $<Eye_tes> rdf:type . * ;
       rdf:type [ <Eye> ] ?
    )
}

<FailedActionStatus> CLOSED {
    (  $<FailedActionStatus_tes> rdf:type . * ;
       rdf:type [ <FailedActionStatus> ] ?
    )
}

<False> CLOSED {
    (  $<False_tes> rdf:type . * ;
       rdf:type [ <False> ] ?
    )
}

<FamilyName> CLOSED {
    (  $<FamilyName_tes> rdf:type . * ;
       rdf:type [ <FamilyName> ] ?
    )
}

<FAQPage> CLOSED {
    (  $<FAQPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <FAQPage> ] ?
    )
}

<FastFoodRestaurant> CLOSED {
    (  $<FastFoodRestaurant_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <FastFoodRestaurant> ] ?
    )
}

<FatContent> CLOSED {
    (  $<FatContent_tes> rdf:type . * ;
       rdf:type [ <FatContent> ] ?
    )
}

<FaxNumber> CLOSED {
    (  $<FaxNumber_tes> rdf:type . * ;
       rdf:type [ <FaxNumber> ] ?
    )
}

<FDAcategoryA> CLOSED {
    (  $<FDAcategoryA_tes> rdf:type . * ;
       rdf:type [ <FDAcategoryA> ] ?
    )
}

<FDAcategoryB> CLOSED {
    (  $<FDAcategoryB_tes> rdf:type . * ;
       rdf:type [ <FDAcategoryB> ] ?
    )
}

<FDAcategoryC> CLOSED {
    (  $<FDAcategoryC_tes> rdf:type . * ;
       rdf:type [ <FDAcategoryC> ] ?
    )
}

<FDAcategoryD> CLOSED {
    (  $<FDAcategoryD_tes> rdf:type . * ;
       rdf:type [ <FDAcategoryD> ] ?
    )
}

<FDAcategoryX> CLOSED {
    (  $<FDAcategoryX_tes> rdf:type . * ;
       rdf:type [ <FDAcategoryX> ] ?
    )
}

<FDAnotEvaluated> CLOSED {
    (  $<FDAnotEvaluated_tes> rdf:type . * ;
       rdf:type [ <FDAnotEvaluated> ] ?
    )
}

<FeatureList> CLOSED {
    (  $<FeatureList_tes> rdf:type . * ;
       rdf:type [ <FeatureList> ] ?
    )
}

<FeesAndCommissionsSpecification> CLOSED {
    (  $<FeesAndCommissionsSpecification_tes> rdf:type . * ;
       rdf:type [ <FeesAndCommissionsSpecification> ] ?
    )
}

<Female> CLOSED {
    (  $<Female_tes> rdf:type . * ;
       rdf:type [ <Female> ] ?
    )
}

<Festival> CLOSED {
    (  $<Festival_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <Festival> ] ?
    )
}

<FiberContent> CLOSED {
    (  $<FiberContent_tes> rdf:type . * ;
       rdf:type [ <FiberContent> ] ?
    )
}

<FileFormat> CLOSED {
    (  $<FileFormat_tes> rdf:type . * ;
       rdf:type [ <FileFormat> ] ?
    )
}

<FileSize> CLOSED {
    (  $<FileSize_tes> rdf:type . * ;
       rdf:type [ <FileSize> ] ?
    )
}

<FilmAction> CLOSED {
    (  $<FilmAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ?
       ) ;
       rdf:type [ <FilmAction> ] ?
    )
}

<FinancialAidEligible> CLOSED {
    (  $<FinancialAidEligible_tes> rdf:type . * ;
       rdf:type [ <FinancialAidEligible> ] ?
    )
}

<FinancialProduct>  (
    CLOSED {
       (  $<FinancialProduct_tes> (  &<Service_tes> ;
             rdf:type [ <Service> ] ? ;
             <annualPercentageRate> @linkml:String * ;
             <feesAndCommissionsSpecification> @linkml:String * ;
             <interestRate> @linkml:String *
          ) ;
          rdf:type [ <FinancialProduct> ] ?
       )
    } OR @<BankAccount> OR @<CurrencyConversionService> OR @<InvestmentOrDeposit> OR @<LoanOrCredit> OR @<PaymentCard> OR
    @<PaymentService>
)

<FinancialService>  (
    CLOSED {
       (  $<FinancialService_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ? ;
             <feesAndCommissionsSpecification> @linkml:String *
          ) ;
          rdf:type [ <FinancialService> ] ?
       )
    } OR @<AccountingService> OR @<AutomatedTeller> OR @<BankOrCreditUnion> OR @<InsuranceAgency>
)

<FindAction>  (
    CLOSED {
       (  $<FindAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <FindAction> ] ?
       )
    } OR @<CheckAction> OR @<DiscoverAction> OR @<TrackAction>
)

<FireStation> CLOSED {
    (  $<FireStation_tes> (  &<EmergencyService_tes> ;
          rdf:type [ <EmergencyService> ] ? ;
          &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <FireStation> ] ?
    )
}

<FirstPerformance> CLOSED {
    (  $<FirstPerformance_tes> rdf:type . * ;
       rdf:type [ <FirstPerformance> ] ?
    )
}

<Flexibility> CLOSED {
    (  $<Flexibility_tes> rdf:type . * ;
       rdf:type [ <Flexibility> ] ?
    )
}

<Flight> CLOSED {
    (  $<Flight_tes> (  &<Trip_tes> ;
          rdf:type [ <Trip> ] ? ;
          <flightNumber> @<Text> * ;
          <seller> @linkml:String * ;
          <aircraft> @linkml:String * ;
          <arrivalAirport> @<Airport> * ;
          <arrivalGate> @<Text> * ;
          <arrivalTerminal> @<Text> * ;
          <boardingPolicy> @<BoardingPolicyType> * ;
          <carrier> @<Organization> * ;
          <departureAirport> @<Airport> * ;
          <departureGate> @<Text> * ;
          <departureTerminal> @<Text> * ;
          <estimatedFlightDuration> @linkml:String * ;
          <flightDistance> @linkml:String * ;
          <mealService> @<Text> * ;
          <webCheckinTime> @<DateTime> *
       ) ;
       rdf:type [ <Flight> ] ?
    )
}

<FlightDistance> CLOSED {
    (  $<FlightDistance_tes> rdf:type . * ;
       rdf:type [ <FlightDistance> ] ?
    )
}

<FlightReservation> CLOSED {
    (  $<FlightReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <boardingGroup> @<Text> * ;
          <passengerPriorityStatus> @linkml:String * ;
          <passengerSequenceNumber> @<Text> * ;
          <securityScreening> @<Text> *
       ) ;
       rdf:type [ <FlightReservation> ] ?
    )
}

<Float> CLOSED {
    (  $<Float_tes> (  &<Number_tes> ;
          rdf:type [ <Number> ] ?
       ) ;
       rdf:type [ <Float> ] ?
    )
}

<FloorLevel> CLOSED {
    (  $<FloorLevel_tes> rdf:type . * ;
       rdf:type [ <FloorLevel> ] ?
    )
}

<FloorLimit> CLOSED {
    (  $<FloorLimit_tes> rdf:type . * ;
       rdf:type [ <FloorLimit> ] ?
    )
}

<FloorPlan> CLOSED {
    (  $<FloorPlan_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <layoutImage> @linkml:String * ;
          <amenityFeature> @<LocationFeatureSpecification> * ;
          <floorSize> @<QuantitativeValue> * ;
          <isPlanForApartment> @<Accommodation> * ;
          <numberOfAccommodationUnits> @<QuantitativeValue> * ;
          <numberOfAvailableAccommodationUnits> @<QuantitativeValue> * ;
          <numberOfBathroomsTotal> @<Integer> * ;
          <numberOfBedrooms> @linkml:String * ;
          <numberOfFullBathrooms> @<Number> * ;
          <numberOfPartialBathrooms> @<Number> * ;
          <numberOfRooms> @linkml:String * ;
          <petsAllowed> @linkml:String *
       ) ;
       rdf:type [ <FloorPlan> ] ?
    )
}

<FloorSize> CLOSED {
    (  $<FloorSize_tes> rdf:type . * ;
       rdf:type [ <FloorSize> ] ?
    )
}

<Florist> CLOSED {
    (  $<Florist_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <Florist> ] ?
    )
}

<FMRadioChannel> CLOSED {
    (  $<FMRadioChannel_tes> (  &<RadioChannel_tes> ;
          rdf:type [ <RadioChannel> ] ?
       ) ;
       rdf:type [ <FMRadioChannel> ] ?
    )
}

<FollowAction> CLOSED {
    (  $<FollowAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ? ;
          <followee> @<Thing> *
       ) ;
       rdf:type [ <FollowAction> ] ?
    )
}

<Follows> CLOSED {
    (  $<Follows_tes> rdf:type . * ;
       rdf:type [ <Follows> ] ?
    )
}

<Followup> CLOSED {
    (  $<Followup_tes> rdf:type . * ;
       rdf:type [ <Followup> ] ?
    )
}

<FoodEstablishment>  (
    CLOSED {
       (  $<FoodEstablishment_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ? ;
             <acceptsReservations> @linkml:String * ;
             <hasMenu> @linkml:String * ;
             <menu> @linkml:String * ;
             <servesCuisine> @<Text> * ;
             <starRating> @<Rating> *
          ) ;
          rdf:type [ <FoodEstablishment> ] ?
       )
    } OR @<Bakery> OR @<BarOrPub> OR @<Brewery> OR @<CafeOrCoffeeShop> OR @<Distillery> OR @<FastFoodRestaurant> OR @<IceCreamShop>
    OR @<Restaurant> OR @<Winery>
)

<FoodEstablishmentReservation> CLOSED {
    (  $<FoodEstablishmentReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <endTime> @linkml:String * ;
          <partySize> @linkml:String * ;
          <startTime> @linkml:String *
       ) ;
       rdf:type [ <FoodEstablishmentReservation> ] ?
    )
}

<FoodEvent> CLOSED {
    (  $<FoodEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <FoodEvent> ] ?
    )
}

<FoodService> CLOSED {
    (  $<FoodService_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ?
       ) ;
       rdf:type [ <FoodService> ] ?
    )
}

<FoodWarning> CLOSED {
    (  $<FoodWarning_tes> rdf:type . * ;
       rdf:type [ <FoodWarning> ] ?
    )
}

<Founder> CLOSED {
    (  $<Founder_tes> rdf:type . * ;
       rdf:type [ <Founder> ] ?
    )
}

<Founders> CLOSED {
    (  $<Founders_tes> rdf:type . * ;
       rdf:type [ <Founders> ] ?
    )
}

<FoundingDate> CLOSED {
    (  $<FoundingDate_tes> rdf:type . * ;
       rdf:type [ <FoundingDate> ] ?
    )
}

<FoundingLocation> CLOSED {
    (  $<FoundingLocation_tes> rdf:type . * ;
       rdf:type [ <FoundingLocation> ] ?
    )
}

<FourWheelDriveConfiguration> CLOSED {
    (  $<FourWheelDriveConfiguration_tes> rdf:type . * ;
       rdf:type [ <FourWheelDriveConfiguration> ] ?
    )
}

<Free> CLOSED {
    (  $<Free_tes> rdf:type . * ;
       rdf:type [ <Free> ] ?
    )
}

<FreeReturn> CLOSED {
    (  $<FreeReturn_tes> rdf:type . * ;
       rdf:type [ <FreeReturn> ] ?
    )
}

<FreeShippingThreshold> CLOSED {
    (  $<FreeShippingThreshold_tes> rdf:type . * ;
       rdf:type [ <FreeShippingThreshold> ] ?
    )
}

<Friday> CLOSED {
    (  $<Friday_tes> rdf:type . * ;
       rdf:type [ <Friday> ] ?
    )
}

<FrontWheelDriveConfiguration> CLOSED {
    (  $<FrontWheelDriveConfiguration_tes> rdf:type . * ;
       rdf:type [ <FrontWheelDriveConfiguration> ] ?
    )
}

<FuelCapacity> CLOSED {
    (  $<FuelCapacity_tes> rdf:type . * ;
       rdf:type [ <FuelCapacity> ] ?
    )
}

<FuelConsumption> CLOSED {
    (  $<FuelConsumption_tes> rdf:type . * ;
       rdf:type [ <FuelConsumption> ] ?
    )
}

<FuelEfficiency> CLOSED {
    (  $<FuelEfficiency_tes> rdf:type . * ;
       rdf:type [ <FuelEfficiency> ] ?
    )
}

<FuelType> CLOSED {
    (  $<FuelType_tes> rdf:type . * ;
       rdf:type [ <FuelType> ] ?
    )
}

<FullRefund> CLOSED {
    (  $<FullRefund_tes> rdf:type . * ;
       rdf:type [ <FullRefund> ] ?
    )
}

<FunctionalClass> CLOSED {
    (  $<FunctionalClass_tes> rdf:type . * ;
       rdf:type [ <FunctionalClass> ] ?
    )
}

<FundedItem> CLOSED {
    (  $<FundedItem_tes> rdf:type . * ;
       rdf:type [ <FundedItem> ] ?
    )
}

<FundingAgency> CLOSED {
    (  $<FundingAgency_tes> (  &<Project_tes> ;
          rdf:type [ <Project> ] ?
       ) ;
       rdf:type [ <FundingAgency> ] ?
    )
}

<FundingScheme> CLOSED {
    (  $<FundingScheme_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <FundingScheme> ] ?
    )
}

<Fungus> CLOSED {
    (  $<Fungus_tes> rdf:type . * ;
       rdf:type [ <Fungus> ] ?
    )
}

<FurnitureStore> CLOSED {
    (  $<FurnitureStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <FurnitureStore> ] ?
    )
}

<Game>  (
    CLOSED {
       (  $<Game_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <characterAttribute> @<Thing> * ;
             <gameItem> @<Thing> * ;
             <gameLocation> @linkml:String * ;
             <numberOfPlayers> @<QuantitativeValue> * ;
             <quest> @<Thing> *
          ) ;
          rdf:type [ <Game> ] ?
       )
    } OR @<VideoGame>
)

<Game> CLOSED {
    (  $<Game_tes> rdf:type . * ;
       rdf:type [ <Game> ] ?
    )
}

<GameItem> CLOSED {
    (  $<GameItem_tes> rdf:type . * ;
       rdf:type [ <GameItem> ] ?
    )
}

<GameLocation> CLOSED {
    (  $<GameLocation_tes> rdf:type . * ;
       rdf:type [ <GameLocation> ] ?
    )
}

<GamePlatform> CLOSED {
    (  $<GamePlatform_tes> rdf:type . * ;
       rdf:type [ <GamePlatform> ] ?
    )
}

<GamePlayMode> CLOSED {
    (  $<GamePlayMode_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <GamePlayMode> ] ?
    )
}

<GameServer> CLOSED {
    (  $<GameServer_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <game> @<VideoGame> * ;
          <playersOnline> @<Integer> * ;
          <serverStatus> @<GameServerStatus> *
       ) ;
       rdf:type [ <GameServer> ] ?
    )
}

<GameServer> CLOSED {
    (  $<GameServer_tes> rdf:type . * ;
       rdf:type [ <GameServer> ] ?
    )
}

<GameServerStatus> CLOSED {
    (  $<GameServerStatus_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <GameServerStatus> ] ?
    )
}

<GameTip> CLOSED {
    (  $<GameTip_tes> rdf:type . * ;
       rdf:type [ <GameTip> ] ?
    )
}

<GardenStore> CLOSED {
    (  $<GardenStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <GardenStore> ] ?
    )
}

<GasStation> CLOSED {
    (  $<GasStation_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <GasStation> ] ?
    )
}

<Gastroenterologic> CLOSED {
    (  $<Gastroenterologic_tes> rdf:type . * ;
       rdf:type [ <Gastroenterologic> ] ?
    )
}

<GatedResidenceCommunity> CLOSED {
    (  $<GatedResidenceCommunity_tes> (  &<Residence_tes> ;
          rdf:type [ <Residence> ] ?
       ) ;
       rdf:type [ <GatedResidenceCommunity> ] ?
    )
}

<Gender> CLOSED {
    (  $<Gender_tes> rdf:type . * ;
       rdf:type [ <Gender> ] ?
    )
}

<GenderType> CLOSED {
    (  $<GenderType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <GenderType> ] ?
    )
}

<Gene> CLOSED {
    (  $<Gene_tes> (  &<BioChemEntity_tes> ;
          rdf:type [ <BioChemEntity> ] ? ;
          <hasBioPolymerSequence> @<Text> * ;
          <alternativeOf> @<Gene> * ;
          <encodesBioChemEntity> @<BioChemEntity> * ;
          <expressedIn> @linkml:String *
       ) ;
       rdf:type [ <Gene> ] ?
    )
}

<GeneralContractor> CLOSED {
    (  $<GeneralContractor_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <GeneralContractor> ] ?
    )
}

<Genetic> CLOSED {
    (  $<Genetic_tes> rdf:type . * ;
       rdf:type [ <Genetic> ] ?
    )
}

<Genitourinary> CLOSED {
    (  $<Genitourinary_tes> rdf:type . * ;
       rdf:type [ <Genitourinary> ] ?
    )
}

<Geo> CLOSED {
    (  $<Geo_tes> rdf:type . * ;
       rdf:type [ <Geo> ] ?
    )
}

<GeoCircle> CLOSED {
    (  $<GeoCircle_tes> (  &<GeoShape_tes> ;
          rdf:type [ <GeoShape> ] ? ;
          <geoMidpoint> @<GeoCoordinates> * ;
          <geoRadius> @linkml:String *
       ) ;
       rdf:type [ <GeoCircle> ] ?
    )
}

<GeoContains> CLOSED {
    (  $<GeoContains_tes> rdf:type . * ;
       rdf:type [ <GeoContains> ] ?
    )
}

<GeoCoordinates> CLOSED {
    (  $<GeoCoordinates_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <address> @linkml:String * ;
          <addressCountry> @linkml:String * ;
          <elevation> @linkml:String * ;
          <latitude> @linkml:String * ;
          <longitude> @linkml:String * ;
          <postalCode> @<Text> *
       ) ;
       rdf:type [ <GeoCoordinates> ] ?
    )
}

<GeoCoveredBy> CLOSED {
    (  $<GeoCoveredBy_tes> rdf:type . * ;
       rdf:type [ <GeoCoveredBy> ] ?
    )
}

<GeoCovers> CLOSED {
    (  $<GeoCovers_tes> rdf:type . * ;
       rdf:type [ <GeoCovers> ] ?
    )
}

<GeoCrosses> CLOSED {
    (  $<GeoCrosses_tes> rdf:type . * ;
       rdf:type [ <GeoCrosses> ] ?
    )
}

<GeoDisjoint> CLOSED {
    (  $<GeoDisjoint_tes> rdf:type . * ;
       rdf:type [ <GeoDisjoint> ] ?
    )
}

<GeoEquals> CLOSED {
    (  $<GeoEquals_tes> rdf:type . * ;
       rdf:type [ <GeoEquals> ] ?
    )
}

<GeographicArea> CLOSED {
    (  $<GeographicArea_tes> rdf:type . * ;
       rdf:type [ <GeographicArea> ] ?
    )
}

<GeoIntersects> CLOSED {
    (  $<GeoIntersects_tes> rdf:type . * ;
       rdf:type [ <GeoIntersects> ] ?
    )
}

<GeoMidpoint> CLOSED {
    (  $<GeoMidpoint_tes> rdf:type . * ;
       rdf:type [ <GeoMidpoint> ] ?
    )
}

<GeoOverlaps> CLOSED {
    (  $<GeoOverlaps_tes> rdf:type . * ;
       rdf:type [ <GeoOverlaps> ] ?
    )
}

<GeoRadius> CLOSED {
    (  $<GeoRadius_tes> rdf:type . * ;
       rdf:type [ <GeoRadius> ] ?
    )
}

<GeoShape>  (
    CLOSED {
       (  $<GeoShape_tes> (  &<StructuredValue_tes> ;
             rdf:type [ <StructuredValue> ] ? ;
             <address> @linkml:String * ;
             <addressCountry> @linkml:String * ;
             <box> @<Text> * ;
             <circle> @<Text> * ;
             <elevation> @linkml:String * ;
             <line> @<Text> * ;
             <polygon> @<Text> * ;
             <postalCode> @<Text> *
          ) ;
          rdf:type [ <GeoShape> ] ?
       )
    } OR @<GeoCircle>
)

<GeospatialGeometry> CLOSED {
    (  $<GeospatialGeometry_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <geoContains> @linkml:String * ;
          <geoCoveredBy> @linkml:String * ;
          <geoCovers> @linkml:String * ;
          <geoCrosses> @linkml:String * ;
          <geoDisjoint> @linkml:String * ;
          <geoEquals> @linkml:String * ;
          <geoIntersects> @linkml:String * ;
          <geoOverlaps> @linkml:String * ;
          <geoTouches> @linkml:String * ;
          <geoWithin> @linkml:String *
       ) ;
       rdf:type [ <GeospatialGeometry> ] ?
    )
}

<GeoTouches> CLOSED {
    (  $<GeoTouches_tes> rdf:type . * ;
       rdf:type [ <GeoTouches> ] ?
    )
}

<GeoWithin> CLOSED {
    (  $<GeoWithin_tes> rdf:type . * ;
       rdf:type [ <GeoWithin> ] ?
    )
}

<Geriatric> CLOSED {
    (  $<Geriatric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Geriatric> ] ?
    )
}

<GettingAccessHealthAspect> CLOSED {
    (  $<GettingAccessHealthAspect_tes> rdf:type . * ;
       rdf:type [ <GettingAccessHealthAspect> ] ?
    )
}

<GettingTestedInfo> CLOSED {
    (  $<GettingTestedInfo_tes> rdf:type . * ;
       rdf:type [ <GettingTestedInfo> ] ?
    )
}

<GiveAction> CLOSED {
    (  $<GiveAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <GiveAction> ] ?
    )
}

<GivenName> CLOSED {
    (  $<GivenName_tes> rdf:type . * ;
       rdf:type [ <GivenName> ] ?
    )
}

<GlutenFreeDiet> CLOSED {
    (  $<GlutenFreeDiet_tes> rdf:type . * ;
       rdf:type [ <GlutenFreeDiet> ] ?
    )
}

<GolfCourse> CLOSED {
    (  $<GolfCourse_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <GolfCourse> ] ?
    )
}

<GovernmentBenefitsInfo> CLOSED {
    (  $<GovernmentBenefitsInfo_tes> rdf:type . * ;
       rdf:type [ <GovernmentBenefitsInfo> ] ?
    )
}

<GovernmentBenefitsType> CLOSED {
    (  $<GovernmentBenefitsType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <GovernmentBenefitsType> ] ?
    )
}

<GovernmentBuilding>  (
    CLOSED {
       (  $<GovernmentBuilding_tes> (  &<CivicStructure_tes> ;
             rdf:type [ <CivicStructure> ] ?
          ) ;
          rdf:type [ <GovernmentBuilding> ] ?
       )
    } OR @<CityHall> OR @<Courthouse> OR @<DefenceEstablishment> OR @<Embassy> OR @<LegislativeBuilding>
)

<GovernmentOffice>  (
    CLOSED {
       (  $<GovernmentOffice_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <GovernmentOffice> ] ?
       )
    } OR @<PostOffice>
)

<GovernmentOrganization> CLOSED {
    (  $<GovernmentOrganization_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <GovernmentOrganization> ] ?
    )
}

<GovernmentPermit> CLOSED {
    (  $<GovernmentPermit_tes> (  &<Permit_tes> ;
          rdf:type [ <Permit> ] ?
       ) ;
       rdf:type [ <GovernmentPermit> ] ?
    )
}

<GovernmentService> CLOSED {
    (  $<GovernmentService_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ? ;
          <jurisdiction> @linkml:String * ;
          <serviceOperator> @<Organization> *
       ) ;
       rdf:type [ <GovernmentService> ] ?
    )
}

<GracePeriod> CLOSED {
    (  $<GracePeriod_tes> rdf:type . * ;
       rdf:type [ <GracePeriod> ] ?
    )
}

<Grant>  (
    CLOSED {
       (  $<Grant_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <sponsor> @linkml:String * ;
             <fundedItem> @<Thing> *
          ) ;
          rdf:type [ <Grant> ] ?
       )
    } OR @<MonetaryGrant>
)

<Grantee> CLOSED {
    (  $<Grantee_tes> rdf:type . * ;
       rdf:type [ <Grantee> ] ?
    )
}

<GraphicNovel> CLOSED {
    (  $<GraphicNovel_tes> rdf:type . * ;
       rdf:type [ <GraphicNovel> ] ?
    )
}

<Greater> CLOSED {
    (  $<Greater_tes> rdf:type . * ;
       rdf:type [ <Greater> ] ?
    )
}

<GreaterOrEqual> CLOSED {
    (  $<GreaterOrEqual_tes> rdf:type . * ;
       rdf:type [ <GreaterOrEqual> ] ?
    )
}

<GroceryStore> CLOSED {
    (  $<GroceryStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <GroceryStore> ] ?
    )
}

<GroupBoardingPolicy> CLOSED {
    (  $<GroupBoardingPolicy_tes> rdf:type . * ;
       rdf:type [ <GroupBoardingPolicy> ] ?
    )
}

<Guide> CLOSED {
    (  $<Guide_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <reviewAspect> @<Text> *
       ) ;
       rdf:type [ <Guide> ] ?
    )
}

<Guideline> CLOSED {
    (  $<Guideline_tes> rdf:type . * ;
       rdf:type [ <Guideline> ] ?
    )
}

<GuidelineDate> CLOSED {
    (  $<GuidelineDate_tes> rdf:type . * ;
       rdf:type [ <GuidelineDate> ] ?
    )
}

<GuidelineSubject> CLOSED {
    (  $<GuidelineSubject_tes> rdf:type . * ;
       rdf:type [ <GuidelineSubject> ] ?
    )
}

<Gynecologic> CLOSED {
    (  $<Gynecologic_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Gynecologic> ] ?
    )
}

<Hackathon> CLOSED {
    (  $<Hackathon_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <Hackathon> ] ?
    )
}

<HairSalon> CLOSED {
    (  $<HairSalon_tes> (  &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <HairSalon> ] ?
    )
}

<HalalDiet> CLOSED {
    (  $<HalalDiet_tes> rdf:type . * ;
       rdf:type [ <HalalDiet> ] ?
    )
}

<HandlingTime> CLOSED {
    (  $<HandlingTime_tes> rdf:type . * ;
       rdf:type [ <HandlingTime> ] ?
    )
}

<Hardcover> CLOSED {
    (  $<Hardcover_tes> rdf:type . * ;
       rdf:type [ <Hardcover> ] ?
    )
}

<HardwareStore> CLOSED {
    (  $<HardwareStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <HardwareStore> ] ?
    )
}

<HasBioChemEntityPart> CLOSED {
    (  $<HasBioChemEntityPart_tes> rdf:type . * ;
       rdf:type [ <HasBioChemEntityPart> ] ?
    )
}

<HasBroadcastChannel> CLOSED {
    (  $<HasBroadcastChannel_tes> rdf:type . * ;
       rdf:type [ <HasBroadcastChannel> ] ?
    )
}

<HasCourse> CLOSED {
    (  $<HasCourse_tes> rdf:type . * ;
       rdf:type [ <HasCourse> ] ?
    )
}

<HasCourseInstance> CLOSED {
    (  $<HasCourseInstance_tes> rdf:type . * ;
       rdf:type [ <HasCourseInstance> ] ?
    )
}

<HasCredential> CLOSED {
    (  $<HasCredential_tes> rdf:type . * ;
       rdf:type [ <HasCredential> ] ?
    )
}

<HasDeliveryMethod> CLOSED {
    (  $<HasDeliveryMethod_tes> rdf:type . * ;
       rdf:type [ <HasDeliveryMethod> ] ?
    )
}

<HasDigitalDocumentPermission> CLOSED {
    (  $<HasDigitalDocumentPermission_tes> rdf:type . * ;
       rdf:type [ <HasDigitalDocumentPermission> ] ?
    )
}

<HasDriveThroughService> CLOSED {
    (  $<HasDriveThroughService_tes> rdf:type . * ;
       rdf:type [ <HasDriveThroughService> ] ?
    )
}

<HasEnergyConsumptionDetails> CLOSED {
    (  $<HasEnergyConsumptionDetails_tes> rdf:type . * ;
       rdf:type [ <HasEnergyConsumptionDetails> ] ?
    )
}

<HasEnergyEfficiencyCategory> CLOSED {
    (  $<HasEnergyEfficiencyCategory_tes> rdf:type . * ;
       rdf:type [ <HasEnergyEfficiencyCategory> ] ?
    )
}

<HasHealthAspect> CLOSED {
    (  $<HasHealthAspect_tes> rdf:type . * ;
       rdf:type [ <HasHealthAspect> ] ?
    )
}

<HasMap> CLOSED {
    (  $<HasMap_tes> rdf:type . * ;
       rdf:type [ <HasMap> ] ?
    )
}

<HasMeasurement> CLOSED {
    (  $<HasMeasurement_tes> rdf:type . * ;
       rdf:type [ <HasMeasurement> ] ?
    )
}

<HasMenu> CLOSED {
    (  $<HasMenu_tes> rdf:type . * ;
       rdf:type [ <HasMenu> ] ?
    )
}

<HasMenuItem> CLOSED {
    (  $<HasMenuItem_tes> rdf:type . * ;
       rdf:type [ <HasMenuItem> ] ?
    )
}

<HasMenuSection> CLOSED {
    (  $<HasMenuSection_tes> rdf:type . * ;
       rdf:type [ <HasMenuSection> ] ?
    )
}

<HasMerchantReturnPolicy> CLOSED {
    (  $<HasMerchantReturnPolicy_tes> rdf:type . * ;
       rdf:type [ <HasMerchantReturnPolicy> ] ?
    )
}

<HasMolecularFunction> CLOSED {
    (  $<HasMolecularFunction_tes> rdf:type . * ;
       rdf:type [ <HasMolecularFunction> ] ?
    )
}

<HasOccupation> CLOSED {
    (  $<HasOccupation_tes> rdf:type . * ;
       rdf:type [ <HasOccupation> ] ?
    )
}

<HasOfferCatalog> CLOSED {
    (  $<HasOfferCatalog_tes> rdf:type . * ;
       rdf:type [ <HasOfferCatalog> ] ?
    )
}

<HasPOS> CLOSED {
    (  $<HasPOS_tes> rdf:type . * ;
       rdf:type [ <HasPOS> ] ?
    )
}

<HasVariant> CLOSED {
    (  $<HasVariant_tes> rdf:type . * ;
       rdf:type [ <HasVariant> ] ?
    )
}

<Head> CLOSED {
    (  $<Head_tes> rdf:type . * ;
       rdf:type [ <Head> ] ?
    )
}

<Headline> CLOSED {
    (  $<Headline_tes> rdf:type . * ;
       rdf:type [ <Headline> ] ?
    )
}

<HealthAndBeautyBusiness>  (
    CLOSED {
       (  $<HealthAndBeautyBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       )
    } OR @<BeautySalon> OR @<DaySpa> OR @<HairSalon> OR @<NailSalon> OR @<TattooParlor>
)

<HealthAspectEnumeration> CLOSED {
    (  $<HealthAspectEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <HealthAspectEnumeration> ] ?
    )
}

<HealthCare> CLOSED {
    (  $<HealthCare_tes> rdf:type . * ;
       rdf:type [ <HealthCare> ] ?
    )
}

<HealthcareReportingData> CLOSED {
    (  $<HealthcareReportingData_tes> rdf:type . * ;
       rdf:type [ <HealthcareReportingData> ] ?
    )
}

<HealthClub> CLOSED {
    (  $<HealthClub_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ? ;
          &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <HealthClub> ] ?
    )
}

<HealthCondition> CLOSED {
    (  $<HealthCondition_tes> rdf:type . * ;
       rdf:type [ <HealthCondition> ] ?
    )
}

<HealthInsurancePlan> CLOSED {
    (  $<HealthInsurancePlan_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <benefitsSummaryUrl> @<URL> * ;
          <contactPoint> @<ContactPoint> * ;
          <healthPlanDrugOption> @<Text> * ;
          <healthPlanDrugTier> @<Text> * ;
          <healthPlanId> @<Text> * ;
          <healthPlanMarketingUrl> @<URL> * ;
          <includesHealthPlanFormulary> @<HealthPlanFormulary> * ;
          <includesHealthPlanNetwork> @<HealthPlanNetwork> * ;
          <usesHealthPlanIdStandard> @linkml:String *
       ) ;
       rdf:type [ <HealthInsurancePlan> ] ?
    )
}

<HealthPlanCoinsuranceOption> CLOSED {
    (  $<HealthPlanCoinsuranceOption_tes> rdf:type . * ;
       rdf:type [ <HealthPlanCoinsuranceOption> ] ?
    )
}

<HealthPlanCoinsuranceRate> CLOSED {
    (  $<HealthPlanCoinsuranceRate_tes> rdf:type . * ;
       rdf:type [ <HealthPlanCoinsuranceRate> ] ?
    )
}

<HealthPlanCopay> CLOSED {
    (  $<HealthPlanCopay_tes> rdf:type . * ;
       rdf:type [ <HealthPlanCopay> ] ?
    )
}

<HealthPlanCopayOption> CLOSED {
    (  $<HealthPlanCopayOption_tes> rdf:type . * ;
       rdf:type [ <HealthPlanCopayOption> ] ?
    )
}

<HealthPlanCostSharing> CLOSED {
    (  $<HealthPlanCostSharing_tes> rdf:type . * ;
       rdf:type [ <HealthPlanCostSharing> ] ?
    )
}

<HealthPlanCostSharingSpecification> CLOSED {
    (  $<HealthPlanCostSharingSpecification_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <healthPlanCoinsuranceOption> @<Text> * ;
          <healthPlanCoinsuranceRate> @<Number> * ;
          <healthPlanCopay> @<PriceSpecification> * ;
          <healthPlanCopayOption> @<Text> * ;
          <healthPlanPharmacyCategory> @<Text> *
       ) ;
       rdf:type [ <HealthPlanCostSharingSpecification> ] ?
    )
}

<HealthPlanDrugOption> CLOSED {
    (  $<HealthPlanDrugOption_tes> rdf:type . * ;
       rdf:type [ <HealthPlanDrugOption> ] ?
    )
}

<HealthPlanDrugTier> CLOSED {
    (  $<HealthPlanDrugTier_tes> rdf:type . * ;
       rdf:type [ <HealthPlanDrugTier> ] ?
    )
}

<HealthPlanFormulary> CLOSED {
    (  $<HealthPlanFormulary_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <healthPlanCostSharing> @<Boolean> * ;
          <healthPlanDrugTier> @<Text> * ;
          <offersPrescriptionByMail> @<Boolean> *
       ) ;
       rdf:type [ <HealthPlanFormulary> ] ?
    )
}

<HealthPlanId> CLOSED {
    (  $<HealthPlanId_tes> rdf:type . * ;
       rdf:type [ <HealthPlanId> ] ?
    )
}

<HealthPlanMarketingUrl> CLOSED {
    (  $<HealthPlanMarketingUrl_tes> rdf:type . * ;
       rdf:type [ <HealthPlanMarketingUrl> ] ?
    )
}

<HealthPlanNetwork> CLOSED {
    (  $<HealthPlanNetwork_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <healthPlanCostSharing> @<Boolean> * ;
          <healthPlanNetworkId> @<Text> * ;
          <healthPlanNetworkTier> @<Text> *
       ) ;
       rdf:type [ <HealthPlanNetwork> ] ?
    )
}

<HealthPlanNetworkId> CLOSED {
    (  $<HealthPlanNetworkId_tes> rdf:type . * ;
       rdf:type [ <HealthPlanNetworkId> ] ?
    )
}

<HealthPlanNetworkTier> CLOSED {
    (  $<HealthPlanNetworkTier_tes> rdf:type . * ;
       rdf:type [ <HealthPlanNetworkTier> ] ?
    )
}

<HealthPlanPharmacyCategory> CLOSED {
    (  $<HealthPlanPharmacyCategory_tes> rdf:type . * ;
       rdf:type [ <HealthPlanPharmacyCategory> ] ?
    )
}

<HealthTopicContent> CLOSED {
    (  $<HealthTopicContent_tes> (  &<WebContent_tes> ;
          rdf:type [ <WebContent> ] ? ;
          <hasHealthAspect> @<HealthAspectEnumeration> *
       ) ;
       rdf:type [ <HealthTopicContent> ] ?
    )
}

<HearingImpairedSupported> CLOSED {
    (  $<HearingImpairedSupported_tes> rdf:type . * ;
       rdf:type [ <HearingImpairedSupported> ] ?
    )
}

<Height> CLOSED {
    (  $<Height_tes> rdf:type . * ;
       rdf:type [ <Height> ] ?
    )
}

<Hematologic> CLOSED {
    (  $<Hematologic_tes> rdf:type . * ;
       rdf:type [ <Hematologic> ] ?
    )
}

<HighPrice> CLOSED {
    (  $<HighPrice_tes> rdf:type . * ;
       rdf:type [ <HighPrice> ] ?
    )
}

<HighSchool> CLOSED {
    (  $<HighSchool_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <HighSchool> ] ?
    )
}

<HinduDiet> CLOSED {
    (  $<HinduDiet_tes> rdf:type . * ;
       rdf:type [ <HinduDiet> ] ?
    )
}

<HinduTemple> CLOSED {
    (  $<HinduTemple_tes> (  &<PlaceOfWorship_tes> ;
          rdf:type [ <PlaceOfWorship> ] ?
       ) ;
       rdf:type [ <HinduTemple> ] ?
    )
}

<HiringOrganization> CLOSED {
    (  $<HiringOrganization_tes> rdf:type . * ;
       rdf:type [ <HiringOrganization> ] ?
    )
}

<HobbyShop> CLOSED {
    (  $<HobbyShop_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <HobbyShop> ] ?
    )
}

<HoldingArchive> CLOSED {
    (  $<HoldingArchive_tes> rdf:type . * ;
       rdf:type [ <HoldingArchive> ] ?
    )
}

<HomeAndConstructionBusiness>  (
    CLOSED {
       (  $<HomeAndConstructionBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       )
    } OR @<Electrician> OR @<GeneralContractor> OR @<HVACBusiness> OR @<HousePainter> OR @<Locksmith> OR @<MovingCompany> OR
    @<Plumber> OR @<RoofingContractor>
)

<HomeGoodsStore> CLOSED {
    (  $<HomeGoodsStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <HomeGoodsStore> ] ?
    )
}

<Homeopathic> CLOSED {
    (  $<Homeopathic_tes> rdf:type . * ;
       rdf:type [ <Homeopathic> ] ?
    )
}

<HonorificPrefix> CLOSED {
    (  $<HonorificPrefix_tes> rdf:type . * ;
       rdf:type [ <HonorificPrefix> ] ?
    )
}

<HonorificSuffix> CLOSED {
    (  $<HonorificSuffix_tes> rdf:type . * ;
       rdf:type [ <HonorificSuffix> ] ?
    )
}

<Hospital> CLOSED {
    (  $<Hospital_tes> (  &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ? ;
          &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ? ;
          &<EmergencyService_tes> ;
          rdf:type [ <EmergencyService> ] ? ;
          <availableService> @linkml:String * ;
          <healthcareReportingData> @linkml:String * ;
          <photo> @linkml:String * ;
          <additionalProperty> @<PropertyValue> * ;
          <amenityFeature> @<LocationFeatureSpecification> * ;
          <branchCode> @<Text> * ;
          <containedIn> @<Place> * ;
          <containedInPlace> @<Place> * ;
          <containsPlace> @<Place> * ;
          <geo> @linkml:String * ;
          <geoContains> @linkml:String * ;
          <geoCoveredBy> @linkml:String * ;
          <geoCovers> @linkml:String * ;
          <geoCrosses> @linkml:String * ;
          <geoDisjoint> @linkml:String * ;
          <geoEquals> @linkml:String * ;
          <geoIntersects> @linkml:String * ;
          <geoOverlaps> @linkml:String * ;
          <geoTouches> @linkml:String * ;
          <geoWithin> @linkml:String * ;
          <hasDriveThroughService> @<Boolean> * ;
          <hasMap> @linkml:String * ;
          <isAccessibleForFree> @<Boolean> * ;
          <latitude> @linkml:String * ;
          <longitude> @linkml:String * ;
          <map> @<URL> * ;
          <maps> @<URL> * ;
          <maximumAttendeeCapacity> @<Integer> * ;
          <openingHoursSpecification> @<OpeningHoursSpecification> * ;
          <photos> @linkml:String * ;
          <publicAccess> @<Boolean> * ;
          <smokingAllowed> @<Boolean> * ;
          <specialOpeningHoursSpecification> @<OpeningHoursSpecification> * ;
          <tourBookingPage> @<URL> * ;
          <openingHours> @<Text> * ;
          <branchOf> @<Organization> * ;
          <currenciesAccepted> @<Text> * ;
          <paymentAccepted> @<Text> * ;
          <priceRange> @<Text> *
       ) ;
       rdf:type [ <Hospital> ] ?
    )
}

<HospitalAffiliation> CLOSED {
    (  $<HospitalAffiliation_tes> rdf:type . * ;
       rdf:type [ <HospitalAffiliation> ] ?
    )
}

<Hostel> CLOSED {
    (  $<Hostel_tes> (  &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ?
       ) ;
       rdf:type [ <Hostel> ] ?
    )
}

<HostingOrganization> CLOSED {
    (  $<HostingOrganization_tes> rdf:type . * ;
       rdf:type [ <HostingOrganization> ] ?
    )
}

<Hotel> CLOSED {
    (  $<Hotel_tes> (  &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ?
       ) ;
       rdf:type [ <Hotel> ] ?
    )
}

<HotelRoom> CLOSED {
    (  $<HotelRoom_tes> (  &<Room_tes> ;
          rdf:type [ <Room> ] ? ;
          <bed> @linkml:String * ;
          <occupancy> @<QuantitativeValue> *
       ) ;
       rdf:type [ <HotelRoom> ] ?
    )
}

<HoursAvailable> CLOSED {
    (  $<HoursAvailable_tes> rdf:type . * ;
       rdf:type [ <HoursAvailable> ] ?
    )
}

<House>  (
    CLOSED {
       (  $<House_tes> (  &<Accommodation_tes> ;
             rdf:type [ <Accommodation> ] ?
          ) ;
          rdf:type [ <House> ] ?
       )
    } OR @<SingleFamilyResidence>
)

<HousePainter> CLOSED {
    (  $<HousePainter_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <HousePainter> ] ?
    )
}

<HowItWorksHealthAspect> CLOSED {
    (  $<HowItWorksHealthAspect_tes> rdf:type . * ;
       rdf:type [ <HowItWorksHealthAspect> ] ?
    )
}

<HowOrWhereHealthAspect> CLOSED {
    (  $<HowOrWhereHealthAspect_tes> rdf:type . * ;
       rdf:type [ <HowOrWhereHealthAspect> ] ?
    )
}

<HowPerformed> CLOSED {
    (  $<HowPerformed_tes> rdf:type . * ;
       rdf:type [ <HowPerformed> ] ?
    )
}

<HowTo>  (
    CLOSED {
       (  $<HowTo_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <performTime> @<Duration> * ;
             <step> @linkml:String * ;
             <supply> @<Thing> * ;
             <tool> @<Thing> * ;
             <yield> @linkml:String * ;
             <estimatedCost> @linkml:String * ;
             <prepTime> @<Duration> * ;
             <steps> @linkml:String * ;
             <totalTime> @<Duration> *
          ) ;
          rdf:type [ <HowTo> ] ?
       )
    } OR @<Recipe>
)

<HowToDirection> CLOSED {
    (  $<HowToDirection_tes> (  &<ListItem_tes> ;
          rdf:type [ <ListItem> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <performTime> @<Duration> * ;
          <supply> @<Thing> * ;
          <tool> @<Thing> * ;
          <afterMedia> @linkml:String * ;
          <beforeMedia> @linkml:String * ;
          <duringMedia> @linkml:String * ;
          <prepTime> @<Duration> * ;
          <totalTime> @<Duration> * ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <HowToDirection> ] ?
    )
}

<HowToItem>  (
    CLOSED {
       (  $<HowToItem_tes> (  &<ListItem_tes> ;
             rdf:type [ <ListItem> ] ? ;
             <requiredQuantity> @linkml:String *
          ) ;
          rdf:type [ <HowToItem> ] ?
       )
    } OR @<HowToSupply> OR @<HowToTool>
)

<HowToSection> CLOSED {
    (  $<HowToSection_tes> (  &<ItemList_tes> ;
          rdf:type [ <ItemList> ] ? ;
          &<ListItem_tes> ;
          rdf:type [ <ListItem> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <steps> @linkml:String * ;
          <position> @linkml:String * ;
          <item> @<Thing> * ;
          <nextItem> @<ListItem> * ;
          <previousItem> @<ListItem> * ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <HowToSection> ] ?
    )
}

<HowToStep> CLOSED {
    (  $<HowToStep_tes> (  &<ItemList_tes> ;
          rdf:type [ <ItemList> ] ? ;
          &<ListItem_tes> ;
          rdf:type [ <ListItem> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <position> @linkml:String * ;
          <item> @<Thing> * ;
          <nextItem> @<ListItem> * ;
          <previousItem> @<ListItem> * ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <HowToStep> ] ?
    )
}

<HowToSupply> CLOSED {
    (  $<HowToSupply_tes> (  &<HowToItem_tes> ;
          rdf:type [ <HowToItem> ] ? ;
          <estimatedCost> @linkml:String *
       ) ;
       rdf:type [ <HowToSupply> ] ?
    )
}

<HowToTip> CLOSED {
    (  $<HowToTip_tes> (  &<ListItem_tes> ;
          rdf:type [ <ListItem> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <about> @<Thing> * ;
          <acquireLicensePage> @linkml:String * ;
          <contentLocation> @<Place> * ;
          <creator> @linkml:String * ;
          <dateCreated> @linkml:String * ;
          <editEIDR> @linkml:String * ;
          <funder> @linkml:String * ;
          <genre> @linkml:String * ;
          <hasPart> @<CreativeWork> * ;
          <interpretedAsClaim> @<Claim> * ;
          <isPartOf> @linkml:String * ;
          <mainEntity> @<Thing> * ;
          <material> @linkml:String * ;
          <publishingPrinciples> @linkml:String * ;
          <spatialCoverage> @<Place> * ;
          <sponsor> @linkml:String * ;
          <usageInfo> @linkml:String * ;
          <workExample> @<CreativeWork> * ;
          <abstract> @<Text> * ;
          <accessMode> @<Text> * ;
          <accessModeSufficient> @<ItemList> * ;
          <accessibilityAPI> @<Text> * ;
          <accessibilityControl> @<Text> * ;
          <accessibilityFeature> @<Text> * ;
          <accessibilityHazard> @<Text> * ;
          <accessibilitySummary> @<Text> * ;
          <accountablePerson> @<Person> * ;
          <aggregateRating> @<AggregateRating> * ;
          <alternativeHeadline> @<Text> * ;
          <archivedAt> @linkml:String * ;
          <assesses> @linkml:String * ;
          <associatedMedia> @<MediaObject> * ;
          <audience> @<Audience> * ;
          <audio> @linkml:String * ;
          <author> @linkml:String * ;
          <award> @<Text> * ;
          <awards> @<Text> * ;
          <character> @<Person> * ;
          <citation> @linkml:String * ;
          <comment> @<Comment> * ;
          <commentCount> @<Integer> * ;
          <conditionsOfAccess> @<Text> * ;
          <contentRating> @linkml:String * ;
          <contentReferenceTime> @<DateTime> * ;
          <contributor> @linkml:String * ;
          <copyrightHolder> @linkml:String * ;
          <copyrightNotice> @<Text> * ;
          <copyrightYear> @<Number> * ;
          <correction> @linkml:String * ;
          <countryOfOrigin> @<Country> * ;
          <creativeWorkStatus> @linkml:String * ;
          <creditText> @<Text> * ;
          <dateModified> @linkml:String * ;
          <datePublished> @linkml:String * ;
          <discussionUrl> @<URL> * ;
          <editor> @<Person> * ;
          <educationalAlignment> @<AlignmentObject> * ;
          <educationalLevel> @linkml:String * ;
          <educationalUse> @linkml:String * ;
          <encoding> @<MediaObject> * ;
          <encodingFormat> @linkml:String * ;
          <encodings> @<MediaObject> * ;
          <exampleOfWork> @<CreativeWork> * ;
          <expires> @<Date> * ;
          <fileFormat> @linkml:String * ;
          <headline> @<Text> * ;
          <inLanguage> @linkml:String * ;
          <interactionStatistic> @<InteractionCounter> * ;
          <interactivityType> @<Text> * ;
          <isAccessibleForFree> @<Boolean> * ;
          <isBasedOn> @linkml:String * ;
          <isBasedOnUrl> @linkml:String * ;
          <isFamilyFriendly> @<Boolean> * ;
          <keywords> @linkml:String * ;
          <learningResourceType> @linkml:String * ;
          <license> @linkml:String * ;
          <locationCreated> @<Place> * ;
          <maintainer> @linkml:String * ;
          <materialExtent> @linkml:String * ;
          <mentions> @<Thing> * ;
          <offers> @linkml:String * ;
          <pattern> @linkml:String * ;
          <producer> @linkml:String * ;
          <provider> @linkml:String * ;
          <publication> @<PublicationEvent> * ;
          <publisher> @linkml:String * ;
          <publisherImprint> @<Organization> * ;
          <recordedAt> @<Event> * ;
          <releasedEvent> @<PublicationEvent> * ;
          <review> @<Review> * ;
          <reviews> @<Review> * ;
          <schemaVersion> @linkml:String * ;
          <sdDatePublished> @<Date> * ;
          <sdLicense> @linkml:String * ;
          <sdPublisher> @linkml:String * ;
          <size> @linkml:String * ;
          <sourceOrganization> @<Organization> * ;
          <spatial> @<Place> * ;
          <teaches> @linkml:String * ;
          <temporal> @linkml:String * ;
          <temporalCoverage> @linkml:String * ;
          <text> @<Text> * ;
          <thumbnailUrl> @<URL> * ;
          <timeRequired> @<Duration> * ;
          <translationOfWork> @<CreativeWork> * ;
          <translator> @linkml:String * ;
          <typicalAgeRange> @<Text> * ;
          <version> @linkml:String * ;
          <video> @linkml:String * ;
          <workTranslation> @<CreativeWork> *
       ) ;
       rdf:type [ <HowToTip> ] ?
    )
}

<HowToTool> CLOSED {
    (  $<HowToTool_tes> (  &<HowToItem_tes> ;
          rdf:type [ <HowToItem> ] ?
       ) ;
       rdf:type [ <HowToTool> ] ?
    )
}

<HttpMethod> CLOSED {
    (  $<HttpMethod_tes> rdf:type . * ;
       rdf:type [ <HttpMethod> ] ?
    )
}

<HVACBusiness> CLOSED {
    (  $<HVACBusiness_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <HVACBusiness> ] ?
    )
}

<HyperToc> CLOSED {
    (  $<HyperToc_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <tocEntry> @<HyperTocEntry> *
       ) ;
       rdf:type [ <HyperToc> ] ?
    )
}

<HyperTocEntry> CLOSED {
    (  $<HyperTocEntry_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <tocContinuation> @<HyperTocEntry> * ;
          <utterances> @<Text> *
       ) ;
       rdf:type [ <HyperTocEntry> ] ?
    )
}

<IataCode> CLOSED {
    (  $<IataCode_tes> rdf:type . * ;
       rdf:type [ <IataCode> ] ?
    )
}

<IcaoCode> CLOSED {
    (  $<IcaoCode_tes> rdf:type . * ;
       rdf:type [ <IcaoCode> ] ?
    )
}

<IceCreamShop> CLOSED {
    (  $<IceCreamShop_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <IceCreamShop> ] ?
    )
}

<IdentifyingExam> CLOSED {
    (  $<IdentifyingExam_tes> rdf:type . * ;
       rdf:type [ <IdentifyingExam> ] ?
    )
}

<IdentifyingTest> CLOSED {
    (  $<IdentifyingTest_tes> rdf:type . * ;
       rdf:type [ <IdentifyingTest> ] ?
    )
}

<IgnoreAction> CLOSED {
    (  $<IgnoreAction_tes> (  &<AssessAction_tes> ;
          rdf:type [ <AssessAction> ] ?
       ) ;
       rdf:type [ <IgnoreAction> ] ?
    )
}

<Illustrator> CLOSED {
    (  $<Illustrator_tes> rdf:type . * ;
       rdf:type [ <Illustrator> ] ?
    )
}

<Image> CLOSED {
    (  $<Image_tes> rdf:type . * ;
       rdf:type [ dcmitype:Image ] ?
    )
}

<ImageGallery> CLOSED {
    (  $<ImageGallery_tes> (  &<MediaGallery_tes> ;
          rdf:type [ <MediaGallery> ] ?
       ) ;
       rdf:type [ <ImageGallery> ] ?
    )
}

<ImageObject>  (
    CLOSED {
       (  $<ImageObject_tes> (  &<MediaObject_tes> ;
             rdf:type [ <MediaObject> ] ? ;
             <caption> @linkml:String * ;
             <embeddedTextCaption> @<Text> * ;
             <exifData> @linkml:String * ;
             <representativeOfPage> @<Boolean> * ;
             <thumbnail> @<ImageObject> *
          ) ;
          rdf:type [ <ImageObject> ] ?
       )
    } OR @<Barcode> OR @<ImageObjectSnapshot>
)

<ImageObjectSnapshot> CLOSED {
    (  $<ImageObjectSnapshot_tes> (  &<ImageObject_tes> ;
          rdf:type [ <ImageObject> ] ?
       ) ;
       rdf:type [ <ImageObjectSnapshot> ] ?
    )
}

<ImagingTechnique> CLOSED {
    (  $<ImagingTechnique_tes> rdf:type . * ;
       rdf:type [ <ImagingTechnique> ] ?
    )
}

<ImagingTest> CLOSED {
    (  $<ImagingTest_tes> (  &<MedicalTest_tes> ;
          rdf:type [ <MedicalTest> ] ? ;
          <imagingTechnique> @<MedicalImagingTechnique> *
       ) ;
       rdf:type [ <ImagingTest> ] ?
    )
}

<InAlbum> CLOSED {
    (  $<InAlbum_tes> rdf:type . * ;
       rdf:type [ <InAlbum> ] ?
    )
}

<InBroadcastLineup> CLOSED {
    (  $<InBroadcastLineup_tes> rdf:type . * ;
       rdf:type [ <InBroadcastLineup> ] ?
    )
}

<IncentiveCompensation> CLOSED {
    (  $<IncentiveCompensation_tes> rdf:type . * ;
       rdf:type [ <IncentiveCompensation> ] ?
    )
}

<Incentives> CLOSED {
    (  $<Incentives_tes> rdf:type . * ;
       rdf:type [ <Incentives> ] ?
    )
}

<IncludedComposition> CLOSED {
    (  $<IncludedComposition_tes> rdf:type . * ;
       rdf:type [ <IncludedComposition> ] ?
    )
}

<IncludedDataCatalog> CLOSED {
    (  $<IncludedDataCatalog_tes> rdf:type . * ;
       rdf:type [ <IncludedDataCatalog> ] ?
    )
}

<IncludedInDataCatalog> CLOSED {
    (  $<IncludedInDataCatalog_tes> rdf:type . * ;
       rdf:type [ <IncludedInDataCatalog> ] ?
    )
}

<IncludedInHealthInsurancePlan> CLOSED {
    (  $<IncludedInHealthInsurancePlan_tes> rdf:type . * ;
       rdf:type [ <IncludedInHealthInsurancePlan> ] ?
    )
}

<IncludedRiskFactor> CLOSED {
    (  $<IncludedRiskFactor_tes> rdf:type . * ;
       rdf:type [ <IncludedRiskFactor> ] ?
    )
}

<IncludesAttraction> CLOSED {
    (  $<IncludesAttraction_tes> rdf:type . * ;
       rdf:type [ <IncludesAttraction> ] ?
    )
}

<IncludesHealthPlanFormulary> CLOSED {
    (  $<IncludesHealthPlanFormulary_tes> rdf:type . * ;
       rdf:type [ <IncludesHealthPlanFormulary> ] ?
    )
}

<IncludesHealthPlanNetwork> CLOSED {
    (  $<IncludesHealthPlanNetwork_tes> rdf:type . * ;
       rdf:type [ <IncludesHealthPlanNetwork> ] ?
    )
}

<IncludesObject> CLOSED {
    (  $<IncludesObject_tes> rdf:type . * ;
       rdf:type [ <IncludesObject> ] ?
    )
}

<IncreasesRiskOf> CLOSED {
    (  $<IncreasesRiskOf_tes> rdf:type . * ;
       rdf:type [ <IncreasesRiskOf> ] ?
    )
}

<IndividualProduct> CLOSED {
    (  $<IndividualProduct_tes> (  &<Product_tes> ;
          rdf:type [ <Product> ] ? ;
          <serialNumber> @<Text> *
       ) ;
       rdf:type [ <IndividualProduct> ] ?
    )
}

<Industry> CLOSED {
    (  $<Industry_tes> rdf:type . * ;
       rdf:type [ <Industry> ] ?
    )
}

<IneligibleRegion> CLOSED {
    (  $<IneligibleRegion_tes> rdf:type . * ;
       rdf:type [ <IneligibleRegion> ] ?
    )
}

<Infectious> CLOSED {
    (  $<Infectious_tes> rdf:type . * ;
       rdf:type [ <Infectious> ] ?
    )
}

<InfectiousAgent> CLOSED {
    (  $<InfectiousAgent_tes> rdf:type . * ;
       rdf:type [ <InfectiousAgent> ] ?
    )
}

<InfectiousAgentClass> CLOSED {
    (  $<InfectiousAgentClass_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <InfectiousAgentClass> ] ?
    )
}

<InfectiousAgentClass> CLOSED {
    (  $<InfectiousAgentClass_tes> rdf:type . * ;
       rdf:type [ <InfectiousAgentClass> ] ?
    )
}

<InfectiousDisease> CLOSED {
    (  $<InfectiousDisease_tes> (  &<MedicalCondition_tes> ;
          rdf:type [ <MedicalCondition> ] ? ;
          <infectiousAgent> @<Text> * ;
          <infectiousAgentClass> @<InfectiousAgentClass> * ;
          <transmissionMethod> @<Text> *
       ) ;
       rdf:type [ <InfectiousDisease> ] ?
    )
}

<InForce> CLOSED {
    (  $<InForce_tes> rdf:type . * ;
       rdf:type [ <InForce> ] ?
    )
}

<InformAction>  (
    CLOSED {
       (  $<InformAction_tes> (  &<CommunicateAction_tes> ;
             rdf:type [ <CommunicateAction> ] ? ;
             <event> @<Event> *
          ) ;
          rdf:type [ <InformAction> ] ?
       )
    } OR @<ConfirmAction> OR @<RsvpAction>
)

<IngredientsHealthAspect> CLOSED {
    (  $<IngredientsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <IngredientsHealthAspect> ] ?
    )
}

<Inker> CLOSED {
    (  $<Inker_tes> rdf:type . * ;
       rdf:type [ <Inker> ] ?
    )
}

<InLanguage> CLOSED {
    (  $<InLanguage_tes> rdf:type . * ;
       rdf:type [ <InLanguage> ] ?
    )
}

<InPlaylist> CLOSED {
    (  $<InPlaylist_tes> rdf:type . * ;
       rdf:type [ <InPlaylist> ] ?
    )
}

<InProductGroupWithID> CLOSED {
    (  $<InProductGroupWithID_tes> rdf:type . * ;
       rdf:type [ <InProductGroupWithID> ] ?
    )
}

<InsertAction>  (
    CLOSED {
       (  $<InsertAction_tes> (  &<AddAction_tes> ;
             rdf:type [ <AddAction> ] ? ;
             <toLocation> @<Place> *
          ) ;
          rdf:type [ <InsertAction> ] ?
       )
    } OR @<AppendAction> OR @<PrependAction>
)

<Insertion> CLOSED {
    (  $<Insertion_tes> rdf:type . * ;
       rdf:type [ <Insertion> ] ?
    )
}

<InstallAction> CLOSED {
    (  $<InstallAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <InstallAction> ] ?
    )
}

<Installment> CLOSED {
    (  $<Installment_tes> rdf:type . * ;
       rdf:type [ <Installment> ] ?
    )
}

<InstallUrl> CLOSED {
    (  $<InstallUrl_tes> rdf:type . * ;
       rdf:type [ <InstallUrl> ] ?
    )
}

<InStock> CLOSED {
    (  $<InStock_tes> rdf:type . * ;
       rdf:type [ <InStock> ] ?
    )
}

<InStoreOnly> CLOSED {
    (  $<InStoreOnly_tes> rdf:type . * ;
       rdf:type [ <InStoreOnly> ] ?
    )
}

<InStoreReturnsOffered> CLOSED {
    (  $<InStoreReturnsOffered_tes> rdf:type . * ;
       rdf:type [ <InStoreReturnsOffered> ] ?
    )
}

<Instructor> CLOSED {
    (  $<Instructor_tes> rdf:type . * ;
       rdf:type [ <Instructor> ] ?
    )
}

<InSupportOf> CLOSED {
    (  $<InSupportOf_tes> rdf:type . * ;
       rdf:type [ <InSupportOf> ] ?
    )
}

<InsuranceAgency> CLOSED {
    (  $<InsuranceAgency_tes> (  &<FinancialService_tes> ;
          rdf:type [ <FinancialService> ] ?
       ) ;
       rdf:type [ <InsuranceAgency> ] ?
    )
}

<Intangible>  (
    CLOSED {
       (  $<Intangible_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ?
          ) ;
          rdf:type [ <Intangible> ] ?
       )
    } OR @<ActionAccessSpecification> OR @<AlignmentObject> OR @<Audience> OR @<BedDetails> OR @<Brand> OR @<BroadcastChannel> OR
    @<BroadcastFrequencySpecification> OR @<Class> OR @<ComputerLanguage> OR @<DataFeedItem> OR @<DefinedTerm> OR @<Demand> OR
    @<DigitalDocumentPermission> OR @<EducationalOccupationalProgram> OR @<EnergyConsumptionDetails> OR @<EntryPoint> OR
    @<Enumeration> OR @<FloorPlan> OR @<GameServer> OR @<GeospatialGeometry> OR @<Grant> OR @<HealthInsurancePlan> OR
    @<HealthPlanCostSharingSpecification> OR @<HealthPlanFormulary> OR @<HealthPlanNetwork> OR @<Invoice> OR @<ItemList> OR
    @<JobPosting> OR @<Language> OR @<ListItem> OR @<MediaSubscription> OR @<MenuItem> OR @<MerchantReturnPolicy> OR
    @<MerchantReturnPolicySeasonalOverride> OR @<Observation> OR @<Occupation> OR @<OccupationalExperienceRequirements> OR @<Offer>
    OR @<Order> OR @<OrderItem> OR @<ParcelDelivery> OR @<Permit> OR @<ProgramMembership> OR @<Property> OR
    @<PropertyValueSpecification> OR @<Quantity> OR @<Rating> OR @<Reservation> OR @<Role> OR @<Schedule> OR @<Seat> OR @<Series>
    OR @<Service> OR @<ServiceChannel> OR @<SpeakableSpecification> OR @<StatisticalPopulation> OR @<StructuredValue> OR @<Ticket>
    OR @<Trip> OR @<VirtualLocation>
)

<Integer> CLOSED {
    (  $<Integer_tes> (  &<Number_tes> ;
          rdf:type [ <Number> ] ?
       ) ;
       rdf:type [ <Integer> ] ?
    )
}

<Intensity> CLOSED {
    (  $<Intensity_tes> rdf:type . * ;
       rdf:type [ <Intensity> ] ?
    )
}

<InteractAction>  (
    CLOSED {
       (  $<InteractAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <InteractAction> ] ?
       )
    } OR @<BefriendAction> OR @<CommunicateAction> OR @<FollowAction> OR @<JoinAction> OR @<LeaveAction> OR @<MarryAction> OR
    @<RegisterAction> OR @<SubscribeAction> OR @<UnRegisterAction>
)

<InteractingDrug> CLOSED {
    (  $<InteractingDrug_tes> rdf:type . * ;
       rdf:type [ <InteractingDrug> ] ?
    )
}

<InteractionCount> CLOSED {
    (  $<InteractionCount_tes> rdf:type . * ;
       rdf:type [ <InteractionCount> ] ?
    )
}

<InteractionCounter> CLOSED {
    (  $<InteractionCounter_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <location> @linkml:String * ;
          <endTime> @linkml:String * ;
          <interactionService> @linkml:String * ;
          <interactionType> @<Action> * ;
          <startTime> @linkml:String * ;
          <userInteractionCount> @<Integer> *
       ) ;
       rdf:type [ <InteractionCounter> ] ?
    )
}

<InteractionService> CLOSED {
    (  $<InteractionService_tes> rdf:type . * ;
       rdf:type [ <InteractionService> ] ?
    )
}

<InteractionStatistic> CLOSED {
    (  $<InteractionStatistic_tes> rdf:type . * ;
       rdf:type [ <InteractionStatistic> ] ?
    )
}

<InteractionType> CLOSED {
    (  $<InteractionType_tes> rdf:type . * ;
       rdf:type [ <InteractionType> ] ?
    )
}

<InteractivityType> CLOSED {
    (  $<InteractivityType_tes> rdf:type . * ;
       rdf:type [ <InteractivityType> ] ?
    )
}

<InterestRate> CLOSED {
    (  $<InterestRate_tes> rdf:type . * ;
       rdf:type [ <InterestRate> ] ?
    )
}

<InternationalTrial> CLOSED {
    (  $<InternationalTrial_tes> rdf:type . * ;
       rdf:type [ <InternationalTrial> ] ?
    )
}

<InternetCafe> CLOSED {
    (  $<InternetCafe_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <InternetCafe> ] ?
    )
}

<InventoryLevel> CLOSED {
    (  $<InventoryLevel_tes> rdf:type . * ;
       rdf:type [ <InventoryLevel> ] ?
    )
}

<InvestmentFund> CLOSED {
    (  $<InvestmentFund_tes> (  &<InvestmentOrDeposit_tes> ;
          rdf:type [ <InvestmentOrDeposit> ] ?
       ) ;
       rdf:type [ <InvestmentFund> ] ?
    )
}

<InvestmentOrDeposit>  (
    CLOSED {
       (  $<InvestmentOrDeposit_tes> (  &<FinancialProduct_tes> ;
             rdf:type [ <FinancialProduct> ] ? ;
             <amount> @linkml:String *
          ) ;
          rdf:type [ <InvestmentOrDeposit> ] ?
       )
    } OR @<BrokerageAccount> OR @<InvestmentFund>
)

<InviteAction> CLOSED {
    (  $<InviteAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ? ;
          <event> @<Event> *
       ) ;
       rdf:type [ <InviteAction> ] ?
    )
}

<Invoice> CLOSED {
    (  $<Invoice_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <accountId> @<Text> * ;
          <category> @linkml:String * ;
          <confirmationNumber> @<Text> * ;
          <billingPeriod> @<Duration> * ;
          <broker> @linkml:String * ;
          <customer> @linkml:String * ;
          <minimumPaymentDue> @linkml:String * ;
          <paymentDue> @<DateTime> * ;
          <paymentDueDate> @linkml:String * ;
          <paymentMethod> @<PaymentMethod> * ;
          <paymentMethodId> @<Text> * ;
          <paymentStatus> @linkml:String * ;
          <provider> @linkml:String * ;
          <referencesOrder> @<Order> * ;
          <scheduledPaymentDate> @<Date> * ;
          <totalPaymentDue> @linkml:String *
       ) ;
       rdf:type [ <Invoice> ] ?
    )
}

<InvoicePrice> CLOSED {
    (  $<InvoicePrice_tes> rdf:type . * ;
       rdf:type [ <InvoicePrice> ] ?
    )
}

<IsAcceptingNewPatients> CLOSED {
    (  $<IsAcceptingNewPatients_tes> rdf:type . * ;
       rdf:type [ <IsAcceptingNewPatients> ] ?
    )
}

<IsAccessibleForFree> CLOSED {
    (  $<IsAccessibleForFree_tes> rdf:type . * ;
       rdf:type [ <IsAccessibleForFree> ] ?
    )
}

<IsAccessoryOrSparePartFor> CLOSED {
    (  $<IsAccessoryOrSparePartFor_tes> rdf:type . * ;
       rdf:type [ <IsAccessoryOrSparePartFor> ] ?
    )
}

<IsAvailableGenerically> CLOSED {
    (  $<IsAvailableGenerically_tes> rdf:type . * ;
       rdf:type [ <IsAvailableGenerically> ] ?
    )
}

<IsBasedOn> CLOSED {
    (  $<IsBasedOn_tes> rdf:type . * ;
       rdf:type [ <IsBasedOn> ] ?
    )
}

<IsBasedOnUrl> CLOSED {
    (  $<IsBasedOnUrl_tes> rdf:type . * ;
       rdf:type [ <IsBasedOnUrl> ] ?
    )
}

<IsConsumableFor> CLOSED {
    (  $<IsConsumableFor_tes> rdf:type . * ;
       rdf:type [ <IsConsumableFor> ] ?
    )
}

<IsEncodedByBioChemEntity> CLOSED {
    (  $<IsEncodedByBioChemEntity_tes> rdf:type . * ;
       rdf:type [ <IsEncodedByBioChemEntity> ] ?
    )
}

<IsFamilyFriendly> CLOSED {
    (  $<IsFamilyFriendly_tes> rdf:type . * ;
       rdf:type [ <IsFamilyFriendly> ] ?
    )
}

<IsGift> CLOSED {
    (  $<IsGift_tes> rdf:type . * ;
       rdf:type [ <IsGift> ] ?
    )
}

<IsicV4> CLOSED {
    (  $<IsicV4_tes> rdf:type . * ;
       rdf:type [ <IsicV4> ] ?
    )
}

<IsInvolvedInBiologicalProcess> CLOSED {
    (  $<IsInvolvedInBiologicalProcess_tes> rdf:type . * ;
       rdf:type [ <IsInvolvedInBiologicalProcess> ] ?
    )
}

<IsLiveBroadcast> CLOSED {
    (  $<IsLiveBroadcast_tes> rdf:type . * ;
       rdf:type [ <IsLiveBroadcast> ] ?
    )
}

<IsLocatedInSubcellularLocation> CLOSED {
    (  $<IsLocatedInSubcellularLocation_tes> rdf:type . * ;
       rdf:type [ <IsLocatedInSubcellularLocation> ] ?
    )
}

<IsPartOfBioChemEntity> CLOSED {
    (  $<IsPartOfBioChemEntity_tes> rdf:type . * ;
       rdf:type [ <IsPartOfBioChemEntity> ] ?
    )
}

<IsPlanForApartment> CLOSED {
    (  $<IsPlanForApartment_tes> rdf:type . * ;
       rdf:type [ <IsPlanForApartment> ] ?
    )
}

<IsProprietary> CLOSED {
    (  $<IsProprietary_tes> rdf:type . * ;
       rdf:type [ <IsProprietary> ] ?
    )
}

<IsrcCode> CLOSED {
    (  $<IsrcCode_tes> rdf:type . * ;
       rdf:type [ <IsrcCode> ] ?
    )
}

<IsRelatedTo> CLOSED {
    (  $<IsRelatedTo_tes> rdf:type . * ;
       rdf:type [ <IsRelatedTo> ] ?
    )
}

<IsResizable> CLOSED {
    (  $<IsResizable_tes> rdf:type . * ;
       rdf:type [ <IsResizable> ] ?
    )
}

<IsSimilarTo> CLOSED {
    (  $<IsSimilarTo_tes> rdf:type . * ;
       rdf:type [ <IsSimilarTo> ] ?
    )
}

<Issue> CLOSED {
    (  $<Issue_tes> rdf:type . * ;
       rdf:type [ <http://purl.org/ontology/bibo/Issue> ] ?
    )
}

<IssuedBy> CLOSED {
    (  $<IssuedBy_tes> rdf:type . * ;
       rdf:type [ <IssuedBy> ] ?
    )
}

<IssuedThrough> CLOSED {
    (  $<IssuedThrough_tes> rdf:type . * ;
       rdf:type [ <IssuedThrough> ] ?
    )
}

<IsUnlabelledFallback> CLOSED {
    (  $<IsUnlabelledFallback_tes> rdf:type . * ;
       rdf:type [ <IsUnlabelledFallback> ] ?
    )
}

<IsVariantOf> CLOSED {
    (  $<IsVariantOf_tes> rdf:type . * ;
       rdf:type [ <IsVariantOf> ] ?
    )
}

<IswcCode> CLOSED {
    (  $<IswcCode_tes> rdf:type . * ;
       rdf:type [ <IswcCode> ] ?
    )
}

<Item> CLOSED {
    (  $<Item_tes> rdf:type . * ;
       rdf:type [ <Item> ] ?
    )
}

<ItemAvailability> CLOSED {
    (  $<ItemAvailability_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ItemAvailability> ] ?
    )
}

<ItemCondition> CLOSED {
    (  $<ItemCondition_tes> rdf:type . * ;
       rdf:type [ <ItemCondition> ] ?
    )
}

<ItemDefectReturnFees> CLOSED {
    (  $<ItemDefectReturnFees_tes> rdf:type . * ;
       rdf:type [ <ItemDefectReturnFees> ] ?
    )
}

<ItemDefectReturnLabelSource> CLOSED {
    (  $<ItemDefectReturnLabelSource_tes> rdf:type . * ;
       rdf:type [ <ItemDefectReturnLabelSource> ] ?
    )
}

<ItemDefectReturnShippingFeesAmount> CLOSED {
    (  $<ItemDefectReturnShippingFeesAmount_tes> rdf:type . * ;
       rdf:type [ <ItemDefectReturnShippingFeesAmount> ] ?
    )
}

<ItemList>  (
    CLOSED {
       (  $<ItemList_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <itemListElement> @linkml:String * ;
             <itemListOrder> @linkml:String * ;
             <numberOfItems> @<Integer> *
          ) ;
          rdf:type [ <ItemList> ] ?
       )
    } OR @<BreadcrumbList> OR @<HowToSection> OR @<HowToStep> OR @<OfferCatalog>
)

<ItemListElement> CLOSED {
    (  $<ItemListElement_tes> rdf:type . * ;
       rdf:type [ <ItemListElement> ] ?
    )
}

<ItemListOrder> CLOSED {
    (  $<ItemListOrder_tes> rdf:type . * ;
       rdf:type [ <ItemListOrder> ] ?
    )
}

<ItemListOrderAscending> CLOSED {
    (  $<ItemListOrderAscending_tes> rdf:type . * ;
       rdf:type [ <ItemListOrderAscending> ] ?
    )
}

<ItemListOrderDescending> CLOSED {
    (  $<ItemListOrderDescending_tes> rdf:type . * ;
       rdf:type [ <ItemListOrderDescending> ] ?
    )
}

<ItemListOrderType> CLOSED {
    (  $<ItemListOrderType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ItemListOrderType> ] ?
    )
}

<ItemListUnordered> CLOSED {
    (  $<ItemListUnordered_tes> rdf:type . * ;
       rdf:type [ <ItemListUnordered> ] ?
    )
}

<ItemOffered> CLOSED {
    (  $<ItemOffered_tes> rdf:type . * ;
       rdf:type [ <ItemOffered> ] ?
    )
}

<ItemPage> CLOSED {
    (  $<ItemPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <ItemPage> ] ?
    )
}

<ItemReviewed> CLOSED {
    (  $<ItemReviewed_tes> rdf:type . * ;
       rdf:type [ <ItemReviewed> ] ?
    )
}

<ItemShipped> CLOSED {
    (  $<ItemShipped_tes> rdf:type . * ;
       rdf:type [ <ItemShipped> ] ?
    )
}

<Itinerary> CLOSED {
    (  $<Itinerary_tes> rdf:type . * ;
       rdf:type [ <Itinerary> ] ?
    )
}

<IupacName> CLOSED {
    (  $<IupacName_tes> rdf:type . * ;
       rdf:type [ <IupacName> ] ?
    )
}

<JewelryStore> CLOSED {
    (  $<JewelryStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <JewelryStore> ] ?
    )
}

<JobBenefits> CLOSED {
    (  $<JobBenefits_tes> rdf:type . * ;
       rdf:type [ <JobBenefits> ] ?
    )
}

<JobImmediateStart> CLOSED {
    (  $<JobImmediateStart_tes> rdf:type . * ;
       rdf:type [ <JobImmediateStart> ] ?
    )
}

<JobLocation> CLOSED {
    (  $<JobLocation_tes> rdf:type . * ;
       rdf:type [ <JobLocation> ] ?
    )
}

<JobLocationType> CLOSED {
    (  $<JobLocationType_tes> rdf:type . * ;
       rdf:type [ <JobLocationType> ] ?
    )
}

<JobPosting> CLOSED {
    (  $<JobPosting_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <applicantLocationRequirements> @<AdministrativeArea> * ;
          <applicationContact> @<ContactPoint> * ;
          <baseSalary> @linkml:String * ;
          <benefits> @<Text> * ;
          <datePosted> @linkml:String * ;
          <directApply> @<Boolean> * ;
          <educationRequirements> @linkml:String * ;
          <eligibilityToWorkRequirement> @<Text> * ;
          <employerOverview> @<Text> * ;
          <employmentType> @<Text> * ;
          <employmentUnit> @<Organization> * ;
          <estimatedSalary> @linkml:String * ;
          <experienceInPlaceOfEducation> @<Boolean> * ;
          <experienceRequirements> @linkml:String * ;
          <hiringOrganization> @<Organization> * ;
          <incentiveCompensation> @<Text> * ;
          <incentives> @<Text> * ;
          <industry> @linkml:String * ;
          <jobBenefits> @<Text> * ;
          <jobImmediateStart> @<Boolean> * ;
          <jobLocation> @<Place> * ;
          <jobLocationType> @<Text> * ;
          <jobStartDate> @linkml:String * ;
          <occupationalCategory> @linkml:String * ;
          <physicalRequirement> @linkml:String * ;
          <qualifications> @linkml:String * ;
          <relevantOccupation> @<Occupation> * ;
          <responsibilities> @<Text> * ;
          <salaryCurrency> @<Text> * ;
          <securityClearanceRequirement> @linkml:String * ;
          <sensoryRequirement> @linkml:String * ;
          <skills> @linkml:String * ;
          <specialCommitments> @<Text> * ;
          <title> @<Text> * ;
          <totalJobOpenings> @<Integer> * ;
          <validThrough> @linkml:String * ;
          <workHours> @<Text> *
       ) ;
       rdf:type [ <JobPosting> ] ?
    )
}

<JobStartDate> CLOSED {
    (  $<JobStartDate_tes> rdf:type . * ;
       rdf:type [ <JobStartDate> ] ?
    )
}

<JobTitle> CLOSED {
    (  $<JobTitle_tes> rdf:type . * ;
       rdf:type [ <JobTitle> ] ?
    )
}

<JoinAction> CLOSED {
    (  $<JoinAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ? ;
          <event> @<Event> *
       ) ;
       rdf:type [ <JoinAction> ] ?
    )
}

<Joint> CLOSED {
    (  $<Joint_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ? ;
          <biomechnicalClass> @<Text> * ;
          <functionalClass> @linkml:String * ;
          <structuralClass> @<Text> *
       ) ;
       rdf:type [ <Joint> ] ?
    )
}

<Keywords> CLOSED {
    (  $<Keywords_tes> rdf:type . * ;
       rdf:type [ <Keywords> ] ?
    )
}

<KnownVehicleDamages> CLOSED {
    (  $<KnownVehicleDamages_tes> rdf:type . * ;
       rdf:type [ <KnownVehicleDamages> ] ?
    )
}

<Knows> CLOSED {
    (  $<Knows_tes> rdf:type . * ;
       rdf:type [ <Knows> ] ?
    )
}

<KnowsAbout> CLOSED {
    (  $<KnowsAbout_tes> rdf:type . * ;
       rdf:type [ <KnowsAbout> ] ?
    )
}

<KnowsLanguage> CLOSED {
    (  $<KnowsLanguage_tes> rdf:type . * ;
       rdf:type [ <KnowsLanguage> ] ?
    )
}

<KosherDiet> CLOSED {
    (  $<KosherDiet_tes> rdf:type . * ;
       rdf:type [ <KosherDiet> ] ?
    )
}

<LabelDetails> CLOSED {
    (  $<LabelDetails_tes> rdf:type . * ;
       rdf:type [ <LabelDetails> ] ?
    )
}

<LaboratoryScience> CLOSED {
    (  $<LaboratoryScience_tes> rdf:type . * ;
       rdf:type [ <LaboratoryScience> ] ?
    )
}

<LakeBodyOfWater> CLOSED {
    (  $<LakeBodyOfWater_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <LakeBodyOfWater> ] ?
    )
}

<Landform>  (
    CLOSED {
       (  $<Landform_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ?
          ) ;
          rdf:type [ <Landform> ] ?
       )
    } OR @<BodyOfWater> OR @<Continent> OR @<Mountain> OR @<Volcano>
)

<LandmarksOrHistoricalBuildings> CLOSED {
    (  $<LandmarksOrHistoricalBuildings_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ?
       ) ;
       rdf:type [ <LandmarksOrHistoricalBuildings> ] ?
    )
}

<Language> CLOSED {
    (  $<Language_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ?
       ) ;
       rdf:type [ <Language> ] ?
    )
}

<LaserDiscFormat> CLOSED {
    (  $<LaserDiscFormat_tes> rdf:type . * ;
       rdf:type [ <LaserDiscFormat> ] ?
    )
}

<LastReviewed> CLOSED {
    (  $<LastReviewed_tes> rdf:type . * ;
       rdf:type [ <LastReviewed> ] ?
    )
}

<Latitude> CLOSED {
    (  $<Latitude_tes> rdf:type . * ;
       rdf:type [ <Latitude> ] ?
    )
}

<LearningResource>  (
    CLOSED {
       (  $<LearningResource_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <competencyRequired> @linkml:String *
          ) ;
          rdf:type [ <LearningResource> ] ?
       )
    } OR @<Course> OR @<Quiz>
)

<LearningResourceType> CLOSED {
    (  $<LearningResourceType_tes> rdf:type . * ;
       rdf:type [ <LearningResourceType> ] ?
    )
}

<LeaseLength> CLOSED {
    (  $<LeaseLength_tes> rdf:type . * ;
       rdf:type [ <LeaseLength> ] ?
    )
}

<LeaveAction> CLOSED {
    (  $<LeaveAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ? ;
          <event> @<Event> *
       ) ;
       rdf:type [ <LeaveAction> ] ?
    )
}

<LeftHandDriving> CLOSED {
    (  $<LeftHandDriving_tes> rdf:type . * ;
       rdf:type [ <LeftHandDriving> ] ?
    )
}

<LegalForceStatus> CLOSED {
    (  $<LegalForceStatus_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <LegalForceStatus> ] ?
    )
}

<LegalName> CLOSED {
    (  $<LegalName_tes> rdf:type . * ;
       rdf:type [ <LegalName> ] ?
    )
}

<LegalService>  (
    CLOSED {
       (  $<LegalService_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <LegalService> ] ?
       )
    } OR @<Attorney> OR @<Notary>
)

<LegalStatus> CLOSED {
    (  $<LegalStatus_tes> rdf:type . * ;
       rdf:type [ <LegalStatus> ] ?
    )
}

<LegalValueLevel> CLOSED {
    (  $<LegalValueLevel_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <LegalValueLevel> ] ?
    )
}

<Legislation> CLOSED {
    (  $<Legislation_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <jurisdiction> @linkml:String * ;
          <legislationApplies> @<Legislation> * ;
          <legislationDate> @<Date> * ;
          <legislationIdentifier> @linkml:String * ;
          <legislationJurisdiction> @linkml:String * ;
          <legislationPassedBy> @linkml:String * ;
          <legislationTransposes> @<Legislation> * ;
          <legislationType> @linkml:String * ;
          <legislationChanges> @<Legislation> * ;
          <legislationConsolidates> @<Legislation> * ;
          <legislationDateVersion> @<Date> * ;
          <legislationLegalForce> @<LegalForceStatus> * ;
          <legislationResponsible> @linkml:String *
       ) ;
       rdf:type [ <Legislation> ] ?
    )
}

<LegislationChanges> CLOSED {
    (  $<LegislationChanges_tes> rdf:type . * ;
       rdf:type [ <LegislationChanges> ] ?
    )
}

<LegislationConsolidates> CLOSED {
    (  $<LegislationConsolidates_tes> rdf:type . * ;
       rdf:type [ <LegislationConsolidates> ] ?
    )
}

<LegislationDateVersion> CLOSED {
    (  $<LegislationDateVersion_tes> rdf:type . * ;
       rdf:type [ <LegislationDateVersion> ] ?
    )
}

<LegislationLegalForce> CLOSED {
    (  $<LegislationLegalForce_tes> rdf:type . * ;
       rdf:type [ <LegislationLegalForce> ] ?
    )
}

<LegislationLegalValue> CLOSED {
    (  $<LegislationLegalValue_tes> rdf:type . * ;
       rdf:type [ <LegislationLegalValue> ] ?
    )
}

<LegislationObject> CLOSED {
    (  $<LegislationObject_tes> (  &<MediaObject_tes> ;
          rdf:type [ <MediaObject> ] ? ;
          &<Legislation_tes> ;
          rdf:type [ <Legislation> ] ? ;
          <legislationLegalValue> @<LegalValueLevel> * ;
          <jurisdiction> @linkml:String * ;
          <legislationApplies> @<Legislation> * ;
          <legislationDate> @<Date> * ;
          <legislationIdentifier> @linkml:String * ;
          <legislationJurisdiction> @linkml:String * ;
          <legislationPassedBy> @linkml:String * ;
          <legislationTransposes> @<Legislation> * ;
          <legislationType> @linkml:String * ;
          <legislationChanges> @<Legislation> * ;
          <legislationConsolidates> @<Legislation> * ;
          <legislationDateVersion> @<Date> * ;
          <legislationLegalForce> @<LegalForceStatus> * ;
          <legislationResponsible> @linkml:String *
       ) ;
       rdf:type [ <LegislationObject> ] ?
    )
}

<LegislationResponsible> CLOSED {
    (  $<LegislationResponsible_tes> rdf:type . * ;
       rdf:type [ <LegislationResponsible> ] ?
    )
}

<LegislativeBuilding> CLOSED {
    (  $<LegislativeBuilding_tes> (  &<GovernmentBuilding_tes> ;
          rdf:type [ <GovernmentBuilding> ] ?
       ) ;
       rdf:type [ <LegislativeBuilding> ] ?
    )
}

<LeisureTimeActivity> CLOSED {
    (  $<LeisureTimeActivity_tes> rdf:type . * ;
       rdf:type [ <LeisureTimeActivity> ] ?
    )
}

<LendAction> CLOSED {
    (  $<LendAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <borrower> @<Person> *
       ) ;
       rdf:type [ <LendAction> ] ?
    )
}

<Lesser> CLOSED {
    (  $<Lesser_tes> rdf:type . * ;
       rdf:type [ <Lesser> ] ?
    )
}

<LesserOrEqual> CLOSED {
    (  $<LesserOrEqual_tes> rdf:type . * ;
       rdf:type [ <LesserOrEqual> ] ?
    )
}

<Letterer> CLOSED {
    (  $<Letterer_tes> rdf:type . * ;
       rdf:type [ <Letterer> ] ?
    )
}

<Library> CLOSED {
    (  $<Library_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <Library> ] ?
    )
}

<LibrarySystem> CLOSED {
    (  $<LibrarySystem_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <LibrarySystem> ] ?
    )
}

<License> CLOSED {
    (  $<License_tes> rdf:type . * ;
       rdf:type [ <License> ] ?
    )
}

<LifestyleModification>  (
    CLOSED {
       (  $<LifestyleModification_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ?
          ) ;
          rdf:type [ <LifestyleModification> ] ?
       )
    } OR @<Diet> OR @<PhysicalActivity>
)

<Ligament> CLOSED {
    (  $<Ligament_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ?
       ) ;
       rdf:type [ <Ligament> ] ?
    )
}

<LikeAction> CLOSED {
    (  $<LikeAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ?
       ) ;
       rdf:type [ <LikeAction> ] ?
    )
}

<LimitedAvailability> CLOSED {
    (  $<LimitedAvailability_tes> rdf:type . * ;
       rdf:type [ <LimitedAvailability> ] ?
    )
}

<LimitedByGuaranteeCharity> CLOSED {
    (  $<LimitedByGuaranteeCharity_tes> rdf:type . * ;
       rdf:type [ <LimitedByGuaranteeCharity> ] ?
    )
}

<Line> CLOSED {
    (  $<Line_tes> rdf:type . * ;
       rdf:type [ <Line> ] ?
    )
}

<LinkRelationship> CLOSED {
    (  $<LinkRelationship_tes> rdf:type . * ;
       rdf:type [ <LinkRelationship> ] ?
    )
}

<LinkRole> CLOSED {
    (  $<LinkRole_tes> (  &<Role_tes> ;
          rdf:type [ <Role> ] ? ;
          <inLanguage> @linkml:String * ;
          <linkRelationship> @<Text> *
       ) ;
       rdf:type [ <LinkRole> ] ?
    )
}

<LiquorStore> CLOSED {
    (  $<LiquorStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <LiquorStore> ] ?
    )
}

<ListenAction> CLOSED {
    (  $<ListenAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <ListenAction> ] ?
    )
}

<ListItem>  (
    CLOSED {
       (  $<ListItem_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <position> @linkml:String * ;
             <item> @<Thing> * ;
             <nextItem> @<ListItem> * ;
             <previousItem> @<ListItem> *
          ) ;
          rdf:type [ <ListItem> ] ?
       )
    } OR @<HowToDirection> OR @<HowToItem> OR @<HowToTip>
)

<ListPrice> CLOSED {
    (  $<ListPrice_tes> rdf:type . * ;
       rdf:type [ <ListPrice> ] ?
    )
}

<LiteraryEvent> CLOSED {
    (  $<LiteraryEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <LiteraryEvent> ] ?
    )
}

<LiveAlbum> CLOSED {
    (  $<LiveAlbum_tes> rdf:type . * ;
       rdf:type [ <LiveAlbum> ] ?
    )
}

<LiveBlogPosting> CLOSED {
    (  $<LiveBlogPosting_tes> (  &<BlogPosting_tes> ;
          rdf:type [ <BlogPosting> ] ? ;
          <coverageEndTime> @<DateTime> * ;
          <coverageStartTime> @<DateTime> * ;
          <liveBlogUpdate> @<BlogPosting> *
       ) ;
       rdf:type [ <LiveBlogPosting> ] ?
    )
}

<LiveBlogUpdate> CLOSED {
    (  $<LiveBlogUpdate_tes> rdf:type . * ;
       rdf:type [ <LiveBlogUpdate> ] ?
    )
}

<LivingWithHealthAspect> CLOSED {
    (  $<LivingWithHealthAspect_tes> rdf:type . * ;
       rdf:type [ <LivingWithHealthAspect> ] ?
    )
}

<LoanMortgageMandateAmount> CLOSED {
    (  $<LoanMortgageMandateAmount_tes> rdf:type . * ;
       rdf:type [ <LoanMortgageMandateAmount> ] ?
    )
}

<LoanOrCredit>  (
    CLOSED {
       (  $<LoanOrCredit_tes> (  &<FinancialProduct_tes> ;
             rdf:type [ <FinancialProduct> ] ? ;
             <loanTerm> @<QuantitativeValue> * ;
             <amount> @linkml:String * ;
             <currency> @<Text> * ;
             <gracePeriod> @<Duration> * ;
             <loanRepaymentForm> @<RepaymentSpecification> * ;
             <loanType> @linkml:String * ;
             <recourseLoan> @<Boolean> * ;
             <renegotiableLoan> @<Boolean> * ;
             <requiredCollateral> @linkml:String *
          ) ;
          rdf:type [ <LoanOrCredit> ] ?
       )
    } OR @<MortgageLoan>
)

<LoanPaymentAmount> CLOSED {
    (  $<LoanPaymentAmount_tes> rdf:type . * ;
       rdf:type [ <LoanPaymentAmount> ] ?
    )
}

<LoanPaymentFrequency> CLOSED {
    (  $<LoanPaymentFrequency_tes> rdf:type . * ;
       rdf:type [ <LoanPaymentFrequency> ] ?
    )
}

<LoanRepaymentForm> CLOSED {
    (  $<LoanRepaymentForm_tes> rdf:type . * ;
       rdf:type [ <LoanRepaymentForm> ] ?
    )
}

<LoanType> CLOSED {
    (  $<LoanType_tes> rdf:type . * ;
       rdf:type [ <LoanType> ] ?
    )
}

<LocalBusiness>  (
    CLOSED {
       (  $<LocalBusiness_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ? ;
             &<Organization_tes> ;
             rdf:type [ <Organization> ] ? ;
             <branchOf> @<Organization> * ;
             <currenciesAccepted> @<Text> * ;
             <openingHours> @<Text> * ;
             <paymentAccepted> @<Text> * ;
             <priceRange> @<Text> * ;
             <actionableFeedbackPolicy> @linkml:String * ;
             <areaServed> @linkml:String * ;
             <correctionsPolicy> @linkml:String * ;
             <diversityStaffingReport> @linkml:String * ;
             <duns> @<Text> * ;
             <funder> @linkml:String * ;
             <leiCode> @<Text> * ;
             <location> @linkml:String * ;
             <memberOf> @linkml:String * ;
             <ownershipFundingInfo> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <sponsor> @linkml:String * ;
             <taxID> @<Text> * ;
             <unnamedSourcesPolicy> @linkml:String * ;
             <alumni> @<Person> * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <brand> @linkml:String * ;
             <contactPoint> @<ContactPoint> * ;
             <contactPoints> @<ContactPoint> * ;
             <department> @<Organization> * ;
             <dissolutionDate> @<Date> * ;
             <diversityPolicy> @linkml:String * ;
             <email> @<Text> * ;
             <employee> @<Person> * ;
             <employees> @<Person> * ;
             <ethicsPolicy> @linkml:String * ;
             <founder> @<Person> * ;
             <founders> @<Person> * ;
             <foundingDate> @<Date> * ;
             <foundingLocation> @<Place> * ;
             <hasCredential> @<EducationalOccupationalCredential> * ;
             <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
             <hasOfferCatalog> @<OfferCatalog> * ;
             <hasPOS> @<Place> * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <knowsAbout> @linkml:String * ;
             <knowsLanguage> @linkml:String * ;
             <legalName> @<Text> * ;
             <makesOffer> @<Offer> * ;
             <member> @linkml:String * ;
             <members> @linkml:String * ;
             <naics> @<Text> * ;
             <nonprofitStatus> @<NonprofitType> * ;
             <numberOfEmployees> @<QuantitativeValue> * ;
             <owns> @linkml:String * ;
             <parentOrganization> @<Organization> * ;
             <seeks> @<Demand> * ;
             <serviceArea> @linkml:String * ;
             <subOrganization> @<Organization> * ;
             <vatID> @<Text> *
          ) ;
          rdf:type [ <LocalBusiness> ] ?
       )
    } OR @<AnimalShelter> OR @<ArchiveOrganization> OR @<AutomotiveBusiness> OR @<ChildCare> OR @<DryCleaningOrLaundry> OR
    @<EmergencyService> OR @<EmploymentAgency> OR @<EntertainmentBusiness> OR @<FinancialService> OR @<FoodEstablishment> OR
    @<GovernmentOffice> OR @<HealthAndBeautyBusiness> OR @<HomeAndConstructionBusiness> OR @<InternetCafe> OR @<LegalService> OR
    @<Library> OR @<LodgingBusiness> OR @<MedicalBusiness> OR @<ProfessionalService> OR @<RadioStation> OR @<RealEstateAgent> OR
    @<RecyclingCenter> OR @<SelfStorage> OR @<ShoppingCenter> OR @<SportsActivityLocation> OR @<Store> OR @<TelevisionStation> OR
    @<TouristInformationCenter> OR @<TravelAgency>
)

<LocationCreated> CLOSED {
    (  $<LocationCreated_tes> rdf:type . * ;
       rdf:type [ <LocationCreated> ] ?
    )
}

<LocationFeatureSpecification> CLOSED {
    (  $<LocationFeatureSpecification_tes> (  &<PropertyValue_tes> ;
          rdf:type [ <PropertyValue> ] ? ;
          <hoursAvailable> @<OpeningHoursSpecification> * ;
          <validFrom> @linkml:String * ;
          <validThrough> @linkml:String *
       ) ;
       rdf:type [ <LocationFeatureSpecification> ] ?
    )
}

<LockerDelivery> CLOSED {
    (  $<LockerDelivery_tes> rdf:type . * ;
       rdf:type [ <LockerDelivery> ] ?
    )
}

<Locksmith> CLOSED {
    (  $<Locksmith_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <Locksmith> ] ?
    )
}

<LodgingBusiness>  (
    CLOSED {
       (  $<LodgingBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ? ;
             <audience> @<Audience> * ;
             <availableLanguage> @linkml:String * ;
             <checkinTime> @linkml:String * ;
             <checkoutTime> @linkml:String * ;
             <numberOfRooms> @linkml:String * ;
             <petsAllowed> @linkml:String * ;
             <starRating> @<Rating> *
          ) ;
          rdf:type [ <LodgingBusiness> ] ?
       )
    } OR @<BedAndBreakfast> OR @<Hostel> OR @<Hotel> OR @<Motel> OR @<Resort>
)

<LodgingReservation> CLOSED {
    (  $<LodgingReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <checkinTime> @linkml:String * ;
          <checkoutTime> @linkml:String * ;
          <lodgingUnitDescription> @<Text> * ;
          <lodgingUnitType> @linkml:String * ;
          <numAdults> @linkml:String * ;
          <numChildren> @linkml:String *
       ) ;
       rdf:type [ <LodgingReservation> ] ?
    )
}

<LodgingUnitDescription> CLOSED {
    (  $<LodgingUnitDescription_tes> rdf:type . * ;
       rdf:type [ <LodgingUnitDescription> ] ?
    )
}

<LodgingUnitType> CLOSED {
    (  $<LodgingUnitType_tes> rdf:type . * ;
       rdf:type [ <LodgingUnitType> ] ?
    )
}

<Longitude> CLOSED {
    (  $<Longitude_tes> rdf:type . * ;
       rdf:type [ <Longitude> ] ?
    )
}

<Longitudinal> CLOSED {
    (  $<Longitudinal_tes> rdf:type . * ;
       rdf:type [ <Longitudinal> ] ?
    )
}

<LoseAction> CLOSED {
    (  $<LoseAction_tes> (  &<AchieveAction_tes> ;
          rdf:type [ <AchieveAction> ] ? ;
          <winner> @<Person> *
       ) ;
       rdf:type [ <LoseAction> ] ?
    )
}

<LowCalorieDiet> CLOSED {
    (  $<LowCalorieDiet_tes> rdf:type . * ;
       rdf:type [ <LowCalorieDiet> ] ?
    )
}

<LowFatDiet> CLOSED {
    (  $<LowFatDiet_tes> rdf:type . * ;
       rdf:type [ <LowFatDiet> ] ?
    )
}

<LowLactoseDiet> CLOSED {
    (  $<LowLactoseDiet_tes> rdf:type . * ;
       rdf:type [ <LowLactoseDiet> ] ?
    )
}

<LowPrice> CLOSED {
    (  $<LowPrice_tes> rdf:type . * ;
       rdf:type [ <LowPrice> ] ?
    )
}

<LowSaltDiet> CLOSED {
    (  $<LowSaltDiet_tes> rdf:type . * ;
       rdf:type [ <LowSaltDiet> ] ?
    )
}

<Lung> CLOSED {
    (  $<Lung_tes> rdf:type . * ;
       rdf:type [ <Lung> ] ?
    )
}

<LymphaticVessel> CLOSED {
    (  $<LymphaticVessel_tes> (  &<Vessel_tes> ;
          rdf:type [ <Vessel> ] ? ;
          <originatesFrom> @<Vessel> * ;
          <regionDrained> @linkml:String * ;
          <runsTo> @<Vessel> *
       ) ;
       rdf:type [ <LymphaticVessel> ] ?
    )
}

<Lyricist> CLOSED {
    (  $<Lyricist_tes> rdf:type . * ;
       rdf:type [ <Lyricist> ] ?
    )
}

<Lyrics> CLOSED {
    (  $<Lyrics_tes> rdf:type . * ;
       rdf:type [ <Lyrics> ] ?
    )
}

<MainContentOfPage> CLOSED {
    (  $<MainContentOfPage_tes> rdf:type . * ;
       rdf:type [ <MainContentOfPage> ] ?
    )
}

<MainEntityOfPage> CLOSED {
    (  $<MainEntityOfPage_tes> rdf:type . * ;
       rdf:type [ <MainEntityOfPage> ] ?
    )
}

<Maintainer> CLOSED {
    (  $<Maintainer_tes> rdf:type . * ;
       rdf:type [ <Maintainer> ] ?
    )
}

<MakesOffer> CLOSED {
    (  $<MakesOffer_tes> rdf:type . * ;
       rdf:type [ <MakesOffer> ] ?
    )
}

<Male> CLOSED {
    (  $<Male_tes> rdf:type . * ;
       rdf:type [ <Male> ] ?
    )
}

<Manufacturer> CLOSED {
    (  $<Manufacturer_tes> rdf:type . * ;
       rdf:type [ <Manufacturer> ] ?
    )
}

<Manuscript> CLOSED {
    (  $<Manuscript_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Manuscript> ] ?
    )
}

<Map> CLOSED {
    (  $<Map_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <mapType> @<MapCategoryType> *
       ) ;
       rdf:type [ <Map> ] ?
    )
}

<Map> CLOSED {
    (  $<Map_tes> rdf:type . * ;
       rdf:type [ <Map> ] ?
    )
}

<MapCategoryType> CLOSED {
    (  $<MapCategoryType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MapCategoryType> ] ?
    )
}

<Maps> CLOSED {
    (  $<Maps_tes> rdf:type . * ;
       rdf:type [ <Maps> ] ?
    )
}

<MapType> CLOSED {
    (  $<MapType_tes> rdf:type . * ;
       rdf:type [ <MapType> ] ?
    )
}

<MarginOfError> CLOSED {
    (  $<MarginOfError_tes> rdf:type . * ;
       rdf:type [ <MarginOfError> ] ?
    )
}

<MarryAction> CLOSED {
    (  $<MarryAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ?
       ) ;
       rdf:type [ <MarryAction> ] ?
    )
}

<Mass> CLOSED {
    (  $<Mass_tes> (  &<Quantity_tes> ;
          rdf:type [ <Quantity> ] ?
       ) ;
       rdf:type [ <Mass> ] ?
    )
}

<MaterialExtent> CLOSED {
    (  $<MaterialExtent_tes> rdf:type . * ;
       rdf:type [ <MaterialExtent> ] ?
    )
}

<MathExpression> CLOSED {
    (  $<MathExpression_tes> rdf:type . * ;
       rdf:type [ <MathExpression> ] ?
    )
}

<MathSolver> CLOSED {
    (  $<MathSolver_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <mathExpression> @linkml:String *
       ) ;
       rdf:type [ <MathSolver> ] ?
    )
}

<MaximumAttendeeCapacity> CLOSED {
    (  $<MaximumAttendeeCapacity_tes> rdf:type . * ;
       rdf:type [ <MaximumAttendeeCapacity> ] ?
    )
}

<MaximumDoseSchedule> CLOSED {
    (  $<MaximumDoseSchedule_tes> (  &<DoseSchedule_tes> ;
          rdf:type [ <DoseSchedule> ] ?
       ) ;
       rdf:type [ <MaximumDoseSchedule> ] ?
    )
}

<MaximumEnrollment> CLOSED {
    (  $<MaximumEnrollment_tes> rdf:type . * ;
       rdf:type [ <MaximumEnrollment> ] ?
    )
}

<MaximumIntake> CLOSED {
    (  $<MaximumIntake_tes> rdf:type . * ;
       rdf:type [ <MaximumIntake> ] ?
    )
}

<MaximumPhysicalAttendeeCapacity> CLOSED {
    (  $<MaximumPhysicalAttendeeCapacity_tes> rdf:type . * ;
       rdf:type [ <MaximumPhysicalAttendeeCapacity> ] ?
    )
}

<MaximumVirtualAttendeeCapacity> CLOSED {
    (  $<MaximumVirtualAttendeeCapacity_tes> rdf:type . * ;
       rdf:type [ <MaximumVirtualAttendeeCapacity> ] ?
    )
}

<MaxPrice> CLOSED {
    (  $<MaxPrice_tes> rdf:type . * ;
       rdf:type [ <MaxPrice> ] ?
    )
}

<MaxValue> CLOSED {
    (  $<MaxValue_tes> rdf:type . * ;
       rdf:type [ <MaxValue> ] ?
    )
}

<MayTreatHealthAspect> CLOSED {
    (  $<MayTreatHealthAspect_tes> rdf:type . * ;
       rdf:type [ <MayTreatHealthAspect> ] ?
    )
}

<MealService> CLOSED {
    (  $<MealService_tes> rdf:type . * ;
       rdf:type [ <MealService> ] ?
    )
}

<MeasuredProperty> CLOSED {
    (  $<MeasuredProperty_tes> rdf:type . * ;
       rdf:type [ <MeasuredProperty> ] ?
    )
}

<MeasuredValue> CLOSED {
    (  $<MeasuredValue_tes> rdf:type . * ;
       rdf:type [ <MeasuredValue> ] ?
    )
}

<MeasurementTechnique> CLOSED {
    (  $<MeasurementTechnique_tes> rdf:type . * ;
       rdf:type [ <MeasurementTechnique> ] ?
    )
}

<MeasurementTypeEnumeration>  (
    CLOSED {
       (  $<MeasurementTypeEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <MeasurementTypeEnumeration> ] ?
       )
    } OR @<BodyMeasurementTypeEnumeration> OR @<WearableMeasurementTypeEnumeration>
)

<MechanismOfAction> CLOSED {
    (  $<MechanismOfAction_tes> rdf:type . * ;
       rdf:type [ <MechanismOfAction> ] ?
    )
}

<MediaAuthenticityCategory> CLOSED {
    (  $<MediaAuthenticityCategory_tes> rdf:type . * ;
       rdf:type [ <MediaAuthenticityCategory> ] ?
    )
}

<MediaGallery>  (
    CLOSED {
       (  $<MediaGallery_tes> (  &<CollectionPage_tes> ;
             rdf:type [ <CollectionPage> ] ?
          ) ;
          rdf:type [ <MediaGallery> ] ?
       )
    } OR @<ImageGallery> OR @<VideoGallery>
)

<MediaItemAppearance> CLOSED {
    (  $<MediaItemAppearance_tes> rdf:type . * ;
       rdf:type [ <MediaItemAppearance> ] ?
    )
}

<MediaManipulationRatingEnumeration> CLOSED {
    (  $<MediaManipulationRatingEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MediaManipulationRatingEnumeration> ] ?
    )
}

<Median> CLOSED {
    (  $<Median_tes> rdf:type . * ;
       rdf:type [ <Median> ] ?
    )
}

<MediaObject>  (
    CLOSED {
       (  $<MediaObject_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <duration> @<Duration> * ;
             <sha256> @<Text> * ;
             <associatedArticle> @<NewsArticle> * ;
             <bitrate> @<Text> * ;
             <contentSize> @<Text> * ;
             <contentUrl> @<URL> * ;
             <embedUrl> @<URL> * ;
             <encodesCreativeWork> @<CreativeWork> * ;
             <endTime> @linkml:String * ;
             <height> @linkml:String * ;
             <ineligibleRegion> @linkml:String * ;
             <playerType> @<Text> * ;
             <productionCompany> @<Organization> * ;
             <regionsAllowed> @<Place> * ;
             <requiresSubscription> @linkml:String * ;
             <startTime> @linkml:String * ;
             <uploadDate> @<Date> * ;
             <width> @linkml:String *
          ) ;
          rdf:type [ <MediaObject> ] ?
       )
    } OR @<3DModel> OR @<AudioObject> OR @<DataDownload> OR @<ImageObject> OR @<LegislationObject> OR @<MusicVideoObject> OR
    @<VideoObject>
)

<MediaReview> CLOSED {
    (  $<MediaReview_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ? ;
          <originalMediaContextDescription> @<Text> * ;
          <mediaAuthenticityCategory> @<MediaManipulationRatingEnumeration> * ;
          <originalMediaLink> @linkml:String *
       ) ;
       rdf:type [ <MediaReview> ] ?
    )
}

<MediaReviewItem> CLOSED {
    (  $<MediaReviewItem_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <mediaItemAppearance> @<MediaObject> *
       ) ;
       rdf:type [ <MediaReviewItem> ] ?
    )
}

<MediaSubscription> CLOSED {
    (  $<MediaSubscription_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <authenticator> @<Organization> * ;
          <expectsAcceptanceOf> @<Offer> *
       ) ;
       rdf:type [ <MediaSubscription> ] ?
    )
}

<MedicalAudience> CLOSED {
    (  $<MedicalAudience_tes> (  &<Audience_tes> ;
          rdf:type [ <Audience> ] ? ;
          &<PeopleAudience_tes> ;
          rdf:type [ <PeopleAudience> ] ? ;
          <healthCondition> @<MedicalCondition> * ;
          <requiredGender> @<Text> * ;
          <requiredMaxAge> @<Integer> * ;
          <requiredMinAge> @<Integer> * ;
          <suggestedAge> @<QuantitativeValue> * ;
          <suggestedGender> @linkml:String * ;
          <suggestedMaxAge> @<Number> * ;
          <suggestedMeasurement> @<QuantitativeValue> * ;
          <suggestedMinAge> @<Number> *
       ) ;
       rdf:type [ <MedicalAudience> ] ?
    )
}

<MedicalAudience> CLOSED {
    (  $<MedicalAudience_tes> rdf:type . * ;
       rdf:type [ <MedicalAudience> ] ?
    )
}

<MedicalAudienceType> CLOSED {
    (  $<MedicalAudienceType_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalAudienceType> ] ?
    )
}

<MedicalBusiness>  (
    CLOSED {
       (  $<MedicalBusiness_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <MedicalBusiness> ] ?
       )
    } OR @<CommunityHealth> OR @<Dentist> OR @<Dermatology> OR @<DietNutrition> OR @<Emergency> OR @<Geriatric> OR @<Gynecologic>
    OR @<MedicalClinic> OR @<Midwifery> OR @<Nursing> OR @<Obstetric> OR @<Oncologic> OR @<Optician> OR @<Optometric> OR
    @<Otolaryngologic> OR @<Pediatric> OR @<Pharmacy> OR @<Physician> OR @<Physiotherapy> OR @<PlasticSurgery> OR @<Podiatric> OR
    @<PrimaryCare> OR @<Psychiatric> OR @<PublicHealth>
)

<MedicalCause> CLOSED {
    (  $<MedicalCause_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <causeOf> @<MedicalEntity> *
       ) ;
       rdf:type [ <MedicalCause> ] ?
    )
}

<MedicalClinic>  (
    CLOSED {
       (  $<MedicalClinic_tes> (  &<MedicalBusiness_tes> ;
             rdf:type [ <MedicalBusiness> ] ? ;
             &<MedicalOrganization_tes> ;
             rdf:type [ <MedicalOrganization> ] ? ;
             <availableService> @linkml:String * ;
             <medicalSpecialty> @<MedicalSpecialty> * ;
             <healthPlanNetworkId> @<Text> * ;
             <isAcceptingNewPatients> @<Boolean> *
          ) ;
          rdf:type [ <MedicalClinic> ] ?
       )
    } OR @<CovidTestingFacility>
)

<MedicalCode> CLOSED {
    (  $<MedicalCode_tes> (  &<CategoryCode_tes> ;
          rdf:type [ <CategoryCode> ] ? ;
          &<MedicalIntangible_tes> ;
          rdf:type [ <MedicalIntangible> ] ? ;
          <codingSystem> @<Text> * ;
          <code> @<MedicalCode> * ;
          <guideline> @<MedicalGuideline> * ;
          <legalStatus> @linkml:String * ;
          <medicineSystem> @<MedicineSystem> * ;
          <recognizingAuthority> @<Organization> * ;
          <relevantSpecialty> @<MedicalSpecialty> * ;
          <study> @<MedicalStudy> *
       ) ;
       rdf:type [ <MedicalCode> ] ?
    )
}

<MedicalCondition>  (
    CLOSED {
       (  $<MedicalCondition_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <associatedAnatomy> @linkml:String * ;
             <differentialDiagnosis> @<DDxElement> * ;
             <drug> @<Drug> * ;
             <epidemiology> @<Text> * ;
             <expectedPrognosis> @<Text> * ;
             <naturalProgression> @<Text> * ;
             <pathophysiology> @<Text> * ;
             <possibleComplication> @<Text> * ;
             <possibleTreatment> @<MedicalTherapy> * ;
             <primaryPrevention> @<MedicalTherapy> * ;
             <riskFactor> @<MedicalRiskFactor> * ;
             <secondaryPrevention> @<MedicalTherapy> * ;
             <signOrSymptom> @<MedicalSignOrSymptom> * ;
             <stage> @<MedicalConditionStage> * ;
             <status> @linkml:String * ;
             <typicalTest> @<MedicalTest> *
          ) ;
          rdf:type [ <MedicalCondition> ] ?
       )
    } OR @<InfectiousDisease> OR @<MedicalSignOrSymptom>
)

<MedicalConditionStage> CLOSED {
    (  $<MedicalConditionStage_tes> (  &<MedicalIntangible_tes> ;
          rdf:type [ <MedicalIntangible> ] ? ;
          <stageAsNumber> @<Number> * ;
          <subStageSuffix> @<Text> *
       ) ;
       rdf:type [ <MedicalConditionStage> ] ?
    )
}

<MedicalContraindication> CLOSED {
    (  $<MedicalContraindication_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ?
       ) ;
       rdf:type [ <MedicalContraindication> ] ?
    )
}

<MedicalDevice> CLOSED {
    (  $<MedicalDevice_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <adverseOutcome> @<MedicalEntity> * ;
          <contraindication> @linkml:String * ;
          <postOp> @<Text> * ;
          <preOp> @<Text> * ;
          <procedure> @<Text> * ;
          <seriousAdverseOutcome> @<MedicalEntity> *
       ) ;
       rdf:type [ <MedicalDevice> ] ?
    )
}

<MedicalDevicePurpose> CLOSED {
    (  $<MedicalDevicePurpose_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalDevicePurpose> ] ?
    )
}

<MedicalEntity>  (
    CLOSED {
       (  $<MedicalEntity_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <code> @<MedicalCode> * ;
             <guideline> @<MedicalGuideline> * ;
             <legalStatus> @linkml:String * ;
             <medicineSystem> @<MedicineSystem> * ;
             <recognizingAuthority> @<Organization> * ;
             <relevantSpecialty> @<MedicalSpecialty> * ;
             <study> @<MedicalStudy> *
          ) ;
          rdf:type [ <MedicalEntity> ] ?
       )
    } OR @<AnatomicalStructure> OR @<AnatomicalSystem> OR @<DrugClass> OR @<DrugCost> OR @<LifestyleModification> OR
    @<MedicalCause> OR @<MedicalCondition> OR @<MedicalContraindication> OR @<MedicalDevice> OR @<MedicalGuideline> OR
    @<MedicalIndication> OR @<MedicalIntangible> OR @<MedicalProcedure> OR @<MedicalRiskEstimator> OR @<MedicalRiskFactor> OR
    @<MedicalStudy> OR @<MedicalTest> OR @<Substance> OR @<SuperficialAnatomy>
)

<MedicalEnumeration>  (
    CLOSED {
       (  $<MedicalEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <MedicalEnumeration> ] ?
       )
    } OR @<DrugCostCategory> OR @<DrugPregnancyCategory> OR @<DrugPrescriptionStatus> OR @<InfectiousAgentClass> OR
    @<MedicalAudienceType> OR @<MedicalDevicePurpose> OR @<MedicalEvidenceLevel> OR @<MedicalImagingTechnique> OR
    @<MedicalObservationalStudyDesign> OR @<MedicalProcedureType> OR @<MedicalSpecialty> OR @<MedicalStudyStatus> OR
    @<MedicalTrialDesign> OR @<MedicineSystem> OR @<PhysicalExam>
)

<MedicalEvidenceLevel> CLOSED {
    (  $<MedicalEvidenceLevel_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalEvidenceLevel> ] ?
    )
}

<MedicalGuideline>  (
    CLOSED {
       (  $<MedicalGuideline_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <evidenceLevel> @<MedicalEvidenceLevel> * ;
             <evidenceOrigin> @<Text> * ;
             <guidelineDate> @<Date> * ;
             <guidelineSubject> @<MedicalEntity> *
          ) ;
          rdf:type [ <MedicalGuideline> ] ?
       )
    } OR @<MedicalGuidelineContraindication> OR @<MedicalGuidelineRecommendation>
)

<MedicalGuidelineContraindication> CLOSED {
    (  $<MedicalGuidelineContraindication_tes> (  &<MedicalGuideline_tes> ;
          rdf:type [ <MedicalGuideline> ] ?
       ) ;
       rdf:type [ <MedicalGuidelineContraindication> ] ?
    )
}

<MedicalGuidelineRecommendation> CLOSED {
    (  $<MedicalGuidelineRecommendation_tes> (  &<MedicalGuideline_tes> ;
          rdf:type [ <MedicalGuideline> ] ? ;
          <recommendationStrength> @<Text> *
       ) ;
       rdf:type [ <MedicalGuidelineRecommendation> ] ?
    )
}

<MedicalImagingTechnique> CLOSED {
    (  $<MedicalImagingTechnique_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalImagingTechnique> ] ?
    )
}

<MedicalIndication>  (
    CLOSED {
       (  $<MedicalIndication_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ?
          ) ;
          rdf:type [ <MedicalIndication> ] ?
       )
    } OR @<ApprovedIndication> OR @<PreventionIndication> OR @<TreatmentIndication>
)

<MedicalIntangible>  (
    CLOSED {
       (  $<MedicalIntangible_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ?
          ) ;
          rdf:type [ <MedicalIntangible> ] ?
       )
    } OR @<DDxElement> OR @<DoseSchedule> OR @<DrugLegalStatus> OR @<DrugStrength> OR @<MedicalConditionStage>
)

<MedicalObservationalStudy> CLOSED {
    (  $<MedicalObservationalStudy_tes> (  &<MedicalStudy_tes> ;
          rdf:type [ <MedicalStudy> ] ? ;
          <studyDesign> @<MedicalObservationalStudyDesign> *
       ) ;
       rdf:type [ <MedicalObservationalStudy> ] ?
    )
}

<MedicalObservationalStudyDesign> CLOSED {
    (  $<MedicalObservationalStudyDesign_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalObservationalStudyDesign> ] ?
    )
}

<MedicalOrganization>  (
    CLOSED {
       (  $<MedicalOrganization_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ? ;
             <healthPlanNetworkId> @<Text> * ;
             <isAcceptingNewPatients> @<Boolean> * ;
             <medicalSpecialty> @<MedicalSpecialty> *
          ) ;
          rdf:type [ <MedicalOrganization> ] ?
       )
    } OR @<DiagnosticLab> OR @<Hospital> OR @<VeterinaryCare>
)

<MedicalProcedure>  (
    CLOSED {
       (  $<MedicalProcedure_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <bodyLocation> @<Text> * ;
             <followup> @<Text> * ;
             <howPerformed> @<Text> * ;
             <preparation> @linkml:String * ;
             <procedureType> @<MedicalProcedureType> * ;
             <status> @linkml:String *
          ) ;
          rdf:type [ <MedicalProcedure> ] ?
       )
    } OR @<DiagnosticProcedure> OR @<PalliativeProcedure> OR @<SurgicalProcedure> OR @<TherapeuticProcedure>
)

<MedicalProcedureType> CLOSED {
    (  $<MedicalProcedureType_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalProcedureType> ] ?
    )
}

<MedicalResearcher> CLOSED {
    (  $<MedicalResearcher_tes> rdf:type . * ;
       rdf:type [ <MedicalResearcher> ] ?
    )
}

<MedicalRiskCalculator> CLOSED {
    (  $<MedicalRiskCalculator_tes> (  &<MedicalRiskEstimator_tes> ;
          rdf:type [ <MedicalRiskEstimator> ] ?
       ) ;
       rdf:type [ <MedicalRiskCalculator> ] ?
    )
}

<MedicalRiskEstimator>  (
    CLOSED {
       (  $<MedicalRiskEstimator_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <estimatesRiskOf> @<MedicalEntity> * ;
             <includedRiskFactor> @<MedicalRiskFactor> *
          ) ;
          rdf:type [ <MedicalRiskEstimator> ] ?
       )
    } OR @<MedicalRiskCalculator> OR @<MedicalRiskScore>
)

<MedicalRiskFactor> CLOSED {
    (  $<MedicalRiskFactor_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <increasesRiskOf> @<MedicalEntity> *
       ) ;
       rdf:type [ <MedicalRiskFactor> ] ?
    )
}

<MedicalRiskScore> CLOSED {
    (  $<MedicalRiskScore_tes> (  &<MedicalRiskEstimator_tes> ;
          rdf:type [ <MedicalRiskEstimator> ] ? ;
          <algorithm> @<Text> *
       ) ;
       rdf:type [ <MedicalRiskScore> ] ?
    )
}

<MedicalScholarlyArticle> CLOSED {
    (  $<MedicalScholarlyArticle_tes> (  &<ScholarlyArticle_tes> ;
          rdf:type [ <ScholarlyArticle> ] ? ;
          <publicationType> @<Text> *
       ) ;
       rdf:type [ <MedicalScholarlyArticle> ] ?
    )
}

<MedicalSign>  (
    CLOSED {
       (  $<MedicalSign_tes> (  &<MedicalSignOrSymptom_tes> ;
             rdf:type [ <MedicalSignOrSymptom> ] ? ;
             <identifyingExam> @<PhysicalExam> * ;
             <identifyingTest> @<MedicalTest> *
          ) ;
          rdf:type [ <MedicalSign> ] ?
       )
    } OR @<VitalSign>
)

<MedicalSignOrSymptom>  (
    CLOSED {
       (  $<MedicalSignOrSymptom_tes> (  &<MedicalCondition_tes> ;
             rdf:type [ <MedicalCondition> ] ?
          ) ;
          rdf:type [ <MedicalSignOrSymptom> ] ?
       )
    } OR @<MedicalSign> OR @<MedicalSymptom>
)

<MedicalSpecialty> CLOSED {
    (  $<MedicalSpecialty_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ? ;
          &<Specialty_tes> ;
          rdf:type [ <Specialty> ] ?
       ) ;
       rdf:type [ <MedicalSpecialty> ] ?
    )
}

<MedicalSpecialty> CLOSED {
    (  $<MedicalSpecialty_tes> rdf:type . * ;
       rdf:type [ <MedicalSpecialty> ] ?
    )
}

<MedicalStudy>  (
    CLOSED {
       (  $<MedicalStudy_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <sponsor> @linkml:String * ;
             <healthCondition> @<MedicalCondition> * ;
             <status> @linkml:String * ;
             <studyLocation> @<AdministrativeArea> * ;
             <studySubject> @<MedicalEntity> *
          ) ;
          rdf:type [ <MedicalStudy> ] ?
       )
    } OR @<MedicalObservationalStudy> OR @<MedicalTrial>
)

<MedicalStudyStatus> CLOSED {
    (  $<MedicalStudyStatus_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalStudyStatus> ] ?
    )
}

<MedicalSymptom> CLOSED {
    (  $<MedicalSymptom_tes> (  &<MedicalSignOrSymptom_tes> ;
          rdf:type [ <MedicalSignOrSymptom> ] ?
       ) ;
       rdf:type [ <MedicalSymptom> ] ?
    )
}

<MedicalTest>  (
    CLOSED {
       (  $<MedicalTest_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <affectedBy> @<Drug> * ;
             <normalRange> @linkml:String * ;
             <signDetected> @<MedicalSign> * ;
             <usedToDiagnose> @<MedicalCondition> * ;
             <usesDevice> @<MedicalDevice> *
          ) ;
          rdf:type [ <MedicalTest> ] ?
       )
    } OR @<BloodTest> OR @<ImagingTest> OR @<MedicalTestPanel> OR @<PathologyTest>
)

<MedicalTestPanel> CLOSED {
    (  $<MedicalTestPanel_tes> (  &<MedicalTest_tes> ;
          rdf:type [ <MedicalTest> ] ? ;
          <subTest> @<MedicalTest> *
       ) ;
       rdf:type [ <MedicalTestPanel> ] ?
    )
}

<MedicalTherapy>  (
    CLOSED {
       (  $<MedicalTherapy_tes> (  &<TherapeuticProcedure_tes> ;
             rdf:type [ <TherapeuticProcedure> ] ? ;
             <contraindication> @linkml:String * ;
             <duplicateTherapy> @<MedicalTherapy> * ;
             <seriousAdverseOutcome> @<MedicalEntity> *
          ) ;
          rdf:type [ <MedicalTherapy> ] ?
       )
    } OR @<OccupationalTherapy> OR @<PhysicalTherapy> OR @<RadiationTherapy> OR @<RespiratoryTherapy>
)

<MedicalTrial> CLOSED {
    (  $<MedicalTrial_tes> (  &<MedicalStudy_tes> ;
          rdf:type [ <MedicalStudy> ] ? ;
          <trialDesign> @<MedicalTrialDesign> *
       ) ;
       rdf:type [ <MedicalTrial> ] ?
    )
}

<MedicalTrialDesign> CLOSED {
    (  $<MedicalTrialDesign_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicalTrialDesign> ] ?
    )
}

<MedicalWebPage> CLOSED {
    (  $<MedicalWebPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ? ;
          <aspect> @<Text> * ;
          <medicalAudience> @linkml:String *
       ) ;
       rdf:type [ <MedicalWebPage> ] ?
    )
}

<MedicineSystem> CLOSED {
    (  $<MedicineSystem_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ?
       ) ;
       rdf:type [ <MedicineSystem> ] ?
    )
}

<MedicineSystem> CLOSED {
    (  $<MedicineSystem_tes> rdf:type . * ;
       rdf:type [ <MedicineSystem> ] ?
    )
}

<MeetingRoom> CLOSED {
    (  $<MeetingRoom_tes> (  &<Room_tes> ;
          rdf:type [ <Room> ] ?
       ) ;
       rdf:type [ <MeetingRoom> ] ?
    )
}

<MeetsEmissionStandard> CLOSED {
    (  $<MeetsEmissionStandard_tes> rdf:type . * ;
       rdf:type [ <MeetsEmissionStandard> ] ?
    )
}

<Member> CLOSED {
    (  $<Member_tes> rdf:type . * ;
       rdf:type [ <Member> ] ?
    )
}

<Members> CLOSED {
    (  $<Members_tes> rdf:type . * ;
       rdf:type [ <Members> ] ?
    )
}

<MembershipNumber> CLOSED {
    (  $<MembershipNumber_tes> rdf:type . * ;
       rdf:type [ <MembershipNumber> ] ?
    )
}

<MembershipPointsEarned> CLOSED {
    (  $<MembershipPointsEarned_tes> rdf:type . * ;
       rdf:type [ <MembershipPointsEarned> ] ?
    )
}

<MemoryRequirements> CLOSED {
    (  $<MemoryRequirements_tes> rdf:type . * ;
       rdf:type [ <MemoryRequirements> ] ?
    )
}

<MensClothingStore> CLOSED {
    (  $<MensClothingStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <MensClothingStore> ] ?
    )
}

<Mentions> CLOSED {
    (  $<Mentions_tes> rdf:type . * ;
       rdf:type [ <Mentions> ] ?
    )
}

<Menu> CLOSED {
    (  $<Menu_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <hasMenuItem> @<MenuItem> * ;
          <hasMenuSection> @<MenuSection> *
       ) ;
       rdf:type [ <Menu> ] ?
    )
}

<Menu> CLOSED {
    (  $<Menu_tes> rdf:type . * ;
       rdf:type [ <Menu> ] ?
    )
}

<MenuAddOn> CLOSED {
    (  $<MenuAddOn_tes> rdf:type . * ;
       rdf:type [ <MenuAddOn> ] ?
    )
}

<MenuItem> CLOSED {
    (  $<MenuItem_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <menuAddOn> @linkml:String * ;
          <nutrition> @<NutritionInformation> * ;
          <offers> @linkml:String * ;
          <suitableForDiet> @<RestrictedDiet> *
       ) ;
       rdf:type [ <MenuItem> ] ?
    )
}

<MenuSection> CLOSED {
    (  $<MenuSection_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <hasMenuItem> @<MenuItem> * ;
          <hasMenuSection> @<MenuSection> *
       ) ;
       rdf:type [ <MenuSection> ] ?
    )
}

<Merchant> CLOSED {
    (  $<Merchant_tes> rdf:type . * ;
       rdf:type [ <Merchant> ] ?
    )
}

<MerchantReturnDays> CLOSED {
    (  $<MerchantReturnDays_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnDays> ] ?
    )
}

<MerchantReturnEnumeration> CLOSED {
    (  $<MerchantReturnEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MerchantReturnEnumeration> ] ?
    )
}

<MerchantReturnFiniteReturnWindow> CLOSED {
    (  $<MerchantReturnFiniteReturnWindow_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnFiniteReturnWindow> ] ?
    )
}

<MerchantReturnLink> CLOSED {
    (  $<MerchantReturnLink_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnLink> ] ?
    )
}

<MerchantReturnNotPermitted> CLOSED {
    (  $<MerchantReturnNotPermitted_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnNotPermitted> ] ?
    )
}

<MerchantReturnPolicy> CLOSED {
    (  $<MerchantReturnPolicy_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <additionalProperty> @<PropertyValue> * ;
          <customerRemorseReturnFees> @<ReturnFeesEnumeration> * ;
          <customerRemorseReturnLabelSource> @<ReturnLabelSourceEnumeration> * ;
          <customerRemorseReturnShippingFeesAmount> @<MonetaryAmount> * ;
          <inStoreReturnsOffered> @<Boolean> * ;
          <itemCondition> @<OfferItemCondition> * ;
          <itemDefectReturnFees> @<ReturnFeesEnumeration> * ;
          <itemDefectReturnLabelSource> @<ReturnLabelSourceEnumeration> * ;
          <itemDefectReturnShippingFeesAmount> @<MonetaryAmount> * ;
          <merchantReturnDays> @linkml:String * ;
          <merchantReturnLink> @<URL> * ;
          <refundType> @<RefundTypeEnumeration> * ;
          <restockingFee> @linkml:String * ;
          <returnFees> @<ReturnFeesEnumeration> * ;
          <returnLabelSource> @<ReturnLabelSourceEnumeration> * ;
          <returnMethod> @<ReturnMethodEnumeration> * ;
          <returnPolicyCategory> @<MerchantReturnEnumeration> * ;
          <returnPolicyCountry> @linkml:String * ;
          <returnPolicySeasonalOverride> @<MerchantReturnPolicySeasonalOverride> * ;
          <returnShippingFeesAmount> @<MonetaryAmount> *
       ) ;
       rdf:type [ <MerchantReturnPolicy> ] ?
    )
}

<MerchantReturnPolicySeasonalOverride> CLOSED {
    (  $<MerchantReturnPolicySeasonalOverride_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <endDate> @linkml:String * ;
          <merchantReturnDays> @linkml:String * ;
          <returnPolicyCategory> @<MerchantReturnEnumeration> * ;
          <startDate> @linkml:String *
       ) ;
       rdf:type [ <MerchantReturnPolicySeasonalOverride> ] ?
    )
}

<MerchantReturnUnlimitedWindow> CLOSED {
    (  $<MerchantReturnUnlimitedWindow_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnUnlimitedWindow> ] ?
    )
}

<MerchantReturnUnspecified> CLOSED {
    (  $<MerchantReturnUnspecified_tes> rdf:type . * ;
       rdf:type [ <MerchantReturnUnspecified> ] ?
    )
}

<Message>  (
    CLOSED {
       (  $<Message_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <bccRecipient> @linkml:String * ;
             <ccRecipient> @linkml:String * ;
             <recipient> @linkml:String * ;
             <sender> @linkml:String * ;
             <toRecipient> @linkml:String * ;
             <dateRead> @linkml:String * ;
             <dateReceived> @<DateTime> * ;
             <dateSent> @<DateTime> * ;
             <messageAttachment> @<CreativeWork> *
          ) ;
          rdf:type [ <Message> ] ?
       )
    } OR @<EmailMessage>
)

<MessageAttachment> CLOSED {
    (  $<MessageAttachment_tes> rdf:type . * ;
       rdf:type [ <MessageAttachment> ] ?
    )
}

<MiddleSchool> CLOSED {
    (  $<MiddleSchool_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <MiddleSchool> ] ?
    )
}

<Midwifery> CLOSED {
    (  $<Midwifery_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Midwifery> ] ?
    )
}

<MileageFromOdometer> CLOSED {
    (  $<MileageFromOdometer_tes> rdf:type . * ;
       rdf:type [ <MileageFromOdometer> ] ?
    )
}

<MinimumAdvertisedPrice> CLOSED {
    (  $<MinimumAdvertisedPrice_tes> rdf:type . * ;
       rdf:type [ <MinimumAdvertisedPrice> ] ?
    )
}

<MinimumPaymentDue> CLOSED {
    (  $<MinimumPaymentDue_tes> rdf:type . * ;
       rdf:type [ <MinimumPaymentDue> ] ?
    )
}

<MinPrice> CLOSED {
    (  $<MinPrice_tes> rdf:type . * ;
       rdf:type [ <MinPrice> ] ?
    )
}

<MinValue> CLOSED {
    (  $<MinValue_tes> rdf:type . * ;
       rdf:type [ <MinValue> ] ?
    )
}

<MisconceptionsHealthAspect> CLOSED {
    (  $<MisconceptionsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <MisconceptionsHealthAspect> ] ?
    )
}

<MixedEventAttendanceMode> CLOSED {
    (  $<MixedEventAttendanceMode_tes> rdf:type . * ;
       rdf:type [ <MixedEventAttendanceMode> ] ?
    )
}

<MixtapeAlbum> CLOSED {
    (  $<MixtapeAlbum_tes> rdf:type . * ;
       rdf:type [ <MixtapeAlbum> ] ?
    )
}

<MobileApplication> CLOSED {
    (  $<MobileApplication_tes> (  &<SoftwareApplication_tes> ;
          rdf:type [ <SoftwareApplication> ] ? ;
          <carrierRequirements> @<Text> *
       ) ;
       rdf:type [ <MobileApplication> ] ?
    )
}

<MobilePhoneStore> CLOSED {
    (  $<MobilePhoneStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <MobilePhoneStore> ] ?
    )
}

<Model> CLOSED {
    (  $<Model_tes> rdf:type . * ;
       rdf:type [ <Model> ] ?
    )
}

<ModelDate> CLOSED {
    (  $<ModelDate_tes> rdf:type . * ;
       rdf:type [ <ModelDate> ] ?
    )
}

<ModifiedTime> CLOSED {
    (  $<ModifiedTime_tes> rdf:type . * ;
       rdf:type [ <ModifiedTime> ] ?
    )
}

<MolecularEntity> CLOSED {
    (  $<MolecularEntity_tes> (  &<BioChemEntity_tes> ;
          rdf:type [ <BioChemEntity> ] ? ;
          <inChI> @<Text> * ;
          <inChIKey> @<Text> * ;
          <smiles> @<Text> * ;
          <chemicalRole> @<DefinedTerm> * ;
          <iupacName> @<Text> * ;
          <molecularFormula> @<Text> * ;
          <molecularWeight> @linkml:String * ;
          <monoisotopicMolecularWeight> @linkml:String * ;
          <potentialUse> @<DefinedTerm> *
       ) ;
       rdf:type [ <MolecularEntity> ] ?
    )
}

<MolecularFormula> CLOSED {
    (  $<MolecularFormula_tes> rdf:type . * ;
       rdf:type [ <MolecularFormula> ] ?
    )
}

<MolecularWeight> CLOSED {
    (  $<MolecularWeight_tes> rdf:type . * ;
       rdf:type [ <MolecularWeight> ] ?
    )
}

<Monday> CLOSED {
    (  $<Monday_tes> rdf:type . * ;
       rdf:type [ <Monday> ] ?
    )
}

<MonetaryAmount> CLOSED {
    (  $<MonetaryAmount_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <currency> @<Text> * ;
          <maxValue> @<Number> * ;
          <minValue> @<Number> * ;
          <validFrom> @linkml:String * ;
          <validThrough> @linkml:String * ;
          <value> @linkml:String *
       ) ;
       rdf:type [ <MonetaryAmount> ] ?
    )
}

<MonetaryAmountDistribution> CLOSED {
    (  $<MonetaryAmountDistribution_tes> (  &<QuantitativeValueDistribution_tes> ;
          rdf:type [ <QuantitativeValueDistribution> ] ? ;
          <currency> @<Text> *
       ) ;
       rdf:type [ <MonetaryAmountDistribution> ] ?
    )
}

<MonetaryGrant> CLOSED {
    (  $<MonetaryGrant_tes> (  &<Grant_tes> ;
          rdf:type [ <Grant> ] ? ;
          <funder> @linkml:String * ;
          <amount> @linkml:String *
       ) ;
       rdf:type [ <MonetaryGrant> ] ?
    )
}

<MoneyTransfer> CLOSED {
    (  $<MoneyTransfer_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <amount> @linkml:String * ;
          <beneficiaryBank> @linkml:String *
       ) ;
       rdf:type [ <MoneyTransfer> ] ?
    )
}

<MonoisotopicMolecularWeight> CLOSED {
    (  $<MonoisotopicMolecularWeight_tes> rdf:type . * ;
       rdf:type [ <MonoisotopicMolecularWeight> ] ?
    )
}

<MonthlyMinimumRepaymentAmount> CLOSED {
    (  $<MonthlyMinimumRepaymentAmount_tes> rdf:type . * ;
       rdf:type [ <MonthlyMinimumRepaymentAmount> ] ?
    )
}

<MonthsOfExperience> CLOSED {
    (  $<MonthsOfExperience_tes> rdf:type . * ;
       rdf:type [ <MonthsOfExperience> ] ?
    )
}

<MortgageLoan> CLOSED {
    (  $<MortgageLoan_tes> (  &<LoanOrCredit_tes> ;
          rdf:type [ <LoanOrCredit> ] ? ;
          <domiciledMortgage> @<Boolean> * ;
          <loanMortgageMandateAmount> @<MonetaryAmount> *
       ) ;
       rdf:type [ <MortgageLoan> ] ?
    )
}

<Mosque> CLOSED {
    (  $<Mosque_tes> (  &<PlaceOfWorship_tes> ;
          rdf:type [ <PlaceOfWorship> ] ?
       ) ;
       rdf:type [ <Mosque> ] ?
    )
}

<Motel> CLOSED {
    (  $<Motel_tes> (  &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ?
       ) ;
       rdf:type [ <Motel> ] ?
    )
}

<Motorcycle> CLOSED {
    (  $<Motorcycle_tes> (  &<Vehicle_tes> ;
          rdf:type [ <Vehicle> ] ?
       ) ;
       rdf:type [ <Motorcycle> ] ?
    )
}

<MotorcycleDealer> CLOSED {
    (  $<MotorcycleDealer_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <MotorcycleDealer> ] ?
    )
}

<MotorcycleRepair> CLOSED {
    (  $<MotorcycleRepair_tes> (  &<AutomotiveBusiness_tes> ;
          rdf:type [ <AutomotiveBusiness> ] ?
       ) ;
       rdf:type [ <MotorcycleRepair> ] ?
    )
}

<MotorizedBicycle> CLOSED {
    (  $<MotorizedBicycle_tes> (  &<Vehicle_tes> ;
          rdf:type [ <Vehicle> ] ?
       ) ;
       rdf:type [ <MotorizedBicycle> ] ?
    )
}

<Mountain> CLOSED {
    (  $<Mountain_tes> (  &<Landform_tes> ;
          rdf:type [ <Landform> ] ?
       ) ;
       rdf:type [ <Mountain> ] ?
    )
}

<MoveAction>  (
    CLOSED {
       (  $<MoveAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <fromLocation> @<Place> * ;
             <toLocation> @<Place> *
          ) ;
          rdf:type [ <MoveAction> ] ?
       )
    } OR @<ArriveAction> OR @<DepartAction> OR @<TravelAction>
)

<Movie> CLOSED {
    (  $<Movie_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <actor> @<Person> * ;
          <duration> @<Duration> * ;
          <titleEIDR> @linkml:String * ;
          <actors> @<Person> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <musicBy> @linkml:String * ;
          <productionCompany> @<Organization> * ;
          <subtitleLanguage> @linkml:String * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <Movie> ] ?
    )
}

<MovieClip> CLOSED {
    (  $<MovieClip_tes> (  &<Clip_tes> ;
          rdf:type [ <Clip> ] ?
       ) ;
       rdf:type [ <MovieClip> ] ?
    )
}

<MovieRentalStore> CLOSED {
    (  $<MovieRentalStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <MovieRentalStore> ] ?
    )
}

<MovieSeries> CLOSED {
    (  $<MovieSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ? ;
          <actor> @<Person> * ;
          <actors> @<Person> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <musicBy> @linkml:String * ;
          <productionCompany> @<Organization> * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <MovieSeries> ] ?
    )
}

<MovieTheater> CLOSED {
    (  $<MovieTheater_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ? ;
          &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ? ;
          <screenCount> @<Number> *
       ) ;
       rdf:type [ <MovieTheater> ] ?
    )
}

<MovingCompany> CLOSED {
    (  $<MovingCompany_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <MovingCompany> ] ?
    )
}

<Mpn> CLOSED {
    (  $<Mpn_tes> rdf:type . * ;
       rdf:type [ <Mpn> ] ?
    )
}

<MRI> CLOSED {
    (  $<MRI_tes> rdf:type . * ;
       rdf:type [ <MRI> ] ?
    )
}

<MSRP> CLOSED {
    (  $<MSRP_tes> rdf:type . * ;
       rdf:type [ <MSRP> ] ?
    )
}

<MulticellularParasite> CLOSED {
    (  $<MulticellularParasite_tes> rdf:type . * ;
       rdf:type [ <MulticellularParasite> ] ?
    )
}

<MultiCenterTrial> CLOSED {
    (  $<MultiCenterTrial_tes> rdf:type . * ;
       rdf:type [ <MultiCenterTrial> ] ?
    )
}

<MultiPlayer> CLOSED {
    (  $<MultiPlayer_tes> rdf:type . * ;
       rdf:type [ <MultiPlayer> ] ?
    )
}

<MultipleValues> CLOSED {
    (  $<MultipleValues_tes> rdf:type . * ;
       rdf:type [ <MultipleValues> ] ?
    )
}

<Muscle> CLOSED {
    (  $<Muscle_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ? ;
          <antagonist> @<Muscle> * ;
          <bloodSupply> @<Vessel> * ;
          <insertion> @<AnatomicalStructure> * ;
          <muscleAction> @<Text> * ;
          <nerve> @<Nerve> *
       ) ;
       rdf:type [ <Muscle> ] ?
    )
}

<MuscleAction> CLOSED {
    (  $<MuscleAction_tes> rdf:type . * ;
       rdf:type [ <MuscleAction> ] ?
    )
}

<Musculoskeletal> CLOSED {
    (  $<Musculoskeletal_tes> rdf:type . * ;
       rdf:type [ <Musculoskeletal> ] ?
    )
}

<MusculoskeletalExam> CLOSED {
    (  $<MusculoskeletalExam_tes> rdf:type . * ;
       rdf:type [ <MusculoskeletalExam> ] ?
    )
}

<Museum> CLOSED {
    (  $<Museum_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Museum> ] ?
    )
}

<MusicAlbum> CLOSED {
    (  $<MusicAlbum_tes> (  &<MusicPlaylist_tes> ;
          rdf:type [ <MusicPlaylist> ] ? ;
          <albumProductionType> @<MusicAlbumProductionType> * ;
          <albumRelease> @<MusicRelease> * ;
          <albumReleaseType> @<MusicAlbumReleaseType> * ;
          <byArtist> @linkml:String *
       ) ;
       rdf:type [ <MusicAlbum> ] ?
    )
}

<MusicAlbumProductionType> CLOSED {
    (  $<MusicAlbumProductionType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MusicAlbumProductionType> ] ?
    )
}

<MusicAlbumReleaseType> CLOSED {
    (  $<MusicAlbumReleaseType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MusicAlbumReleaseType> ] ?
    )
}

<MusicalKey> CLOSED {
    (  $<MusicalKey_tes> rdf:type . * ;
       rdf:type [ <MusicalKey> ] ?
    )
}

<MusicArrangement> CLOSED {
    (  $<MusicArrangement_tes> rdf:type . * ;
       rdf:type [ <MusicArrangement> ] ?
    )
}

<MusicBy> CLOSED {
    (  $<MusicBy_tes> rdf:type . * ;
       rdf:type [ <MusicBy> ] ?
    )
}

<MusicComposition> CLOSED {
    (  $<MusicComposition_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <composer> @linkml:String * ;
          <firstPerformance> @<Event> * ;
          <includedComposition> @<MusicComposition> * ;
          <iswcCode> @<Text> * ;
          <lyricist> @<Person> * ;
          <lyrics> @<CreativeWork> * ;
          <musicArrangement> @<MusicComposition> * ;
          <musicCompositionForm> @<Text> * ;
          <musicalKey> @<Text> * ;
          <recordedAs> @<MusicRecording> *
       ) ;
       rdf:type [ <MusicComposition> ] ?
    )
}

<MusicCompositionForm> CLOSED {
    (  $<MusicCompositionForm_tes> rdf:type . * ;
       rdf:type [ <MusicCompositionForm> ] ?
    )
}

<MusicEvent> CLOSED {
    (  $<MusicEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <MusicEvent> ] ?
    )
}

<MusicGroup> CLOSED {
    (  $<MusicGroup_tes> (  &<PerformingGroup_tes> ;
          rdf:type [ <PerformingGroup> ] ? ;
          <genre> @linkml:String * ;
          <album> @<MusicAlbum> * ;
          <albums> @<MusicAlbum> * ;
          <musicGroupMember> @<Person> * ;
          <track> @linkml:String * ;
          <tracks> @<MusicRecording> *
       ) ;
       rdf:type [ <MusicGroup> ] ?
    )
}

<MusicGroupMember> CLOSED {
    (  $<MusicGroupMember_tes> rdf:type . * ;
       rdf:type [ <MusicGroupMember> ] ?
    )
}

<MusicPlaylist>  (
    CLOSED {
       (  $<MusicPlaylist_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <numTracks> @<Integer> * ;
             <track> @linkml:String * ;
             <tracks> @<MusicRecording> *
          ) ;
          rdf:type [ <MusicPlaylist> ] ?
       )
    } OR @<MusicAlbum> OR @<MusicRelease>
)

<MusicRecording> CLOSED {
    (  $<MusicRecording_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <duration> @<Duration> * ;
          <byArtist> @linkml:String * ;
          <inAlbum> @<MusicAlbum> * ;
          <inPlaylist> @<MusicPlaylist> * ;
          <isrcCode> @<Text> * ;
          <recordingOf> @<MusicComposition> *
       ) ;
       rdf:type [ <MusicRecording> ] ?
    )
}

<MusicRelease> CLOSED {
    (  $<MusicRelease_tes> (  &<MusicPlaylist_tes> ;
          rdf:type [ <MusicPlaylist> ] ? ;
          <duration> @<Duration> * ;
          <catalogNumber> @<Text> * ;
          <creditedTo> @linkml:String * ;
          <musicReleaseFormat> @<MusicReleaseFormatType> * ;
          <recordLabel> @<Organization> * ;
          <releaseOf> @<MusicAlbum> *
       ) ;
       rdf:type [ <MusicRelease> ] ?
    )
}

<MusicReleaseFormat> CLOSED {
    (  $<MusicReleaseFormat_tes> rdf:type . * ;
       rdf:type [ <MusicReleaseFormat> ] ?
    )
}

<MusicReleaseFormatType> CLOSED {
    (  $<MusicReleaseFormatType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <MusicReleaseFormatType> ] ?
    )
}

<MusicStore> CLOSED {
    (  $<MusicStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <MusicStore> ] ?
    )
}

<MusicVenue> CLOSED {
    (  $<MusicVenue_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <MusicVenue> ] ?
    )
}

<MusicVideoObject> CLOSED {
    (  $<MusicVideoObject_tes> (  &<MediaObject_tes> ;
          rdf:type [ <MediaObject> ] ?
       ) ;
       rdf:type [ <MusicVideoObject> ] ?
    )
}

<Naics> CLOSED {
    (  $<Naics_tes> rdf:type . * ;
       rdf:type [ <Naics> ] ?
    )
}

<NailSalon> CLOSED {
    (  $<NailSalon_tes> (  &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <NailSalon> ] ?
    )
}

<NamedPosition> CLOSED {
    (  $<NamedPosition_tes> rdf:type . * ;
       rdf:type [ <NamedPosition> ] ?
    )
}

<Nationality> CLOSED {
    (  $<Nationality_tes> rdf:type . * ;
       rdf:type [ <Nationality> ] ?
    )
}

<NaturalProgression> CLOSED {
    (  $<NaturalProgression_tes> rdf:type . * ;
       rdf:type [ <NaturalProgression> ] ?
    )
}

<Neck> CLOSED {
    (  $<Neck_tes> rdf:type . * ;
       rdf:type [ <Neck> ] ?
    )
}

<NegativeNotes> CLOSED {
    (  $<NegativeNotes_tes> rdf:type . * ;
       rdf:type [ <NegativeNotes> ] ?
    )
}

<Nerve> CLOSED {
    (  $<Nerve_tes> (  &<AnatomicalStructure_tes> ;
          rdf:type [ <AnatomicalStructure> ] ? ;
          <branch> @<AnatomicalStructure> * ;
          <nerveMotor> @<Muscle> * ;
          <sensoryUnit> @linkml:String * ;
          <sourcedFrom> @<BrainStructure> *
       ) ;
       rdf:type [ <Nerve> ] ?
    )
}

<Nerve> CLOSED {
    (  $<Nerve_tes> rdf:type . * ;
       rdf:type [ <Nerve> ] ?
    )
}

<NerveMotor> CLOSED {
    (  $<NerveMotor_tes> rdf:type . * ;
       rdf:type [ <NerveMotor> ] ?
    )
}

<NetWorth> CLOSED {
    (  $<NetWorth_tes> rdf:type . * ;
       rdf:type [ <NetWorth> ] ?
    )
}

<Neuro> CLOSED {
    (  $<Neuro_tes> rdf:type . * ;
       rdf:type [ <Neuro> ] ?
    )
}

<Neurologic> CLOSED {
    (  $<Neurologic_tes> rdf:type . * ;
       rdf:type [ <Neurologic> ] ?
    )
}

<NewCondition> CLOSED {
    (  $<NewCondition_tes> rdf:type . * ;
       rdf:type [ <NewCondition> ] ?
    )
}

<NewsArticle>  (
    CLOSED {
       (  $<NewsArticle_tes> (  &<Article_tes> ;
             rdf:type [ <Article> ] ? ;
             <dateline> @<Text> * ;
             <printColumn> @<Text> * ;
             <printEdition> @<Text> * ;
             <printPage> @<Text> * ;
             <printSection> @<Text> *
          ) ;
          rdf:type [ <NewsArticle> ] ?
       )
    } OR @<AnalysisNewsArticle> OR @<AskPublicNewsArticle> OR @<BackgroundNewsArticle> OR @<OpinionNewsArticle> OR
    @<ReportageNewsArticle> OR @<ReviewNewsArticle>
)

<NewsMediaOrganization> CLOSED {
    (  $<NewsMediaOrganization_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ? ;
          <masthead> @linkml:String * ;
          <missionCoveragePrioritiesPolicy> @linkml:String * ;
          <noBylinesPolicy> @linkml:String * ;
          <verificationFactCheckingPolicy> @linkml:String *
       ) ;
       rdf:type [ <NewsMediaOrganization> ] ?
    )
}

<Newspaper> CLOSED {
    (  $<Newspaper_tes> (  &<Periodical_tes> ;
          rdf:type [ <Periodical> ] ?
       ) ;
       rdf:type [ <Newspaper> ] ?
    )
}

<NewsUpdatesAndGuidelines> CLOSED {
    (  $<NewsUpdatesAndGuidelines_tes> rdf:type . * ;
       rdf:type [ <NewsUpdatesAndGuidelines> ] ?
    )
}

<NextItem> CLOSED {
    (  $<NextItem_tes> rdf:type . * ;
       rdf:type [ <NextItem> ] ?
    )
}

<NGO> CLOSED {
    (  $<NGO_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <NGO> ] ?
    )
}

<NightClub> CLOSED {
    (  $<NightClub_tes> (  &<EntertainmentBusiness_tes> ;
          rdf:type [ <EntertainmentBusiness> ] ?
       ) ;
       rdf:type [ <NightClub> ] ?
    )
}

<NLNonprofitType> CLOSED {
    (  $<NLNonprofitType_tes> (  &<NonprofitType_tes> ;
          rdf:type [ <NonprofitType> ] ?
       ) ;
       rdf:type [ <NLNonprofitType> ] ?
    )
}

<NonEqual> CLOSED {
    (  $<NonEqual_tes> rdf:type . * ;
       rdf:type [ <NonEqual> ] ?
    )
}

<NoninvasiveProcedure> CLOSED {
    (  $<NoninvasiveProcedure_tes> rdf:type . * ;
       rdf:type [ <NoninvasiveProcedure> ] ?
    )
}

<Nonprofit501a> CLOSED {
    (  $<Nonprofit501a_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501a> ] ?
    )
}

<Nonprofit501c1> CLOSED {
    (  $<Nonprofit501c1_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c1> ] ?
    )
}

<Nonprofit501c10> CLOSED {
    (  $<Nonprofit501c10_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c10> ] ?
    )
}

<Nonprofit501c11> CLOSED {
    (  $<Nonprofit501c11_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c11> ] ?
    )
}

<Nonprofit501c12> CLOSED {
    (  $<Nonprofit501c12_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c12> ] ?
    )
}

<Nonprofit501c13> CLOSED {
    (  $<Nonprofit501c13_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c13> ] ?
    )
}

<Nonprofit501c14> CLOSED {
    (  $<Nonprofit501c14_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c14> ] ?
    )
}

<Nonprofit501c15> CLOSED {
    (  $<Nonprofit501c15_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c15> ] ?
    )
}

<Nonprofit501c16> CLOSED {
    (  $<Nonprofit501c16_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c16> ] ?
    )
}

<Nonprofit501c17> CLOSED {
    (  $<Nonprofit501c17_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c17> ] ?
    )
}

<Nonprofit501c18> CLOSED {
    (  $<Nonprofit501c18_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c18> ] ?
    )
}

<Nonprofit501c19> CLOSED {
    (  $<Nonprofit501c19_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c19> ] ?
    )
}

<Nonprofit501c2> CLOSED {
    (  $<Nonprofit501c2_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c2> ] ?
    )
}

<Nonprofit501c20> CLOSED {
    (  $<Nonprofit501c20_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c20> ] ?
    )
}

<Nonprofit501c21> CLOSED {
    (  $<Nonprofit501c21_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c21> ] ?
    )
}

<Nonprofit501c22> CLOSED {
    (  $<Nonprofit501c22_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c22> ] ?
    )
}

<Nonprofit501c23> CLOSED {
    (  $<Nonprofit501c23_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c23> ] ?
    )
}

<Nonprofit501c24> CLOSED {
    (  $<Nonprofit501c24_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c24> ] ?
    )
}

<Nonprofit501c25> CLOSED {
    (  $<Nonprofit501c25_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c25> ] ?
    )
}

<Nonprofit501c26> CLOSED {
    (  $<Nonprofit501c26_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c26> ] ?
    )
}

<Nonprofit501c27> CLOSED {
    (  $<Nonprofit501c27_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c27> ] ?
    )
}

<Nonprofit501c28> CLOSED {
    (  $<Nonprofit501c28_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c28> ] ?
    )
}

<Nonprofit501c3> CLOSED {
    (  $<Nonprofit501c3_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c3> ] ?
    )
}

<Nonprofit501c4> CLOSED {
    (  $<Nonprofit501c4_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c4> ] ?
    )
}

<Nonprofit501c5> CLOSED {
    (  $<Nonprofit501c5_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c5> ] ?
    )
}

<Nonprofit501c6> CLOSED {
    (  $<Nonprofit501c6_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c6> ] ?
    )
}

<Nonprofit501c7> CLOSED {
    (  $<Nonprofit501c7_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c7> ] ?
    )
}

<Nonprofit501c8> CLOSED {
    (  $<Nonprofit501c8_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c8> ] ?
    )
}

<Nonprofit501c9> CLOSED {
    (  $<Nonprofit501c9_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501c9> ] ?
    )
}

<Nonprofit501d> CLOSED {
    (  $<Nonprofit501d_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501d> ] ?
    )
}

<Nonprofit501e> CLOSED {
    (  $<Nonprofit501e_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501e> ] ?
    )
}

<Nonprofit501f> CLOSED {
    (  $<Nonprofit501f_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501f> ] ?
    )
}

<Nonprofit501k> CLOSED {
    (  $<Nonprofit501k_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501k> ] ?
    )
}

<Nonprofit501n> CLOSED {
    (  $<Nonprofit501n_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501n> ] ?
    )
}

<Nonprofit501q> CLOSED {
    (  $<Nonprofit501q_tes> rdf:type . * ;
       rdf:type [ <Nonprofit501q> ] ?
    )
}

<Nonprofit527> CLOSED {
    (  $<Nonprofit527_tes> rdf:type . * ;
       rdf:type [ <Nonprofit527> ] ?
    )
}

<NonprofitANBI> CLOSED {
    (  $<NonprofitANBI_tes> rdf:type . * ;
       rdf:type [ <NonprofitANBI> ] ?
    )
}

<NonprofitSBBI> CLOSED {
    (  $<NonprofitSBBI_tes> rdf:type . * ;
       rdf:type [ <NonprofitSBBI> ] ?
    )
}

<NonprofitStatus> CLOSED {
    (  $<NonprofitStatus_tes> rdf:type . * ;
       rdf:type [ <NonprofitStatus> ] ?
    )
}

<NonprofitType>  (
    CLOSED {
       (  $<NonprofitType_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <NonprofitType> ] ?
       )
    } OR @<NLNonprofitType> OR @<UKNonprofitType> OR @<USNonprofitType>
)

<NonProprietaryName> CLOSED {
    (  $<NonProprietaryName_tes> rdf:type . * ;
       rdf:type [ <NonProprietaryName> ] ?
    )
}

<NormalRange> CLOSED {
    (  $<NormalRange_tes> rdf:type . * ;
       rdf:type [ <NormalRange> ] ?
    )
}

<Nose> CLOSED {
    (  $<Nose_tes> rdf:type . * ;
       rdf:type [ <Nose> ] ?
    )
}

<Notary> CLOSED {
    (  $<Notary_tes> (  &<LegalService_tes> ;
          rdf:type [ <LegalService> ] ?
       ) ;
       rdf:type [ <Notary> ] ?
    )
}

<NoteDigitalDocument> CLOSED {
    (  $<NoteDigitalDocument_tes> (  &<DigitalDocument_tes> ;
          rdf:type [ <DigitalDocument> ] ?
       ) ;
       rdf:type [ <NoteDigitalDocument> ] ?
    )
}

<NotInForce> CLOSED {
    (  $<NotInForce_tes> rdf:type . * ;
       rdf:type [ <NotInForce> ] ?
    )
}

<NotYetRecruiting> CLOSED {
    (  $<NotYetRecruiting_tes> rdf:type . * ;
       rdf:type [ <NotYetRecruiting> ] ?
    )
}

<NumAdults> CLOSED {
    (  $<NumAdults_tes> rdf:type . * ;
       rdf:type [ <NumAdults> ] ?
    )
}

<Number>  (
    CLOSED {
       (  $<Number_tes> rdf:type . * ;
          rdf:type [ <Number> ] ?
       )
    } OR @<Float> OR @<Integer>
)

<NumberedPosition> CLOSED {
    (  $<NumberedPosition_tes> rdf:type . * ;
       rdf:type [ <NumberedPosition> ] ?
    )
}

<NumberOfAccommodationUnits> CLOSED {
    (  $<NumberOfAccommodationUnits_tes> rdf:type . * ;
       rdf:type [ <NumberOfAccommodationUnits> ] ?
    )
}

<NumberOfAirbags> CLOSED {
    (  $<NumberOfAirbags_tes> rdf:type . * ;
       rdf:type [ <NumberOfAirbags> ] ?
    )
}

<NumberOfAvailableAccommodationUnits> CLOSED {
    (  $<NumberOfAvailableAccommodationUnits_tes> rdf:type . * ;
       rdf:type [ <NumberOfAvailableAccommodationUnits> ] ?
    )
}

<NumberOfAxles> CLOSED {
    (  $<NumberOfAxles_tes> rdf:type . * ;
       rdf:type [ <NumberOfAxles> ] ?
    )
}

<NumberOfBathroomsTotal> CLOSED {
    (  $<NumberOfBathroomsTotal_tes> rdf:type . * ;
       rdf:type [ <NumberOfBathroomsTotal> ] ?
    )
}

<NumberOfBedrooms> CLOSED {
    (  $<NumberOfBedrooms_tes> rdf:type . * ;
       rdf:type [ <NumberOfBedrooms> ] ?
    )
}

<NumberOfBeds> CLOSED {
    (  $<NumberOfBeds_tes> rdf:type . * ;
       rdf:type [ <NumberOfBeds> ] ?
    )
}

<NumberOfCredits> CLOSED {
    (  $<NumberOfCredits_tes> rdf:type . * ;
       rdf:type [ <NumberOfCredits> ] ?
    )
}

<NumberOfDoors> CLOSED {
    (  $<NumberOfDoors_tes> rdf:type . * ;
       rdf:type [ <NumberOfDoors> ] ?
    )
}

<NumberOfEmployees> CLOSED {
    (  $<NumberOfEmployees_tes> rdf:type . * ;
       rdf:type [ <NumberOfEmployees> ] ?
    )
}

<NumberOfEpisodes> CLOSED {
    (  $<NumberOfEpisodes_tes> rdf:type . * ;
       rdf:type [ <NumberOfEpisodes> ] ?
    )
}

<NumberOfForwardGears> CLOSED {
    (  $<NumberOfForwardGears_tes> rdf:type . * ;
       rdf:type [ <NumberOfForwardGears> ] ?
    )
}

<NumberOfFullBathrooms> CLOSED {
    (  $<NumberOfFullBathrooms_tes> rdf:type . * ;
       rdf:type [ <NumberOfFullBathrooms> ] ?
    )
}

<NumberOfItems> CLOSED {
    (  $<NumberOfItems_tes> rdf:type . * ;
       rdf:type [ <NumberOfItems> ] ?
    )
}

<NumberOfLoanPayments> CLOSED {
    (  $<NumberOfLoanPayments_tes> rdf:type . * ;
       rdf:type [ <NumberOfLoanPayments> ] ?
    )
}

<NumberOfPages> CLOSED {
    (  $<NumberOfPages_tes> rdf:type . * ;
       rdf:type [ <NumberOfPages> ] ?
    )
}

<NumberOfPartialBathrooms> CLOSED {
    (  $<NumberOfPartialBathrooms_tes> rdf:type . * ;
       rdf:type [ <NumberOfPartialBathrooms> ] ?
    )
}

<NumberOfPlayers> CLOSED {
    (  $<NumberOfPlayers_tes> rdf:type . * ;
       rdf:type [ <NumberOfPlayers> ] ?
    )
}

<NumberOfPreviousOwners> CLOSED {
    (  $<NumberOfPreviousOwners_tes> rdf:type . * ;
       rdf:type [ <NumberOfPreviousOwners> ] ?
    )
}

<NumberOfRooms> CLOSED {
    (  $<NumberOfRooms_tes> rdf:type . * ;
       rdf:type [ <NumberOfRooms> ] ?
    )
}

<NumberOfSeasons> CLOSED {
    (  $<NumberOfSeasons_tes> rdf:type . * ;
       rdf:type [ <NumberOfSeasons> ] ?
    )
}

<NumChildren> CLOSED {
    (  $<NumChildren_tes> rdf:type . * ;
       rdf:type [ <NumChildren> ] ?
    )
}

<NumConstraints> CLOSED {
    (  $<NumConstraints_tes> rdf:type . * ;
       rdf:type [ <NumConstraints> ] ?
    )
}

<NumTracks> CLOSED {
    (  $<NumTracks_tes> rdf:type . * ;
       rdf:type [ <NumTracks> ] ?
    )
}

<Nursing> CLOSED {
    (  $<Nursing_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Nursing> ] ?
    )
}

<Nutrition> CLOSED {
    (  $<Nutrition_tes> rdf:type . * ;
       rdf:type [ <Nutrition> ] ?
    )
}

<NutritionInformation> CLOSED {
    (  $<NutritionInformation_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <calories> @<Energy> * ;
          <carbohydrateContent> @<Mass> * ;
          <cholesterolContent> @<Mass> * ;
          <fatContent> @<Mass> * ;
          <fiberContent> @<Mass> * ;
          <proteinContent> @<Mass> * ;
          <saturatedFatContent> @<Mass> * ;
          <servingSize> @<Text> * ;
          <sodiumContent> @<Mass> * ;
          <sugarContent> @<Mass> * ;
          <transFatContent> @<Mass> * ;
          <unsaturatedFatContent> @<Mass> *
       ) ;
       rdf:type [ <NutritionInformation> ] ?
    )
}

<Observation> CLOSED {
    (  $<Observation_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <marginOfError> @<QuantitativeValue> * ;
          <measuredProperty> @<Property> * ;
          <measuredValue> @<DataType> * ;
          <observationDate> @<DateTime> * ;
          <observedNode> @<StatisticalPopulation> *
       ) ;
       rdf:type [ <Observation> ] ?
    )
}

<Observational> CLOSED {
    (  $<Observational_tes> rdf:type . * ;
       rdf:type [ <Observational> ] ?
    )
}

<ObservationDate> CLOSED {
    (  $<ObservationDate_tes> rdf:type . * ;
       rdf:type [ <ObservationDate> ] ?
    )
}

<ObservedNode> CLOSED {
    (  $<ObservedNode_tes> rdf:type . * ;
       rdf:type [ <ObservedNode> ] ?
    )
}

<Obstetric> CLOSED {
    (  $<Obstetric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Obstetric> ] ?
    )
}

<Occupancy> CLOSED {
    (  $<Occupancy_tes> rdf:type . * ;
       rdf:type [ <Occupancy> ] ?
    )
}

<Occupation> CLOSED {
    (  $<Occupation_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <educationRequirements> @linkml:String * ;
          <estimatedSalary> @linkml:String * ;
          <experienceRequirements> @linkml:String * ;
          <occupationLocation> @<AdministrativeArea> * ;
          <occupationalCategory> @linkml:String * ;
          <qualifications> @linkml:String * ;
          <responsibilities> @<Text> * ;
          <skills> @linkml:String *
       ) ;
       rdf:type [ <Occupation> ] ?
    )
}

<OccupationalActivity> CLOSED {
    (  $<OccupationalActivity_tes> rdf:type . * ;
       rdf:type [ <OccupationalActivity> ] ?
    )
}

<OccupationalCategory> CLOSED {
    (  $<OccupationalCategory_tes> rdf:type . * ;
       rdf:type [ <OccupationalCategory> ] ?
    )
}

<OccupationalCredentialAwarded> CLOSED {
    (  $<OccupationalCredentialAwarded_tes> rdf:type . * ;
       rdf:type [ <OccupationalCredentialAwarded> ] ?
    )
}

<OccupationalExperienceRequirements> CLOSED {
    (  $<OccupationalExperienceRequirements_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <monthsOfExperience> @<Number> *
       ) ;
       rdf:type [ <OccupationalExperienceRequirements> ] ?
    )
}

<OccupationalTherapy> CLOSED {
    (  $<OccupationalTherapy_tes> (  &<MedicalTherapy_tes> ;
          rdf:type [ <MedicalTherapy> ] ?
       ) ;
       rdf:type [ <OccupationalTherapy> ] ?
    )
}

<OccupationLocation> CLOSED {
    (  $<OccupationLocation_tes> rdf:type . * ;
       rdf:type [ <OccupationLocation> ] ?
    )
}

<OceanBodyOfWater> CLOSED {
    (  $<OceanBodyOfWater_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <OceanBodyOfWater> ] ?
    )
}

<Offer>  (
    CLOSED {
       (  $<Offer_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <areaServed> @linkml:String * ;
             <availableAtOrFrom> @<Place> * ;
             <category> @linkml:String * ;
             <eligibleRegion> @linkml:String * ;
             <gtin> @<Text> * ;
             <gtin12> @<Text> * ;
             <gtin13> @<Text> * ;
             <gtin14> @<Text> * ;
             <gtin8> @<Text> * ;
             <seller> @linkml:String * ;
             <serialNumber> @<Text> * ;
             <sku> @<Text> * ;
             <acceptedPaymentMethod> @linkml:String * ;
             <addOn> @<Offer> * ;
             <advanceBookingRequirement> @<QuantitativeValue> * ;
             <aggregateRating> @<AggregateRating> * ;
             <availability> @<ItemAvailability> * ;
             <availabilityEnds> @linkml:String * ;
             <availabilityStarts> @linkml:String * ;
             <availableDeliveryMethod> @<DeliveryMethod> * ;
             <businessFunction> @<BusinessFunction> * ;
             <deliveryLeadTime> @<QuantitativeValue> * ;
             <eligibleCustomerType> @<BusinessEntityType> * ;
             <eligibleDuration> @<QuantitativeValue> * ;
             <eligibleQuantity> @<QuantitativeValue> * ;
             <eligibleTransactionVolume> @<PriceSpecification> * ;
             <hasMeasurement> @<QuantitativeValue> * ;
             <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
             <includesObject> @<TypeAndQuantityNode> * ;
             <ineligibleRegion> @linkml:String * ;
             <inventoryLevel> @<QuantitativeValue> * ;
             <itemCondition> @<OfferItemCondition> * ;
             <itemOffered> @linkml:String * ;
             <leaseLength> @linkml:String * ;
             <mpn> @<Text> * ;
             <offeredBy> @linkml:String * ;
             <price> @linkml:String * ;
             <priceCurrency> @<Text> * ;
             <priceSpecification> @<PriceSpecification> * ;
             <priceValidUntil> @<Date> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <shippingDetails> @<OfferShippingDetails> * ;
             <validFrom> @linkml:String * ;
             <validThrough> @linkml:String * ;
             <warranty> @<WarrantyPromise> *
          ) ;
          rdf:type [ <Offer> ] ?
       )
    } OR @<AggregateOffer> OR @<OfferForLease> OR @<OfferForPurchase>
)

<OfferCatalog> CLOSED {
    (  $<OfferCatalog_tes> (  &<ItemList_tes> ;
          rdf:type [ <ItemList> ] ?
       ) ;
       rdf:type [ <OfferCatalog> ] ?
    )
}

<OfferCount> CLOSED {
    (  $<OfferCount_tes> rdf:type . * ;
       rdf:type [ <OfferCount> ] ?
    )
}

<OfferedBy> CLOSED {
    (  $<OfferedBy_tes> rdf:type . * ;
       rdf:type [ <OfferedBy> ] ?
    )
}

<OfferForLease> CLOSED {
    (  $<OfferForLease_tes> (  &<Offer_tes> ;
          rdf:type [ <Offer> ] ?
       ) ;
       rdf:type [ <OfferForLease> ] ?
    )
}

<OfferForPurchase> CLOSED {
    (  $<OfferForPurchase_tes> (  &<Offer_tes> ;
          rdf:type [ <Offer> ] ?
       ) ;
       rdf:type [ <OfferForPurchase> ] ?
    )
}

<OfferItemCondition> CLOSED {
    (  $<OfferItemCondition_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <OfferItemCondition> ] ?
    )
}

<Offers> CLOSED {
    (  $<Offers_tes> rdf:type . * ;
       rdf:type [ <Offers> ] ?
    )
}

<OfferShippingDetails> CLOSED {
    (  $<OfferShippingDetails_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <deliveryTime> @<ShippingDeliveryTime> * ;
          <doesNotShip> @<Boolean> * ;
          <shippingDestination> @<DefinedRegion> * ;
          <shippingLabel> @<Text> * ;
          <shippingRate> @<MonetaryAmount> * ;
          <shippingSettingsLink> @<URL> * ;
          <transitTimeLabel> @<Text> *
       ) ;
       rdf:type [ <OfferShippingDetails> ] ?
    )
}

<OffersPrescriptionByMail> CLOSED {
    (  $<OffersPrescriptionByMail_tes> rdf:type . * ;
       rdf:type [ <OffersPrescriptionByMail> ] ?
    )
}

<OfficeEquipmentStore> CLOSED {
    (  $<OfficeEquipmentStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <OfficeEquipmentStore> ] ?
    )
}

<OfficialLegalValue> CLOSED {
    (  $<OfficialLegalValue_tes> rdf:type . * ;
       rdf:type [ <OfficialLegalValue> ] ?
    )
}

<OfflineEventAttendanceMode> CLOSED {
    (  $<OfflineEventAttendanceMode_tes> rdf:type . * ;
       rdf:type [ <OfflineEventAttendanceMode> ] ?
    )
}

<OfflinePermanently> CLOSED {
    (  $<OfflinePermanently_tes> rdf:type . * ;
       rdf:type [ <OfflinePermanently> ] ?
    )
}

<OfflineTemporarily> CLOSED {
    (  $<OfflineTemporarily_tes> rdf:type . * ;
       rdf:type [ <OfflineTemporarily> ] ?
    )
}

<Oncologic> CLOSED {
    (  $<Oncologic_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Oncologic> ] ?
    )
}

<OnDemandEvent> CLOSED {
    (  $<OnDemandEvent_tes> (  &<PublicationEvent_tes> ;
          rdf:type [ <PublicationEvent> ] ?
       ) ;
       rdf:type [ <OnDemandEvent> ] ?
    )
}

<OneTimePayments> CLOSED {
    (  $<OneTimePayments_tes> rdf:type . * ;
       rdf:type [ <OneTimePayments> ] ?
    )
}

<Online> CLOSED {
    (  $<Online_tes> rdf:type . * ;
       rdf:type [ <Online> ] ?
    )
}

<OnlineEventAttendanceMode> CLOSED {
    (  $<OnlineEventAttendanceMode_tes> rdf:type . * ;
       rdf:type [ <OnlineEventAttendanceMode> ] ?
    )
}

<OnlineFull> CLOSED {
    (  $<OnlineFull_tes> rdf:type . * ;
       rdf:type [ <OnlineFull> ] ?
    )
}

<OnlineOnly> CLOSED {
    (  $<OnlineOnly_tes> rdf:type . * ;
       rdf:type [ <OnlineOnly> ] ?
    )
}

<OnSitePickup> CLOSED {
    (  $<OnSitePickup_tes> rdf:type . * ;
       rdf:type [ <OnSitePickup> ] ?
    )
}

<OpeningHours> CLOSED {
    (  $<OpeningHours_tes> rdf:type . * ;
       rdf:type [ <OpeningHours> ] ?
    )
}

<OpeningHoursSpecification> CLOSED {
    (  $<OpeningHoursSpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <closes> @<Time> * ;
          <dayOfWeek> @<DayOfWeek> * ;
          <opens> @<Time> * ;
          <validFrom> @linkml:String * ;
          <validThrough> @linkml:String *
       ) ;
       rdf:type [ <OpeningHoursSpecification> ] ?
    )
}

<OpeningHoursSpecification> CLOSED {
    (  $<OpeningHoursSpecification_tes> rdf:type . * ;
       rdf:type [ <OpeningHoursSpecification> ] ?
    )
}

<Opens> CLOSED {
    (  $<Opens_tes> rdf:type . * ;
       rdf:type [ <Opens> ] ?
    )
}

<OpenTrial> CLOSED {
    (  $<OpenTrial_tes> rdf:type . * ;
       rdf:type [ <OpenTrial> ] ?
    )
}

<OperatingSystem> CLOSED {
    (  $<OperatingSystem_tes> rdf:type . * ;
       rdf:type [ <OperatingSystem> ] ?
    )
}

<OpinionNewsArticle> CLOSED {
    (  $<OpinionNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ?
       ) ;
       rdf:type [ <OpinionNewsArticle> ] ?
    )
}

<Optician> CLOSED {
    (  $<Optician_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Optician> ] ?
    )
}

<Optometric> CLOSED {
    (  $<Optometric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Optometric> ] ?
    )
}

<Order> CLOSED {
    (  $<Order_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <confirmationNumber> @<Text> * ;
          <orderNumber> @<Text> * ;
          <seller> @linkml:String * ;
          <acceptedOffer> @<Offer> * ;
          <billingAddress> @<PostalAddress> * ;
          <broker> @linkml:String * ;
          <customer> @linkml:String * ;
          <discount> @linkml:String * ;
          <discountCode> @<Text> * ;
          <discountCurrency> @<Text> * ;
          <isGift> @<Boolean> * ;
          <merchant> @linkml:String * ;
          <orderDate> @linkml:String * ;
          <orderDelivery> @<ParcelDelivery> * ;
          <orderStatus> @<OrderStatus> * ;
          <orderedItem> @linkml:String * ;
          <partOfInvoice> @<Invoice> * ;
          <paymentDue> @<DateTime> * ;
          <paymentDueDate> @linkml:String * ;
          <paymentMethod> @<PaymentMethod> * ;
          <paymentMethodId> @<Text> * ;
          <paymentUrl> @<URL> *
       ) ;
       rdf:type [ <Order> ] ?
    )
}

<OrderAction> CLOSED {
    (  $<OrderAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <deliveryMethod> @<DeliveryMethod> *
       ) ;
       rdf:type [ <OrderAction> ] ?
    )
}

<OrderCancelled> CLOSED {
    (  $<OrderCancelled_tes> rdf:type . * ;
       rdf:type [ <OrderCancelled> ] ?
    )
}

<OrderDate> CLOSED {
    (  $<OrderDate_tes> rdf:type . * ;
       rdf:type [ <OrderDate> ] ?
    )
}

<OrderDelivered> CLOSED {
    (  $<OrderDelivered_tes> rdf:type . * ;
       rdf:type [ <OrderDelivered> ] ?
    )
}

<OrderDelivery> CLOSED {
    (  $<OrderDelivery_tes> rdf:type . * ;
       rdf:type [ <OrderDelivery> ] ?
    )
}

<OrderedItem> CLOSED {
    (  $<OrderedItem_tes> rdf:type . * ;
       rdf:type [ <OrderedItem> ] ?
    )
}

<OrderInTransit> CLOSED {
    (  $<OrderInTransit_tes> rdf:type . * ;
       rdf:type [ <OrderInTransit> ] ?
    )
}

<OrderItem> CLOSED {
    (  $<OrderItem_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <orderDelivery> @<ParcelDelivery> * ;
          <orderItemNumber> @<Text> * ;
          <orderItemStatus> @<OrderStatus> * ;
          <orderQuantity> @<Number> * ;
          <orderedItem> @linkml:String *
       ) ;
       rdf:type [ <OrderItem> ] ?
    )
}

<OrderItemNumber> CLOSED {
    (  $<OrderItemNumber_tes> rdf:type . * ;
       rdf:type [ <OrderItemNumber> ] ?
    )
}

<OrderItemStatus> CLOSED {
    (  $<OrderItemStatus_tes> rdf:type . * ;
       rdf:type [ <OrderItemStatus> ] ?
    )
}

<OrderPaymentDue> CLOSED {
    (  $<OrderPaymentDue_tes> rdf:type . * ;
       rdf:type [ <OrderPaymentDue> ] ?
    )
}

<OrderPickupAvailable> CLOSED {
    (  $<OrderPickupAvailable_tes> rdf:type . * ;
       rdf:type [ <OrderPickupAvailable> ] ?
    )
}

<OrderProblem> CLOSED {
    (  $<OrderProblem_tes> rdf:type . * ;
       rdf:type [ <OrderProblem> ] ?
    )
}

<OrderProcessing> CLOSED {
    (  $<OrderProcessing_tes> rdf:type . * ;
       rdf:type [ <OrderProcessing> ] ?
    )
}

<OrderQuantity> CLOSED {
    (  $<OrderQuantity_tes> rdf:type . * ;
       rdf:type [ <OrderQuantity> ] ?
    )
}

<OrderReturned> CLOSED {
    (  $<OrderReturned_tes> rdf:type . * ;
       rdf:type [ <OrderReturned> ] ?
    )
}

<OrderStatus> CLOSED {
    (  $<OrderStatus_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <OrderStatus> ] ?
    )
}

<OrderStatus> CLOSED {
    (  $<OrderStatus_tes> rdf:type . * ;
       rdf:type [ <OrderStatus> ] ?
    )
}

<Organization>  (
    CLOSED {
       (  $<Organization_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <actionableFeedbackPolicy> @linkml:String * ;
             <areaServed> @linkml:String * ;
             <correctionsPolicy> @linkml:String * ;
             <diversityStaffingReport> @linkml:String * ;
             <duns> @<Text> * ;
             <funder> @linkml:String * ;
             <globalLocationNumber> @<Text> * ;
             <leiCode> @<Text> * ;
             <location> @linkml:String * ;
             <logo> @linkml:String * ;
             <memberOf> @linkml:String * ;
             <ownershipFundingInfo> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <sponsor> @linkml:String * ;
             <taxID> @<Text> * ;
             <unnamedSourcesPolicy> @linkml:String * ;
             <address> @linkml:String * ;
             <aggregateRating> @<AggregateRating> * ;
             <alumni> @<Person> * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <brand> @linkml:String * ;
             <contactPoint> @<ContactPoint> * ;
             <contactPoints> @<ContactPoint> * ;
             <department> @<Organization> * ;
             <dissolutionDate> @<Date> * ;
             <diversityPolicy> @linkml:String * ;
             <email> @<Text> * ;
             <employee> @<Person> * ;
             <employees> @<Person> * ;
             <ethicsPolicy> @linkml:String * ;
             <event> @<Event> * ;
             <events> @<Event> * ;
             <faxNumber> @<Text> * ;
             <founder> @<Person> * ;
             <founders> @<Person> * ;
             <foundingDate> @<Date> * ;
             <foundingLocation> @<Place> * ;
             <hasCredential> @<EducationalOccupationalCredential> * ;
             <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
             <hasOfferCatalog> @<OfferCatalog> * ;
             <hasPOS> @<Place> * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <isicV4> @<Text> * ;
             <knowsAbout> @linkml:String * ;
             <knowsLanguage> @linkml:String * ;
             <legalName> @<Text> * ;
             <makesOffer> @<Offer> * ;
             <member> @linkml:String * ;
             <members> @linkml:String * ;
             <naics> @<Text> * ;
             <nonprofitStatus> @<NonprofitType> * ;
             <numberOfEmployees> @<QuantitativeValue> * ;
             <owns> @linkml:String * ;
             <parentOrganization> @<Organization> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <seeks> @<Demand> * ;
             <serviceArea> @linkml:String * ;
             <slogan> @<Text> * ;
             <subOrganization> @<Organization> * ;
             <telephone> @<Text> * ;
             <vatID> @<Text> *
          ) ;
          rdf:type [ <Organization> ] ?
       )
    } OR @<Airline> OR @<Consortium> OR @<Corporation> OR @<FundingScheme> OR @<GovernmentOrganization> OR @<LibrarySystem> OR
    @<MedicalOrganization> OR @<NGO> OR @<NewsMediaOrganization> OR @<PerformingGroup> OR @<Project> OR @<ResearchOrganization> OR
    @<SportsOrganization> OR @<WorkersUnion>
)

<OrganizationRole>  (
    CLOSED {
       (  $<OrganizationRole_tes> (  &<Role_tes> ;
             rdf:type [ <Role> ] ? ;
             <numberedPosition> @<Number> *
          ) ;
          rdf:type [ <OrganizationRole> ] ?
       )
    } OR @<EmployeeRole>
)

<OrganizeAction>  (
    CLOSED {
       (  $<OrganizeAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ?
          ) ;
          rdf:type [ <OrganizeAction> ] ?
       )
    } OR @<AllocateAction> OR @<ApplyAction> OR @<BookmarkAction> OR @<PlanAction>
)

<Organizer> CLOSED {
    (  $<Organizer_tes> rdf:type . * ;
       rdf:type [ <Organizer> ] ?
    )
}

<OriginAddress> CLOSED {
    (  $<OriginAddress_tes> rdf:type . * ;
       rdf:type [ <OriginAddress> ] ?
    )
}

<OriginalMediaContent> CLOSED {
    (  $<OriginalMediaContent_tes> rdf:type . * ;
       rdf:type [ <OriginalMediaContent> ] ?
    )
}

<OriginalMediaLink> CLOSED {
    (  $<OriginalMediaLink_tes> rdf:type . * ;
       rdf:type [ <OriginalMediaLink> ] ?
    )
}

<OriginalShippingFees> CLOSED {
    (  $<OriginalShippingFees_tes> rdf:type . * ;
       rdf:type [ <OriginalShippingFees> ] ?
    )
}

<OriginatesFrom> CLOSED {
    (  $<OriginatesFrom_tes> rdf:type . * ;
       rdf:type [ <OriginatesFrom> ] ?
    )
}

<Osteopathic> CLOSED {
    (  $<Osteopathic_tes> rdf:type . * ;
       rdf:type [ <Osteopathic> ] ?
    )
}

<OTC> CLOSED {
    (  $<OTC_tes> rdf:type . * ;
       rdf:type [ <OTC> ] ?
    )
}

<Otolaryngologic> CLOSED {
    (  $<Otolaryngologic_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Otolaryngologic> ] ?
    )
}

<OutletStore> CLOSED {
    (  $<OutletStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <OutletStore> ] ?
    )
}

<OutOfStock> CLOSED {
    (  $<OutOfStock_tes> rdf:type . * ;
       rdf:type [ <OutOfStock> ] ?
    )
}

<Overdosage> CLOSED {
    (  $<Overdosage_tes> rdf:type . * ;
       rdf:type [ <Overdosage> ] ?
    )
}

<OverviewHealthAspect> CLOSED {
    (  $<OverviewHealthAspect_tes> rdf:type . * ;
       rdf:type [ <OverviewHealthAspect> ] ?
    )
}

<OwnedFrom> CLOSED {
    (  $<OwnedFrom_tes> rdf:type . * ;
       rdf:type [ <OwnedFrom> ] ?
    )
}

<OwnedThrough> CLOSED {
    (  $<OwnedThrough_tes> rdf:type . * ;
       rdf:type [ <OwnedThrough> ] ?
    )
}

<OwnershipInfo> CLOSED {
    (  $<OwnershipInfo_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <acquiredFrom> @linkml:String * ;
          <ownedFrom> @<DateTime> * ;
          <ownedThrough> @<DateTime> * ;
          <typeOfGood> @linkml:String *
       ) ;
       rdf:type [ <OwnershipInfo> ] ?
    )
}

<Owns> CLOSED {
    (  $<Owns_tes> rdf:type . * ;
       rdf:type [ <Owns> ] ?
    )
}

<PageEnd> CLOSED {
    (  $<PageEnd_tes> rdf:type . * ;
       rdf:type [ <PageEnd> ] ?
    )
}

<PageStart> CLOSED {
    (  $<PageStart_tes> rdf:type . * ;
       rdf:type [ <PageStart> ] ?
    )
}

<Pagination> CLOSED {
    (  $<Pagination_tes> rdf:type . * ;
       rdf:type [ <Pagination> ] ?
    )
}

<PaidLeave> CLOSED {
    (  $<PaidLeave_tes> rdf:type . * ;
       rdf:type [ <PaidLeave> ] ?
    )
}

<PaintAction> CLOSED {
    (  $<PaintAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ?
       ) ;
       rdf:type [ <PaintAction> ] ?
    )
}

<Painting> CLOSED {
    (  $<Painting_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Painting> ] ?
    )
}

<PalliativeProcedure> CLOSED {
    (  $<PalliativeProcedure_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ? ;
          &<MedicalTherapy_tes> ;
          rdf:type [ <MedicalTherapy> ] ? ;
          <adverseOutcome> @<MedicalEntity> * ;
          <doseSchedule> @<DoseSchedule> * ;
          <drug> @<Drug> * ;
          <contraindication> @linkml:String * ;
          <duplicateTherapy> @<MedicalTherapy> * ;
          <seriousAdverseOutcome> @<MedicalEntity> *
       ) ;
       rdf:type [ <PalliativeProcedure> ] ?
    )
}

<Paperback> CLOSED {
    (  $<Paperback_tes> rdf:type . * ;
       rdf:type [ <Paperback> ] ?
    )
}

<ParcelDelivery> CLOSED {
    (  $<ParcelDelivery_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <carrier> @<Organization> * ;
          <deliveryAddress> @<PostalAddress> * ;
          <deliveryStatus> @<DeliveryEvent> * ;
          <expectedArrivalFrom> @linkml:String * ;
          <expectedArrivalUntil> @linkml:String * ;
          <hasDeliveryMethod> @<DeliveryMethod> * ;
          <itemShipped> @<Product> * ;
          <originAddress> @<PostalAddress> * ;
          <partOfOrder> @<Order> * ;
          <provider> @linkml:String * ;
          <trackingNumber> @<Text> * ;
          <trackingUrl> @<URL> *
       ) ;
       rdf:type [ <ParcelDelivery> ] ?
    )
}

<ParcelService> CLOSED {
    (  $<ParcelService_tes> rdf:type . * ;
       rdf:type [ <ParcelService> ] ?
    )
}

<Parent> CLOSED {
    (  $<Parent_tes> rdf:type . * ;
       rdf:type [ <Parent> ] ?
    )
}

<ParentalSupport> CLOSED {
    (  $<ParentalSupport_tes> rdf:type . * ;
       rdf:type [ <ParentalSupport> ] ?
    )
}

<ParentAudience> CLOSED {
    (  $<ParentAudience_tes> (  &<PeopleAudience_tes> ;
          rdf:type [ <PeopleAudience> ] ? ;
          <childMaxAge> @<Number> * ;
          <childMinAge> @<Number> *
       ) ;
       rdf:type [ <ParentAudience> ] ?
    )
}

<ParentItem> CLOSED {
    (  $<ParentItem_tes> rdf:type . * ;
       rdf:type [ <ParentItem> ] ?
    )
}

<ParentOrganization> CLOSED {
    (  $<ParentOrganization_tes> rdf:type . * ;
       rdf:type [ <ParentOrganization> ] ?
    )
}

<Parents> CLOSED {
    (  $<Parents_tes> rdf:type . * ;
       rdf:type [ <Parents> ] ?
    )
}

<ParentService> CLOSED {
    (  $<ParentService_tes> rdf:type . * ;
       rdf:type [ <ParentService> ] ?
    )
}

<ParentTaxon> CLOSED {
    (  $<ParentTaxon_tes> rdf:type . * ;
       rdf:type [ <ParentTaxon> ] ?
    )
}

<Park> CLOSED {
    (  $<Park_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Park> ] ?
    )
}

<ParkingFacility> CLOSED {
    (  $<ParkingFacility_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <ParkingFacility> ] ?
    )
}

<ParkingMap> CLOSED {
    (  $<ParkingMap_tes> rdf:type . * ;
       rdf:type [ <ParkingMap> ] ?
    )
}

<PartiallyInForce> CLOSED {
    (  $<PartiallyInForce_tes> rdf:type . * ;
       rdf:type [ <PartiallyInForce> ] ?
    )
}

<PartOfInvoice> CLOSED {
    (  $<PartOfInvoice_tes> rdf:type . * ;
       rdf:type [ <PartOfInvoice> ] ?
    )
}

<PartOfOrder> CLOSED {
    (  $<PartOfOrder_tes> rdf:type . * ;
       rdf:type [ <PartOfOrder> ] ?
    )
}

<PartOfSystem> CLOSED {
    (  $<PartOfSystem_tes> rdf:type . * ;
       rdf:type [ <PartOfSystem> ] ?
    )
}

<PartOfTrip> CLOSED {
    (  $<PartOfTrip_tes> rdf:type . * ;
       rdf:type [ <PartOfTrip> ] ?
    )
}

<PartySize> CLOSED {
    (  $<PartySize_tes> rdf:type . * ;
       rdf:type [ <PartySize> ] ?
    )
}

<PassengerPriorityStatus> CLOSED {
    (  $<PassengerPriorityStatus_tes> rdf:type . * ;
       rdf:type [ <PassengerPriorityStatus> ] ?
    )
}

<PassengerSequenceNumber> CLOSED {
    (  $<PassengerSequenceNumber_tes> rdf:type . * ;
       rdf:type [ <PassengerSequenceNumber> ] ?
    )
}

<Pathology> CLOSED {
    (  $<Pathology_tes> rdf:type . * ;
       rdf:type [ <Pathology> ] ?
    )
}

<PathologyTest> CLOSED {
    (  $<PathologyTest_tes> (  &<MedicalTest_tes> ;
          rdf:type [ <MedicalTest> ] ? ;
          <tissueSample> @<Text> *
       ) ;
       rdf:type [ <PathologyTest> ] ?
    )
}

<Pathophysiology> CLOSED {
    (  $<Pathophysiology_tes> rdf:type . * ;
       rdf:type [ <Pathophysiology> ] ?
    )
}

<Patient> CLOSED {
    (  $<Patient_tes> (  &<Person_tes> ;
          rdf:type [ <Person> ] ? ;
          &<MedicalAudience_tes> ;
          rdf:type [ <MedicalAudience> ] ? ;
          <diagnosis> @<MedicalCondition> * ;
          <drug> @<Drug> * ;
          <healthCondition> @<MedicalCondition> * ;
          <audienceType> @<Text> * ;
          <geographicArea> @<AdministrativeArea> * ;
          <requiredGender> @<Text> * ;
          <requiredMaxAge> @<Integer> * ;
          <requiredMinAge> @<Integer> * ;
          <suggestedAge> @<QuantitativeValue> * ;
          <suggestedGender> @linkml:String * ;
          <suggestedMaxAge> @<Number> * ;
          <suggestedMeasurement> @<QuantitativeValue> * ;
          <suggestedMinAge> @<Number> *
       ) ;
       rdf:type [ <Patient> ] ?
    )
}

<PatientExperienceHealthAspect> CLOSED {
    (  $<PatientExperienceHealthAspect_tes> rdf:type . * ;
       rdf:type [ <PatientExperienceHealthAspect> ] ?
    )
}

<Pattern> CLOSED {
    (  $<Pattern_tes> rdf:type . * ;
       rdf:type [ <Pattern> ] ?
    )
}

<PawnShop> CLOSED {
    (  $<PawnShop_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <PawnShop> ] ?
    )
}

<PayAction> CLOSED {
    (  $<PayAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <PayAction> ] ?
    )
}

<Payload> CLOSED {
    (  $<Payload_tes> rdf:type . * ;
       rdf:type [ <Payload> ] ?
    )
}

<PaymentAccepted> CLOSED {
    (  $<PaymentAccepted_tes> rdf:type . * ;
       rdf:type [ <PaymentAccepted> ] ?
    )
}

<PaymentAutomaticallyApplied> CLOSED {
    (  $<PaymentAutomaticallyApplied_tes> rdf:type . * ;
       rdf:type [ <PaymentAutomaticallyApplied> ] ?
    )
}

<PaymentCard>  (
    CLOSED {
       (  $<PaymentCard_tes> (  &<FinancialProduct_tes> ;
             rdf:type [ <FinancialProduct> ] ? ;
             &<PaymentMethod_tes> ;
             rdf:type [ <PaymentMethod> ] ? ;
             <cashBack> @linkml:String * ;
             <contactlessPayment> @<Boolean> * ;
             <floorLimit> @<MonetaryAmount> * ;
             <monthlyMinimumRepaymentAmount> @linkml:String * ;
             <supersededBy> @linkml:String *
          ) ;
          rdf:type [ <PaymentCard> ] ?
       )
    } OR @<CreditCard>
)

<PaymentChargeSpecification> CLOSED {
    (  $<PaymentChargeSpecification_tes> (  &<PriceSpecification_tes> ;
          rdf:type [ <PriceSpecification> ] ? ;
          <appliesToDeliveryMethod> @<DeliveryMethod> * ;
          <appliesToPaymentMethod> @<PaymentMethod> *
       ) ;
       rdf:type [ <PaymentChargeSpecification> ] ?
    )
}

<PaymentComplete> CLOSED {
    (  $<PaymentComplete_tes> rdf:type . * ;
       rdf:type [ <PaymentComplete> ] ?
    )
}

<PaymentDeclined> CLOSED {
    (  $<PaymentDeclined_tes> rdf:type . * ;
       rdf:type [ <PaymentDeclined> ] ?
    )
}

<PaymentDue> CLOSED {
    (  $<PaymentDue_tes> rdf:type . * ;
       rdf:type [ <PaymentDue> ] ?
    )
}

<PaymentDue> CLOSED {
    (  $<PaymentDue_tes> rdf:type . * ;
       rdf:type [ <PaymentDue> ] ?
    )
}

<PaymentDueDate> CLOSED {
    (  $<PaymentDueDate_tes> rdf:type . * ;
       rdf:type [ <PaymentDueDate> ] ?
    )
}

<PaymentMethod> CLOSED {
    (  $<PaymentMethod_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <PaymentMethod> ] ?
    )
}

<PaymentMethod> CLOSED {
    (  $<PaymentMethod_tes> rdf:type . * ;
       rdf:type [ <PaymentMethod> ] ?
    )
}

<PaymentMethodId> CLOSED {
    (  $<PaymentMethodId_tes> rdf:type . * ;
       rdf:type [ <PaymentMethodId> ] ?
    )
}

<PaymentPastDue> CLOSED {
    (  $<PaymentPastDue_tes> rdf:type . * ;
       rdf:type [ <PaymentPastDue> ] ?
    )
}

<PaymentService> CLOSED {
    (  $<PaymentService_tes> (  &<FinancialProduct_tes> ;
          rdf:type [ <FinancialProduct> ] ?
       ) ;
       rdf:type [ <PaymentService> ] ?
    )
}

<PaymentStatus> CLOSED {
    (  $<PaymentStatus_tes> rdf:type . * ;
       rdf:type [ <PaymentStatus> ] ?
    )
}

<PaymentStatusType> CLOSED {
    (  $<PaymentStatusType_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <PaymentStatusType> ] ?
    )
}

<PaymentUrl> CLOSED {
    (  $<PaymentUrl_tes> rdf:type . * ;
       rdf:type [ <PaymentUrl> ] ?
    )
}

<Pediatric> CLOSED {
    (  $<Pediatric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Pediatric> ] ?
    )
}

<Penciler> CLOSED {
    (  $<Penciler_tes> rdf:type . * ;
       rdf:type [ <Penciler> ] ?
    )
}

<PeopleAudience>  (
    CLOSED {
       (  $<PeopleAudience_tes> (  &<Audience_tes> ;
             rdf:type [ <Audience> ] ? ;
             <healthCondition> @<MedicalCondition> * ;
             <requiredGender> @<Text> * ;
             <requiredMaxAge> @<Integer> * ;
             <requiredMinAge> @<Integer> * ;
             <suggestedAge> @<QuantitativeValue> * ;
             <suggestedGender> @linkml:String * ;
             <suggestedMaxAge> @<Number> * ;
             <suggestedMeasurement> @<QuantitativeValue> * ;
             <suggestedMinAge> @<Number> *
          ) ;
          rdf:type [ <PeopleAudience> ] ?
       )
    } OR @<ParentAudience>
)

<Percentile10> CLOSED {
    (  $<Percentile10_tes> rdf:type . * ;
       rdf:type [ <Percentile10> ] ?
    )
}

<Percentile25> CLOSED {
    (  $<Percentile25_tes> rdf:type . * ;
       rdf:type [ <Percentile25> ] ?
    )
}

<Percentile75> CLOSED {
    (  $<Percentile75_tes> rdf:type . * ;
       rdf:type [ <Percentile75> ] ?
    )
}

<Percentile90> CLOSED {
    (  $<Percentile90_tes> rdf:type . * ;
       rdf:type [ <Percentile90> ] ?
    )
}

<PercutaneousProcedure> CLOSED {
    (  $<PercutaneousProcedure_tes> rdf:type . * ;
       rdf:type [ <PercutaneousProcedure> ] ?
    )
}

<PerformAction> CLOSED {
    (  $<PerformAction_tes> (  &<PlayAction_tes> ;
          rdf:type [ <PlayAction> ] ? ;
          <entertainmentBusiness> @<EntertainmentBusiness> *
       ) ;
       rdf:type [ <PerformAction> ] ?
    )
}

<PerformanceRole> CLOSED {
    (  $<PerformanceRole_tes> (  &<Role_tes> ;
          rdf:type [ <Role> ] ? ;
          <characterName> @<Text> *
       ) ;
       rdf:type [ <PerformanceRole> ] ?
    )
}

<Performer> CLOSED {
    (  $<Performer_tes> rdf:type . * ;
       rdf:type [ <Performer> ] ?
    )
}

<PerformerIn> CLOSED {
    (  $<PerformerIn_tes> rdf:type . * ;
       rdf:type [ <PerformerIn> ] ?
    )
}

<Performers> CLOSED {
    (  $<Performers_tes> rdf:type . * ;
       rdf:type [ <Performers> ] ?
    )
}

<PerformingArtsTheater> CLOSED {
    (  $<PerformingArtsTheater_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <PerformingArtsTheater> ] ?
    )
}

<PerformingGroup>  (
    CLOSED {
       (  $<PerformingGroup_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ?
          ) ;
          rdf:type [ <PerformingGroup> ] ?
       )
    } OR @<DanceGroup> OR @<MusicGroup> OR @<TheaterGroup>
)

<Periodical>  (
    CLOSED {
       (  $<Periodical_tes> (  &<CreativeWorkSeries_tes> ;
             rdf:type [ <CreativeWorkSeries> ] ?
          ) ;
          rdf:type [ <Periodical> ] ?
       )
    } OR @<ComicSeries> OR @<Newspaper>
)

<Permissions> CLOSED {
    (  $<Permissions_tes> rdf:type . * ;
       rdf:type [ <Permissions> ] ?
    )
}

<PermissionType> CLOSED {
    (  $<PermissionType_tes> rdf:type . * ;
       rdf:type [ <PermissionType> ] ?
    )
}

<Permit>  (
    CLOSED {
       (  $<Permit_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <issuedBy> @<Organization> * ;
             <issuedThrough> @<Service> * ;
             <permitAudience> @<Audience> * ;
             <validFor> @<Duration> * ;
             <validFrom> @linkml:String * ;
             <validIn> @<AdministrativeArea> * ;
             <validUntil> @<Date> *
          ) ;
          rdf:type [ <Permit> ] ?
       )
    } OR @<GovernmentPermit>
)

<PermitAudience> CLOSED {
    (  $<PermitAudience_tes> rdf:type . * ;
       rdf:type [ <PermitAudience> ] ?
    )
}

<PermittedUsage> CLOSED {
    (  $<PermittedUsage_tes> rdf:type . * ;
       rdf:type [ <PermittedUsage> ] ?
    )
}

<Person>  (
    CLOSED {
       (  $<Person_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <affiliation> @<Organization> * ;
             <callSign> @<Text> * ;
             <duns> @<Text> * ;
             <funder> @linkml:String * ;
             <globalLocationNumber> @<Text> * ;
             <homeLocation> @linkml:String * ;
             <memberOf> @linkml:String * ;
             <publishingPrinciples> @linkml:String * ;
             <sponsor> @linkml:String * ;
             <taxID> @<Text> * ;
             <workLocation> @linkml:String * ;
             <additionalName> @<Text> * ;
             <address> @linkml:String * ;
             <alumniOf> @linkml:String * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <birthDate> @<Date> * ;
             <birthPlace> @<Place> * ;
             <brand> @linkml:String * ;
             <children> @<Person> * ;
             <colleague> @linkml:String * ;
             <colleagues> @<Person> * ;
             <contactPoint> @<ContactPoint> * ;
             <contactPoints> @<ContactPoint> * ;
             <deathDate> @<Date> * ;
             <deathPlace> @<Place> * ;
             <email> @<Text> * ;
             <familyName> @<Text> * ;
             <faxNumber> @<Text> * ;
             <follows> @<Person> * ;
             <gender> @linkml:String * ;
             <givenName> @<Text> * ;
             <hasCredential> @<EducationalOccupationalCredential> * ;
             <hasOccupation> @<Occupation> * ;
             <hasOfferCatalog> @<OfferCatalog> * ;
             <hasPOS> @<Place> * ;
             <height> @linkml:String * ;
             <honorificPrefix> @<Text> * ;
             <honorificSuffix> @<Text> * ;
             <interactionStatistic> @<InteractionCounter> * ;
             <isicV4> @<Text> * ;
             <jobTitle> @linkml:String * ;
             <knows> @<Person> * ;
             <knowsAbout> @linkml:String * ;
             <knowsLanguage> @linkml:String * ;
             <makesOffer> @<Offer> * ;
             <naics> @<Text> * ;
             <nationality> @<Country> * ;
             <netWorth> @linkml:String * ;
             <owns> @linkml:String * ;
             <parent> @<Person> * ;
             <parents> @<Person> * ;
             <performerIn> @<Event> * ;
             <relatedTo> @<Person> * ;
             <seeks> @<Demand> * ;
             <sibling> @<Person> * ;
             <siblings> @<Person> * ;
             <spouse> @<Person> * ;
             <telephone> @<Text> * ;
             <vatID> @<Text> * ;
             <weight> @<QuantitativeValue> * ;
             <worksFor> @<Organization> *
          ) ;
          rdf:type [ <Person> ] ?
       )
    } OR @<Patient>
)

<PET> CLOSED {
    (  $<PET_tes> rdf:type . * ;
       rdf:type [ <PET> ] ?
    )
}

<PetsAllowed> CLOSED {
    (  $<PetsAllowed_tes> rdf:type . * ;
       rdf:type [ <PetsAllowed> ] ?
    )
}

<PetStore> CLOSED {
    (  $<PetStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <PetStore> ] ?
    )
}

<Pharmacy> CLOSED {
    (  $<Pharmacy_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ? ;
          &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ? ;
          <healthPlanNetworkId> @<Text> * ;
          <isAcceptingNewPatients> @<Boolean> * ;
          <medicalSpecialty> @<MedicalSpecialty> *
       ) ;
       rdf:type [ <Pharmacy> ] ?
    )
}

<PharmacySpecialty> CLOSED {
    (  $<PharmacySpecialty_tes> rdf:type . * ;
       rdf:type [ <PharmacySpecialty> ] ?
    )
}

<PhoneticText> CLOSED {
    (  $<PhoneticText_tes> rdf:type . * ;
       rdf:type [ <PhoneticText> ] ?
    )
}

<Photograph> CLOSED {
    (  $<Photograph_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Photograph> ] ?
    )
}

<PhotographAction> CLOSED {
    (  $<PhotographAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ?
       ) ;
       rdf:type [ <PhotographAction> ] ?
    )
}

<Photos> CLOSED {
    (  $<Photos_tes> rdf:type . * ;
       rdf:type [ <Photos> ] ?
    )
}

<PhysicalActivity>  (
    CLOSED {
       (  $<PhysicalActivity_tes> (  &<LifestyleModification_tes> ;
             rdf:type [ <LifestyleModification> ] ? ;
             <category> @linkml:String * ;
             <associatedAnatomy> @linkml:String * ;
             <epidemiology> @<Text> * ;
             <pathophysiology> @<Text> *
          ) ;
          rdf:type [ <PhysicalActivity> ] ?
       )
    } OR @<ExercisePlan>
)

<PhysicalActivityCategory> CLOSED {
    (  $<PhysicalActivityCategory_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <PhysicalActivityCategory> ] ?
    )
}

<PhysicalExam> CLOSED {
    (  $<PhysicalExam_tes> (  &<MedicalEnumeration_tes> ;
          rdf:type [ <MedicalEnumeration> ] ? ;
          &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ? ;
          <code> @<MedicalCode> * ;
          <guideline> @<MedicalGuideline> * ;
          <legalStatus> @linkml:String * ;
          <medicineSystem> @<MedicineSystem> * ;
          <recognizingAuthority> @<Organization> * ;
          <relevantSpecialty> @<MedicalSpecialty> * ;
          <study> @<MedicalStudy> * ;
          <bodyLocation> @<Text> * ;
          <followup> @<Text> * ;
          <howPerformed> @<Text> * ;
          <preparation> @linkml:String * ;
          <procedureType> @<MedicalProcedureType> * ;
          <status> @linkml:String *
       ) ;
       rdf:type [ <PhysicalExam> ] ?
    )
}

<PhysicalRequirement> CLOSED {
    (  $<PhysicalRequirement_tes> rdf:type . * ;
       rdf:type [ <PhysicalRequirement> ] ?
    )
}

<PhysicalTherapy> CLOSED {
    (  $<PhysicalTherapy_tes> (  &<MedicalTherapy_tes> ;
          rdf:type [ <MedicalTherapy> ] ?
       ) ;
       rdf:type [ <PhysicalTherapy> ] ?
    )
}

<Physician> CLOSED {
    (  $<Physician_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ? ;
          &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ? ;
          <availableService> @linkml:String * ;
          <hospitalAffiliation> @<Hospital> * ;
          <medicalSpecialty> @<MedicalSpecialty> * ;
          <healthPlanNetworkId> @<Text> * ;
          <isAcceptingNewPatients> @<Boolean> *
       ) ;
       rdf:type [ <Physician> ] ?
    )
}

<PhysiologicalBenefits> CLOSED {
    (  $<PhysiologicalBenefits_tes> rdf:type . * ;
       rdf:type [ <PhysiologicalBenefits> ] ?
    )
}

<Physiotherapy> CLOSED {
    (  $<Physiotherapy_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Physiotherapy> ] ?
    )
}

<PickupLocation> CLOSED {
    (  $<PickupLocation_tes> rdf:type . * ;
       rdf:type [ <PickupLocation> ] ?
    )
}

<PickupTime> CLOSED {
    (  $<PickupTime_tes> rdf:type . * ;
       rdf:type [ <PickupTime> ] ?
    )
}

<Place>  (
    CLOSED {
       (  $<Place_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <globalLocationNumber> @<Text> * ;
             <logo> @linkml:String * ;
             <photo> @linkml:String * ;
             <additionalProperty> @<PropertyValue> * ;
             <address> @linkml:String * ;
             <aggregateRating> @<AggregateRating> * ;
             <amenityFeature> @<LocationFeatureSpecification> * ;
             <branchCode> @<Text> * ;
             <containedIn> @<Place> * ;
             <containedInPlace> @<Place> * ;
             <containsPlace> @<Place> * ;
             <event> @<Event> * ;
             <events> @<Event> * ;
             <faxNumber> @<Text> * ;
             <geo> @linkml:String * ;
             <geoContains> @linkml:String * ;
             <geoCoveredBy> @linkml:String * ;
             <geoCovers> @linkml:String * ;
             <geoCrosses> @linkml:String * ;
             <geoDisjoint> @linkml:String * ;
             <geoEquals> @linkml:String * ;
             <geoIntersects> @linkml:String * ;
             <geoOverlaps> @linkml:String * ;
             <geoTouches> @linkml:String * ;
             <geoWithin> @linkml:String * ;
             <hasDriveThroughService> @<Boolean> * ;
             <hasMap> @linkml:String * ;
             <isAccessibleForFree> @<Boolean> * ;
             <isicV4> @<Text> * ;
             <latitude> @linkml:String * ;
             <longitude> @linkml:String * ;
             <map> @<URL> * ;
             <maps> @<URL> * ;
             <maximumAttendeeCapacity> @<Integer> * ;
             <openingHoursSpecification> @<OpeningHoursSpecification> * ;
             <photos> @linkml:String * ;
             <publicAccess> @<Boolean> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <slogan> @<Text> * ;
             <smokingAllowed> @<Boolean> * ;
             <specialOpeningHoursSpecification> @<OpeningHoursSpecification> * ;
             <telephone> @<Text> * ;
             <tourBookingPage> @<URL> *
          ) ;
          rdf:type [ <Place> ] ?
       )
    } OR @<Accommodation> OR @<AdministrativeArea> OR @<CivicStructure> OR @<Landform> OR @<LandmarksOrHistoricalBuildings> OR
    @<LocalBusiness> OR @<Residence> OR @<TouristAttraction> OR @<TouristDestination>
)

<PlaceboControlledTrial> CLOSED {
    (  $<PlaceboControlledTrial_tes> rdf:type . * ;
       rdf:type [ <PlaceboControlledTrial> ] ?
    )
}

<PlaceOfWorship>  (
    CLOSED {
       (  $<PlaceOfWorship_tes> (  &<CivicStructure_tes> ;
             rdf:type [ <CivicStructure> ] ?
          ) ;
          rdf:type [ <PlaceOfWorship> ] ?
       )
    } OR @<BuddhistTemple> OR @<Church> OR @<HinduTemple> OR @<Mosque> OR @<Synagogue>
)

<PlanAction>  (
    CLOSED {
       (  $<PlanAction_tes> (  &<OrganizeAction_tes> ;
             rdf:type [ <OrganizeAction> ] ? ;
             <scheduledTime> @<DateTime> *
          ) ;
          rdf:type [ <PlanAction> ] ?
       )
    } OR @<CancelAction> OR @<ReserveAction> OR @<ScheduleAction>
)

<PlasticSurgery> CLOSED {
    (  $<PlasticSurgery_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <PlasticSurgery> ] ?
    )
}

<Play> CLOSED {
    (  $<Play_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Play> ] ?
    )
}

<PlayAction>  (
    CLOSED {
       (  $<PlayAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <audience> @<Audience> * ;
             <event> @<Event> *
          ) ;
          rdf:type [ <PlayAction> ] ?
       )
    } OR @<ExerciseAction> OR @<PerformAction>
)

<PlayersOnline> CLOSED {
    (  $<PlayersOnline_tes> rdf:type . * ;
       rdf:type [ <PlayersOnline> ] ?
    )
}

<PlayerType> CLOSED {
    (  $<PlayerType_tes> rdf:type . * ;
       rdf:type [ <PlayerType> ] ?
    )
}

<Playground> CLOSED {
    (  $<Playground_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Playground> ] ?
    )
}

<PlayMode> CLOSED {
    (  $<PlayMode_tes> rdf:type . * ;
       rdf:type [ <PlayMode> ] ?
    )
}

<Plumber> CLOSED {
    (  $<Plumber_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <Plumber> ] ?
    )
}

<PodcastEpisode> CLOSED {
    (  $<PodcastEpisode_tes> (  &<Episode_tes> ;
          rdf:type [ <Episode> ] ?
       ) ;
       rdf:type [ <PodcastEpisode> ] ?
    )
}

<PodcastSeason> CLOSED {
    (  $<PodcastSeason_tes> (  &<CreativeWorkSeason_tes> ;
          rdf:type [ <CreativeWorkSeason> ] ?
       ) ;
       rdf:type [ <PodcastSeason> ] ?
    )
}

<PodcastSeries> CLOSED {
    (  $<PodcastSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ? ;
          <actor> @<Person> * ;
          <webFeed> @linkml:String *
       ) ;
       rdf:type [ <PodcastSeries> ] ?
    )
}

<Podiatric> CLOSED {
    (  $<Podiatric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Podiatric> ] ?
    )
}

<PoliceStation> CLOSED {
    (  $<PoliceStation_tes> (  &<EmergencyService_tes> ;
          rdf:type [ <EmergencyService> ] ? ;
          &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <PoliceStation> ] ?
    )
}

<Polygon> CLOSED {
    (  $<Polygon_tes> rdf:type . * ;
       rdf:type [ <Polygon> ] ?
    )
}

<Pond> CLOSED {
    (  $<Pond_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <Pond> ] ?
    )
}

<PopulationType> CLOSED {
    (  $<PopulationType_tes> rdf:type . * ;
       rdf:type [ <PopulationType> ] ?
    )
}

<PositiveNotes> CLOSED {
    (  $<PositiveNotes_tes> rdf:type . * ;
       rdf:type [ <PositiveNotes> ] ?
    )
}

<PossibleComplication> CLOSED {
    (  $<PossibleComplication_tes> rdf:type . * ;
       rdf:type [ <PossibleComplication> ] ?
    )
}

<PossibleTreatment> CLOSED {
    (  $<PossibleTreatment_tes> rdf:type . * ;
       rdf:type [ <PossibleTreatment> ] ?
    )
}

<PostalAddress> CLOSED {
    (  $<PostalAddress_tes> (  &<ContactPoint_tes> ;
          rdf:type [ <ContactPoint> ] ? ;
          <addressCountry> @linkml:String * ;
          <addressLocality> @<Text> * ;
          <addressRegion> @<Text> * ;
          <postOfficeBoxNumber> @<Text> * ;
          <postalCode> @<Text> * ;
          <streetAddress> @<Text> *
       ) ;
       rdf:type [ <PostalAddress> ] ?
    )
}

<PostalCode> CLOSED {
    (  $<PostalCode_tes> rdf:type . * ;
       rdf:type [ <PostalCode> ] ?
    )
}

<PostalCodeBegin> CLOSED {
    (  $<PostalCodeBegin_tes> rdf:type . * ;
       rdf:type [ <PostalCodeBegin> ] ?
    )
}

<PostalCodeEnd> CLOSED {
    (  $<PostalCodeEnd_tes> rdf:type . * ;
       rdf:type [ <PostalCodeEnd> ] ?
    )
}

<PostalCodePrefix> CLOSED {
    (  $<PostalCodePrefix_tes> rdf:type . * ;
       rdf:type [ <PostalCodePrefix> ] ?
    )
}

<PostalCodeRange> CLOSED {
    (  $<PostalCodeRange_tes> rdf:type . * ;
       rdf:type [ <PostalCodeRange> ] ?
    )
}

<PostalCodeRangeSpecification> CLOSED {
    (  $<PostalCodeRangeSpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <postalCodeBegin> @<Text> * ;
          <postalCodeEnd> @<Text> *
       ) ;
       rdf:type [ <PostalCodeRangeSpecification> ] ?
    )
}

<Poster> CLOSED {
    (  $<Poster_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Poster> ] ?
    )
}

<PostOffice> CLOSED {
    (  $<PostOffice_tes> (  &<GovernmentOffice_tes> ;
          rdf:type [ <GovernmentOffice> ] ?
       ) ;
       rdf:type [ <PostOffice> ] ?
    )
}

<PostOfficeBoxNumber> CLOSED {
    (  $<PostOfficeBoxNumber_tes> rdf:type . * ;
       rdf:type [ <PostOfficeBoxNumber> ] ?
    )
}

<PostOp> CLOSED {
    (  $<PostOp_tes> rdf:type . * ;
       rdf:type [ <PostOp> ] ?
    )
}

<PotentialAction> CLOSED {
    (  $<PotentialAction_tes> rdf:type . * ;
       rdf:type [ <PotentialAction> ] ?
    )
}

<PotentialActionStatus> CLOSED {
    (  $<PotentialActionStatus_tes> rdf:type . * ;
       rdf:type [ <PotentialActionStatus> ] ?
    )
}

<PotentialUse> CLOSED {
    (  $<PotentialUse_tes> rdf:type . * ;
       rdf:type [ <PotentialUse> ] ?
    )
}

<PredecessorOf> CLOSED {
    (  $<PredecessorOf_tes> rdf:type . * ;
       rdf:type [ <PredecessorOf> ] ?
    )
}

<PregnancyCategory> CLOSED {
    (  $<PregnancyCategory_tes> rdf:type . * ;
       rdf:type [ <PregnancyCategory> ] ?
    )
}

<PregnancyHealthAspect> CLOSED {
    (  $<PregnancyHealthAspect_tes> rdf:type . * ;
       rdf:type [ <PregnancyHealthAspect> ] ?
    )
}

<PregnancyWarning> CLOSED {
    (  $<PregnancyWarning_tes> rdf:type . * ;
       rdf:type [ <PregnancyWarning> ] ?
    )
}

<PreOp> CLOSED {
    (  $<PreOp_tes> rdf:type . * ;
       rdf:type [ <PreOp> ] ?
    )
}

<PreOrder> CLOSED {
    (  $<PreOrder_tes> rdf:type . * ;
       rdf:type [ <PreOrder> ] ?
    )
}

<PreOrderAction> CLOSED {
    (  $<PreOrderAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ?
       ) ;
       rdf:type [ <PreOrderAction> ] ?
    )
}

<Preparation> CLOSED {
    (  $<Preparation_tes> rdf:type . * ;
       rdf:type [ <Preparation> ] ?
    )
}

<PrependAction> CLOSED {
    (  $<PrependAction_tes> (  &<InsertAction_tes> ;
          rdf:type [ <InsertAction> ] ?
       ) ;
       rdf:type [ <PrependAction> ] ?
    )
}

<PrepTime> CLOSED {
    (  $<PrepTime_tes> rdf:type . * ;
       rdf:type [ <PrepTime> ] ?
    )
}

<PreSale> CLOSED {
    (  $<PreSale_tes> rdf:type . * ;
       rdf:type [ <PreSale> ] ?
    )
}

<Preschool> CLOSED {
    (  $<Preschool_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <Preschool> ] ?
    )
}

<PrescribingInfo> CLOSED {
    (  $<PrescribingInfo_tes> rdf:type . * ;
       rdf:type [ <PrescribingInfo> ] ?
    )
}

<PrescriptionOnly> CLOSED {
    (  $<PrescriptionOnly_tes> rdf:type . * ;
       rdf:type [ <PrescriptionOnly> ] ?
    )
}

<PrescriptionStatus> CLOSED {
    (  $<PrescriptionStatus_tes> rdf:type . * ;
       rdf:type [ <PrescriptionStatus> ] ?
    )
}

<PresentationDigitalDocument> CLOSED {
    (  $<PresentationDigitalDocument_tes> (  &<DigitalDocument_tes> ;
          rdf:type [ <DigitalDocument> ] ?
       ) ;
       rdf:type [ <PresentationDigitalDocument> ] ?
    )
}

<PreventionHealthAspect> CLOSED {
    (  $<PreventionHealthAspect_tes> rdf:type . * ;
       rdf:type [ <PreventionHealthAspect> ] ?
    )
}

<PreventionIndication> CLOSED {
    (  $<PreventionIndication_tes> (  &<MedicalIndication_tes> ;
          rdf:type [ <MedicalIndication> ] ?
       ) ;
       rdf:type [ <PreventionIndication> ] ?
    )
}

<PreviousItem> CLOSED {
    (  $<PreviousItem_tes> rdf:type . * ;
       rdf:type [ <PreviousItem> ] ?
    )
}

<PreviousStartDate> CLOSED {
    (  $<PreviousStartDate_tes> rdf:type . * ;
       rdf:type [ <PreviousStartDate> ] ?
    )
}

<Price> CLOSED {
    (  $<Price_tes> rdf:type . * ;
       rdf:type [ <Price> ] ?
    )
}

<PriceComponent> CLOSED {
    (  $<PriceComponent_tes> rdf:type . * ;
       rdf:type [ <PriceComponent> ] ?
    )
}

<PriceComponentType> CLOSED {
    (  $<PriceComponentType_tes> rdf:type . * ;
       rdf:type [ <PriceComponentType> ] ?
    )
}

<PriceComponentTypeEnumeration> CLOSED {
    (  $<PriceComponentTypeEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <PriceComponentTypeEnumeration> ] ?
    )
}

<PriceCurrency> CLOSED {
    (  $<PriceCurrency_tes> rdf:type . * ;
       rdf:type [ <PriceCurrency> ] ?
    )
}

<PriceRange> CLOSED {
    (  $<PriceRange_tes> rdf:type . * ;
       rdf:type [ <PriceRange> ] ?
    )
}

<PriceSpecification>  (
    CLOSED {
       (  $<PriceSpecification_tes> (  &<StructuredValue_tes> ;
             rdf:type [ <StructuredValue> ] ? ;
             <eligibleQuantity> @<QuantitativeValue> * ;
             <eligibleTransactionVolume> @<PriceSpecification> * ;
             <maxPrice> @<Number> * ;
             <minPrice> @<Number> * ;
             <price> @linkml:String * ;
             <priceCurrency> @<Text> * ;
             <validFrom> @linkml:String * ;
             <validThrough> @linkml:String * ;
             <valueAddedTaxIncluded> @<Boolean> *
          ) ;
          rdf:type [ <PriceSpecification> ] ?
       )
    } OR @<CompoundPriceSpecification> OR @<DeliveryChargeSpecification> OR @<PaymentChargeSpecification> OR
    @<UnitPriceSpecification>
)

<PriceSpecification> CLOSED {
    (  $<PriceSpecification_tes> rdf:type . * ;
       rdf:type [ <PriceSpecification> ] ?
    )
}

<PriceType> CLOSED {
    (  $<PriceType_tes> rdf:type . * ;
       rdf:type [ <PriceType> ] ?
    )
}

<PriceTypeEnumeration> CLOSED {
    (  $<PriceTypeEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <PriceTypeEnumeration> ] ?
    )
}

<PriceValidUntil> CLOSED {
    (  $<PriceValidUntil_tes> rdf:type . * ;
       rdf:type [ <PriceValidUntil> ] ?
    )
}

<PrimaryCare> CLOSED {
    (  $<PrimaryCare_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <PrimaryCare> ] ?
    )
}

<PrimaryImageOfPage> CLOSED {
    (  $<PrimaryImageOfPage_tes> rdf:type . * ;
       rdf:type [ <PrimaryImageOfPage> ] ?
    )
}

<PrimaryPrevention> CLOSED {
    (  $<PrimaryPrevention_tes> rdf:type . * ;
       rdf:type [ <PrimaryPrevention> ] ?
    )
}

<PrintColumn> CLOSED {
    (  $<PrintColumn_tes> rdf:type . * ;
       rdf:type [ <PrintColumn> ] ?
    )
}

<PrintEdition> CLOSED {
    (  $<PrintEdition_tes> rdf:type . * ;
       rdf:type [ <PrintEdition> ] ?
    )
}

<PrintPage> CLOSED {
    (  $<PrintPage_tes> rdf:type . * ;
       rdf:type [ <PrintPage> ] ?
    )
}

<PrintSection> CLOSED {
    (  $<PrintSection_tes> rdf:type . * ;
       rdf:type [ <PrintSection> ] ?
    )
}

<Prion> CLOSED {
    (  $<Prion_tes> rdf:type . * ;
       rdf:type [ <Prion> ] ?
    )
}

<Procedure> CLOSED {
    (  $<Procedure_tes> rdf:type . * ;
       rdf:type [ <Procedure> ] ?
    )
}

<ProcedureType> CLOSED {
    (  $<ProcedureType_tes> rdf:type . * ;
       rdf:type [ <ProcedureType> ] ?
    )
}

<ProcessingTime> CLOSED {
    (  $<ProcessingTime_tes> rdf:type . * ;
       rdf:type [ <ProcessingTime> ] ?
    )
}

<ProcessorRequirements> CLOSED {
    (  $<ProcessorRequirements_tes> rdf:type . * ;
       rdf:type [ <ProcessorRequirements> ] ?
    )
}

<Producer> CLOSED {
    (  $<Producer_tes> rdf:type . * ;
       rdf:type [ <Producer> ] ?
    )
}

<Produces> CLOSED {
    (  $<Produces_tes> rdf:type . * ;
       rdf:type [ <Produces> ] ?
    )
}

<Product>  (
    CLOSED {
       (  $<Product_tes> (  &<Thing_tes> ;
             rdf:type [ <Thing> ] ? ;
             <category> @linkml:String * ;
             <gtin> @<Text> * ;
             <gtin12> @<Text> * ;
             <gtin13> @<Text> * ;
             <gtin14> @<Text> * ;
             <gtin8> @<Text> * ;
             <logo> @linkml:String * ;
             <material> @linkml:String * ;
             <nsn> @<Text> * ;
             <productID> @<Text> * ;
             <sku> @<Text> * ;
             <additionalProperty> @<PropertyValue> * ;
             <aggregateRating> @<AggregateRating> * ;
             <audience> @<Audience> * ;
             <award> @<Text> * ;
             <awards> @<Text> * ;
             <brand> @linkml:String * ;
             <color> @<Text> * ;
             <countryOfAssembly> @<Text> * ;
             <countryOfLastProcessing> @<Text> * ;
             <countryOfOrigin> @<Country> * ;
             <depth> @linkml:String * ;
             <hasEnergyConsumptionDetails> @<EnergyConsumptionDetails> * ;
             <hasMeasurement> @<QuantitativeValue> * ;
             <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
             <height> @linkml:String * ;
             <inProductGroupWithID> @<Text> * ;
             <isAccessoryOrSparePartFor> @<Product> * ;
             <isConsumableFor> @<Product> * ;
             <isRelatedTo> @linkml:String * ;
             <isSimilarTo> @linkml:String * ;
             <isVariantOf> @linkml:String * ;
             <itemCondition> @<OfferItemCondition> * ;
             <manufacturer> @<Organization> * ;
             <model> @linkml:String * ;
             <mpn> @<Text> * ;
             <offers> @linkml:String * ;
             <pattern> @linkml:String * ;
             <productionDate> @<Date> * ;
             <purchaseDate> @<Date> * ;
             <releaseDate> @<Date> * ;
             <review> @<Review> * ;
             <reviews> @<Review> * ;
             <size> @linkml:String * ;
             <slogan> @<Text> * ;
             <weight> @<QuantitativeValue> * ;
             <width> @linkml:String *
          ) ;
          rdf:type [ <Product> ] ?
       )
    } OR @<IndividualProduct> OR @<ProductGroup> OR @<ProductModel> OR @<SomeProducts> OR @<Vehicle>
)

<ProductCollection> CLOSED {
    (  $<ProductCollection_tes> (  &<Collection_tes> ;
          rdf:type [ <Collection> ] ? ;
          &<Product_tes> ;
          rdf:type [ <Product> ] ? ;
          <includesObject> @<TypeAndQuantityNode> * ;
          <category> @linkml:String * ;
          <gtin> @<Text> * ;
          <gtin12> @<Text> * ;
          <gtin13> @<Text> * ;
          <gtin14> @<Text> * ;
          <gtin8> @<Text> * ;
          <logo> @linkml:String * ;
          <nsn> @<Text> * ;
          <productID> @<Text> * ;
          <sku> @<Text> * ;
          <additionalProperty> @<PropertyValue> * ;
          <brand> @linkml:String * ;
          <color> @<Text> * ;
          <countryOfAssembly> @<Text> * ;
          <countryOfLastProcessing> @<Text> * ;
          <depth> @linkml:String * ;
          <hasEnergyConsumptionDetails> @<EnergyConsumptionDetails> * ;
          <hasMeasurement> @<QuantitativeValue> * ;
          <hasMerchantReturnPolicy> @<MerchantReturnPolicy> * ;
          <height> @linkml:String * ;
          <inProductGroupWithID> @<Text> * ;
          <isAccessoryOrSparePartFor> @<Product> * ;
          <isConsumableFor> @<Product> * ;
          <isRelatedTo> @linkml:String * ;
          <isSimilarTo> @linkml:String * ;
          <isVariantOf> @linkml:String * ;
          <itemCondition> @<OfferItemCondition> * ;
          <manufacturer> @<Organization> * ;
          <model> @linkml:String * ;
          <mpn> @<Text> * ;
          <productionDate> @<Date> * ;
          <purchaseDate> @<Date> * ;
          <releaseDate> @<Date> * ;
          <slogan> @<Text> * ;
          <weight> @<QuantitativeValue> * ;
          <width> @linkml:String *
       ) ;
       rdf:type [ <ProductCollection> ] ?
    )
}

<ProductGroup> CLOSED {
    (  $<ProductGroup_tes> (  &<Product_tes> ;
          rdf:type [ <Product> ] ? ;
          <hasVariant> @<Product> * ;
          <productGroupID> @<Text> * ;
          <variesBy> @linkml:String *
       ) ;
       rdf:type [ <ProductGroup> ] ?
    )
}

<ProductGroupID> CLOSED {
    (  $<ProductGroupID_tes> rdf:type . * ;
       rdf:type [ <ProductGroupID> ] ?
    )
}

<ProductionCompany> CLOSED {
    (  $<ProductionCompany_tes> rdf:type . * ;
       rdf:type [ <ProductionCompany> ] ?
    )
}

<ProductionDate> CLOSED {
    (  $<ProductionDate_tes> rdf:type . * ;
       rdf:type [ <ProductionDate> ] ?
    )
}

<ProductModel> CLOSED {
    (  $<ProductModel_tes> (  &<Product_tes> ;
          rdf:type [ <Product> ] ? ;
          <predecessorOf> @<ProductModel> * ;
          <successorOf> @<ProductModel> *
       ) ;
       rdf:type [ <ProductModel> ] ?
    )
}

<ProductSupported> CLOSED {
    (  $<ProductSupported_tes> rdf:type . * ;
       rdf:type [ <ProductSupported> ] ?
    )
}

<ProfessionalService> CLOSED {
    (  $<ProfessionalService_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <ProfessionalService> ] ?
    )
}

<ProficiencyLevel> CLOSED {
    (  $<ProficiencyLevel_tes> rdf:type . * ;
       rdf:type [ <ProficiencyLevel> ] ?
    )
}

<ProfilePage> CLOSED {
    (  $<ProfilePage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <ProfilePage> ] ?
    )
}

<PrognosisHealthAspect> CLOSED {
    (  $<PrognosisHealthAspect_tes> rdf:type . * ;
       rdf:type [ <PrognosisHealthAspect> ] ?
    )
}

<ProgramMembership> CLOSED {
    (  $<ProgramMembership_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <hostingOrganization> @<Organization> * ;
          <member> @linkml:String * ;
          <members> @linkml:String * ;
          <membershipNumber> @<Text> * ;
          <membershipPointsEarned> @linkml:String * ;
          <programName> @<Text> *
       ) ;
       rdf:type [ <ProgramMembership> ] ?
    )
}

<ProgramMembershipUsed> CLOSED {
    (  $<ProgramMembershipUsed_tes> rdf:type . * ;
       rdf:type [ <ProgramMembershipUsed> ] ?
    )
}

<ProgrammingLanguage> CLOSED {
    (  $<ProgrammingLanguage_tes> rdf:type . * ;
       rdf:type [ <ProgrammingLanguage> ] ?
    )
}

<ProgrammingModel> CLOSED {
    (  $<ProgrammingModel_tes> rdf:type . * ;
       rdf:type [ <ProgrammingModel> ] ?
    )
}

<ProgramName> CLOSED {
    (  $<ProgramName_tes> rdf:type . * ;
       rdf:type [ <ProgramName> ] ?
    )
}

<ProgramPrerequisites> CLOSED {
    (  $<ProgramPrerequisites_tes> rdf:type . * ;
       rdf:type [ <ProgramPrerequisites> ] ?
    )
}

<ProgramType> CLOSED {
    (  $<ProgramType_tes> rdf:type . * ;
       rdf:type [ <ProgramType> ] ?
    )
}

<Project>  (
    CLOSED {
       (  $<Project_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ?
          ) ;
          rdf:type [ <Project> ] ?
       )
    } OR @<FundingAgency> OR @<ResearchProject>
)

<PronounceableText> CLOSED {
    (  $<PronounceableText_tes> (  &<Text_tes> ;
          rdf:type [ <Text> ] ? ;
          <inLanguage> @linkml:String * ;
          <phoneticText> @<Text> * ;
          <speechToTextMarkup> @<Text> * ;
          <textValue> @<Text> *
       ) ;
       rdf:type [ <PronounceableText> ] ?
    )
}

<Property> CLOSED {
    (  $<Property_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <domainIncludes> @<Class> * ;
          <inverseOf> @<Property> * ;
          <rangeIncludes> @<Class> * ;
          <supersededBy> @linkml:String *
       ) ;
       rdf:type [ <Property> ] ?
    )
}

<PropertyID> CLOSED {
    (  $<PropertyID_tes> rdf:type . * ;
       rdf:type [ <PropertyID> ] ?
    )
}

<PropertyValue>  (
    CLOSED {
       (  $<PropertyValue_tes> (  &<StructuredValue_tes> ;
             rdf:type [ <StructuredValue> ] ? ;
             <maxValue> @<Number> * ;
             <measurementTechnique> @linkml:String * ;
             <minValue> @<Number> * ;
             <propertyID> @linkml:String * ;
             <unitCode> @linkml:String * ;
             <unitText> @<Text> * ;
             <value> @linkml:String * ;
             <valueReference> @linkml:String *
          ) ;
          rdf:type [ <PropertyValue> ] ?
       )
    } OR @<LocationFeatureSpecification>
)

<PropertyValueSpecification> CLOSED {
    (  $<PropertyValueSpecification_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <defaultValue> @linkml:String * ;
          <maxValue> @<Number> * ;
          <minValue> @<Number> * ;
          <multipleValues> @<Boolean> * ;
          <readonlyValue> @<Boolean> * ;
          <stepValue> @<Number> * ;
          <valueMaxLength> @<Number> * ;
          <valueMinLength> @<Number> * ;
          <valueName> @<Text> * ;
          <valuePattern> @<Text> * ;
          <valueRequired> @<Boolean> *
       ) ;
       rdf:type [ <PropertyValueSpecification> ] ?
    )
}

<ProprietaryName> CLOSED {
    (  $<ProprietaryName_tes> rdf:type . * ;
       rdf:type [ <ProprietaryName> ] ?
    )
}

<Protein> CLOSED {
    (  $<Protein_tes> (  &<BioChemEntity_tes> ;
          rdf:type [ <BioChemEntity> ] ? ;
          <hasBioPolymerSequence> @<Text> *
       ) ;
       rdf:type [ <Protein> ] ?
    )
}

<ProteinContent> CLOSED {
    (  $<ProteinContent_tes> rdf:type . * ;
       rdf:type [ <ProteinContent> ] ?
    )
}

<Protozoa> CLOSED {
    (  $<Protozoa_tes> rdf:type . * ;
       rdf:type [ <Protozoa> ] ?
    )
}

<Provider> CLOSED {
    (  $<Provider_tes> rdf:type . * ;
       rdf:type [ <Provider> ] ?
    )
}

<ProviderMobility> CLOSED {
    (  $<ProviderMobility_tes> rdf:type . * ;
       rdf:type [ <ProviderMobility> ] ?
    )
}

<ProvidesBroadcastService> CLOSED {
    (  $<ProvidesBroadcastService_tes> rdf:type . * ;
       rdf:type [ <ProvidesBroadcastService> ] ?
    )
}

<ProvidesService> CLOSED {
    (  $<ProvidesService_tes> rdf:type . * ;
       rdf:type [ <ProvidesService> ] ?
    )
}

<Psychiatric> CLOSED {
    (  $<Psychiatric_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <Psychiatric> ] ?
    )
}

<PsychologicalTreatment> CLOSED {
    (  $<PsychologicalTreatment_tes> (  &<TherapeuticProcedure_tes> ;
          rdf:type [ <TherapeuticProcedure> ] ?
       ) ;
       rdf:type [ <PsychologicalTreatment> ] ?
    )
}

<PublicAccess> CLOSED {
    (  $<PublicAccess_tes> rdf:type . * ;
       rdf:type [ <PublicAccess> ] ?
    )
}

<Publication> CLOSED {
    (  $<Publication_tes> rdf:type . * ;
       rdf:type [ <Publication> ] ?
    )
}

<PublicationEvent>  (
    CLOSED {
       (  $<PublicationEvent_tes> (  &<Event_tes> ;
             rdf:type [ <Event> ] ? ;
             <free> @<Boolean> * ;
             <publishedBy> @linkml:String * ;
             <publishedOn> @<BroadcastService> *
          ) ;
          rdf:type [ <PublicationEvent> ] ?
       )
    } OR @<BroadcastEvent> OR @<OnDemandEvent>
)

<PublicationIssue>  (
    CLOSED {
       (  $<PublicationIssue_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <issueNumber> @linkml:String * ;
             <pageEnd> @linkml:String * ;
             <pageStart> @linkml:String * ;
             <pagination> @<Text> *
          ) ;
          rdf:type [ <PublicationIssue> ] ?
       )
    } OR @<ComicIssue>
)

<PublicationType> CLOSED {
    (  $<PublicationType_tes> rdf:type . * ;
       rdf:type [ <PublicationType> ] ?
    )
}

<PublicationVolume> CLOSED {
    (  $<PublicationVolume_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <volumeNumber> @linkml:String * ;
          <pageEnd> @linkml:String * ;
          <pageStart> @linkml:String * ;
          <pagination> @<Text> *
       ) ;
       rdf:type [ <PublicationVolume> ] ?
    )
}

<PublicHealth> CLOSED {
    (  $<PublicHealth_tes> (  &<MedicalBusiness_tes> ;
          rdf:type [ <MedicalBusiness> ] ?
       ) ;
       rdf:type [ <PublicHealth> ] ?
    )
}

<PublicHolidays> CLOSED {
    (  $<PublicHolidays_tes> rdf:type . * ;
       rdf:type [ <PublicHolidays> ] ?
    )
}

<PublicSwimmingPool> CLOSED {
    (  $<PublicSwimmingPool_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <PublicSwimmingPool> ] ?
    )
}

<PublicToilet> CLOSED {
    (  $<PublicToilet_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <PublicToilet> ] ?
    )
}

<PublicTransportClosuresInfo> CLOSED {
    (  $<PublicTransportClosuresInfo_tes> rdf:type . * ;
       rdf:type [ <PublicTransportClosuresInfo> ] ?
    )
}

<PublishedBy> CLOSED {
    (  $<PublishedBy_tes> rdf:type . * ;
       rdf:type [ <PublishedBy> ] ?
    )
}

<PublishedOn> CLOSED {
    (  $<PublishedOn_tes> rdf:type . * ;
       rdf:type [ <PublishedOn> ] ?
    )
}

<Publisher> CLOSED {
    (  $<Publisher_tes> rdf:type . * ;
       rdf:type [ <Publisher> ] ?
    )
}

<PublisherImprint> CLOSED {
    (  $<PublisherImprint_tes> rdf:type . * ;
       rdf:type [ <PublisherImprint> ] ?
    )
}

<Pulmonary> CLOSED {
    (  $<Pulmonary_tes> rdf:type . * ;
       rdf:type [ <Pulmonary> ] ?
    )
}

<PurchaseDate> CLOSED {
    (  $<PurchaseDate_tes> rdf:type . * ;
       rdf:type [ <PurchaseDate> ] ?
    )
}

<QAPage> CLOSED {
    (  $<QAPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <QAPage> ] ?
    )
}

<Qualifications> CLOSED {
    (  $<Qualifications_tes> rdf:type . * ;
       rdf:type [ <Qualifications> ] ?
    )
}

<QualitativeValue>  (
    CLOSED {
       (  $<QualitativeValue_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ? ;
             <additionalProperty> @<PropertyValue> * ;
             <equal> @<QualitativeValue> * ;
             <greater> @<QualitativeValue> * ;
             <greaterOrEqual> @<QualitativeValue> * ;
             <lesser> @<QualitativeValue> * ;
             <lesserOrEqual> @<QualitativeValue> * ;
             <nonEqual> @<QualitativeValue> * ;
             <valueReference> @linkml:String *
          ) ;
          rdf:type [ <QualitativeValue> ] ?
       )
    } OR @<BedType> OR @<DriveWheelConfigurationValue> OR @<SizeSpecification> OR @<SteeringPositionValue>
)

<QuantitativeValue> CLOSED {
    (  $<QuantitativeValue_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <additionalProperty> @<PropertyValue> * ;
          <maxValue> @<Number> * ;
          <minValue> @<Number> * ;
          <unitCode> @linkml:String * ;
          <unitText> @<Text> * ;
          <value> @linkml:String * ;
          <valueReference> @linkml:String *
       ) ;
       rdf:type [ <QuantitativeValue> ] ?
    )
}

<QuantitativeValueDistribution>  (
    CLOSED {
       (  $<QuantitativeValueDistribution_tes> (  &<StructuredValue_tes> ;
             rdf:type [ <StructuredValue> ] ? ;
             <duration> @<Duration> * ;
             <median> @<Number> * ;
             <percentile10> @<Number> * ;
             <percentile25> @<Number> * ;
             <percentile75> @<Number> * ;
             <percentile90> @<Number> *
          ) ;
          rdf:type [ <QuantitativeValueDistribution> ] ?
       )
    } OR @<MonetaryAmountDistribution>
)

<Quantity>  (
    CLOSED {
       (  $<Quantity_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ?
          ) ;
          rdf:type [ <Quantity> ] ?
       )
    } OR @<Distance> OR @<Duration> OR @<Energy> OR @<Mass>
)

<QuarantineGuidelines> CLOSED {
    (  $<QuarantineGuidelines_tes> rdf:type . * ;
       rdf:type [ <QuarantineGuidelines> ] ?
    )
}

<Quest> CLOSED {
    (  $<Quest_tes> rdf:type . * ;
       rdf:type [ <Quest> ] ?
    )
}

<Question> CLOSED {
    (  $<Question_tes> (  &<Comment_tes> ;
          rdf:type [ <Comment> ] ? ;
          <acceptedAnswer> @linkml:String * ;
          <suggestedAnswer> @linkml:String * ;
          <answerCount> @<Integer> * ;
          <eduQuestionType> @<Text> *
       ) ;
       rdf:type [ <Question> ] ?
    )
}

<Quiz> CLOSED {
    (  $<Quiz_tes> (  &<LearningResource_tes> ;
          rdf:type [ <LearningResource> ] ?
       ) ;
       rdf:type [ <Quiz> ] ?
    )
}

<Quotation> CLOSED {
    (  $<Quotation_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <spokenByCharacter> @linkml:String *
       ) ;
       rdf:type [ <Quotation> ] ?
    )
}

<QuoteAction> CLOSED {
    (  $<QuoteAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ?
       ) ;
       rdf:type [ <QuoteAction> ] ?
    )
}

<RadiationTherapy> CLOSED {
    (  $<RadiationTherapy_tes> (  &<MedicalTherapy_tes> ;
          rdf:type [ <MedicalTherapy> ] ?
       ) ;
       rdf:type [ <RadiationTherapy> ] ?
    )
}

<RadioBroadcastService> CLOSED {
    (  $<RadioBroadcastService_tes> (  &<BroadcastService_tes> ;
          rdf:type [ <BroadcastService> ] ?
       ) ;
       rdf:type [ <RadioBroadcastService> ] ?
    )
}

<RadioChannel>  (
    CLOSED {
       (  $<RadioChannel_tes> (  &<BroadcastChannel_tes> ;
             rdf:type [ <BroadcastChannel> ] ?
          ) ;
          rdf:type [ <RadioChannel> ] ?
       )
    } OR @<AMRadioChannel> OR @<FMRadioChannel>
)

<RadioClip> CLOSED {
    (  $<RadioClip_tes> (  &<Clip_tes> ;
          rdf:type [ <Clip> ] ?
       ) ;
       rdf:type [ <RadioClip> ] ?
    )
}

<RadioEpisode> CLOSED {
    (  $<RadioEpisode_tes> (  &<Episode_tes> ;
          rdf:type [ <Episode> ] ?
       ) ;
       rdf:type [ <RadioEpisode> ] ?
    )
}

<Radiography> CLOSED {
    (  $<Radiography_tes> rdf:type . * ;
       rdf:type [ <Radiography> ] ?
    )
}

<RadioSeason> CLOSED {
    (  $<RadioSeason_tes> (  &<CreativeWorkSeason_tes> ;
          rdf:type [ <CreativeWorkSeason> ] ?
       ) ;
       rdf:type [ <RadioSeason> ] ?
    )
}

<RadioSeries> CLOSED {
    (  $<RadioSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ? ;
          <actor> @<Person> * ;
          <containsSeason> @<CreativeWorkSeason> * ;
          <episode> @<Episode> * ;
          <season> @<CreativeWork> * ;
          <actors> @<Person> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <episodes> @<Episode> * ;
          <musicBy> @linkml:String * ;
          <numberOfEpisodes> @<Integer> * ;
          <numberOfSeasons> @<Integer> * ;
          <productionCompany> @<Organization> * ;
          <seasons> @<CreativeWorkSeason> * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <RadioSeries> ] ?
    )
}

<RadioStation> CLOSED {
    (  $<RadioStation_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <RadioStation> ] ?
    )
}

<RandomizedTrial> CLOSED {
    (  $<RandomizedTrial_tes> rdf:type . * ;
       rdf:type [ <RandomizedTrial> ] ?
    )
}

<Rating>  (
    CLOSED {
       (  $<Rating_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <author> @linkml:String * ;
             <bestRating> @linkml:String * ;
             <ratingExplanation> @<Text> * ;
             <ratingValue> @linkml:String * ;
             <reviewAspect> @<Text> * ;
             <worstRating> @linkml:String *
          ) ;
          rdf:type [ <Rating> ] ?
       )
    } OR @<AggregateRating> OR @<EndorsementRating>
)

<RatingCount> CLOSED {
    (  $<RatingCount_tes> rdf:type . * ;
       rdf:type [ <RatingCount> ] ?
    )
}

<RatingExplanation> CLOSED {
    (  $<RatingExplanation_tes> rdf:type . * ;
       rdf:type [ <RatingExplanation> ] ?
    )
}

<RatingValue> CLOSED {
    (  $<RatingValue_tes> rdf:type . * ;
       rdf:type [ <RatingValue> ] ?
    )
}

<ReactAction>  (
    CLOSED {
       (  $<ReactAction_tes> (  &<AssessAction_tes> ;
             rdf:type [ <AssessAction> ] ?
          ) ;
          rdf:type [ <ReactAction> ] ?
       )
    } OR @<AgreeAction> OR @<DisagreeAction> OR @<DislikeAction> OR @<EndorseAction> OR @<LikeAction> OR @<WantAction>
)

<ReadAction> CLOSED {
    (  $<ReadAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <ReadAction> ] ?
    )
}

<ReadonlyValue> CLOSED {
    (  $<ReadonlyValue_tes> rdf:type . * ;
       rdf:type [ <ReadonlyValue> ] ?
    )
}

<ReadPermission> CLOSED {
    (  $<ReadPermission_tes> rdf:type . * ;
       rdf:type [ <ReadPermission> ] ?
    )
}

<RealEstateAgent> CLOSED {
    (  $<RealEstateAgent_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <RealEstateAgent> ] ?
    )
}

<RealEstateListing> CLOSED {
    (  $<RealEstateListing_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ? ;
          <datePosted> @linkml:String * ;
          <leaseLength> @linkml:String *
       ) ;
       rdf:type [ <RealEstateListing> ] ?
    )
}

<RearWheelDriveConfiguration> CLOSED {
    (  $<RearWheelDriveConfiguration_tes> rdf:type . * ;
       rdf:type [ <RearWheelDriveConfiguration> ] ?
    )
}

<ReceiveAction> CLOSED {
    (  $<ReceiveAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <deliveryMethod> @<DeliveryMethod> * ;
          <sender> @linkml:String *
       ) ;
       rdf:type [ <ReceiveAction> ] ?
    )
}

<Recipe> CLOSED {
    (  $<Recipe_tes> (  &<HowTo_tes> ;
          rdf:type [ <HowTo> ] ? ;
          <cookTime> @<Duration> * ;
          <ingredients> @<Text> * ;
          <recipeIngredient> @<Text> * ;
          <recipeInstructions> @linkml:String * ;
          <recipeYield> @linkml:String * ;
          <cookingMethod> @<Text> * ;
          <nutrition> @<NutritionInformation> * ;
          <recipeCategory> @<Text> * ;
          <recipeCuisine> @<Text> * ;
          <suitableForDiet> @<RestrictedDiet> *
       ) ;
       rdf:type [ <Recipe> ] ?
    )
}

<RecipeCategory> CLOSED {
    (  $<RecipeCategory_tes> rdf:type . * ;
       rdf:type [ <RecipeCategory> ] ?
    )
}

<RecipeCuisine> CLOSED {
    (  $<RecipeCuisine_tes> rdf:type . * ;
       rdf:type [ <RecipeCuisine> ] ?
    )
}

<RecognizedBy> CLOSED {
    (  $<RecognizedBy_tes> rdf:type . * ;
       rdf:type [ <RecognizedBy> ] ?
    )
}

<RecognizingAuthority> CLOSED {
    (  $<RecognizingAuthority_tes> rdf:type . * ;
       rdf:type [ <RecognizingAuthority> ] ?
    )
}

<Recommendation> CLOSED {
    (  $<Recommendation_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ? ;
          <category> @linkml:String *
       ) ;
       rdf:type [ <Recommendation> ] ?
    )
}

<RecommendationStrength> CLOSED {
    (  $<RecommendationStrength_tes> rdf:type . * ;
       rdf:type [ <RecommendationStrength> ] ?
    )
}

<RecommendedDoseSchedule> CLOSED {
    (  $<RecommendedDoseSchedule_tes> (  &<DoseSchedule_tes> ;
          rdf:type [ <DoseSchedule> ] ?
       ) ;
       rdf:type [ <RecommendedDoseSchedule> ] ?
    )
}

<RecommendedIntake> CLOSED {
    (  $<RecommendedIntake_tes> rdf:type . * ;
       rdf:type [ <RecommendedIntake> ] ?
    )
}

<RecordedAs> CLOSED {
    (  $<RecordedAs_tes> rdf:type . * ;
       rdf:type [ <RecordedAs> ] ?
    )
}

<RecordedAt> CLOSED {
    (  $<RecordedAt_tes> rdf:type . * ;
       rdf:type [ <RecordedAt> ] ?
    )
}

<RecordedIn> CLOSED {
    (  $<RecordedIn_tes> rdf:type . * ;
       rdf:type [ <RecordedIn> ] ?
    )
}

<RecordingOf> CLOSED {
    (  $<RecordingOf_tes> rdf:type . * ;
       rdf:type [ <RecordingOf> ] ?
    )
}

<RecordLabel> CLOSED {
    (  $<RecordLabel_tes> rdf:type . * ;
       rdf:type [ <RecordLabel> ] ?
    )
}

<RecourseLoan> CLOSED {
    (  $<RecourseLoan_tes> rdf:type . * ;
       rdf:type [ <RecourseLoan> ] ?
    )
}

<Recruiting> CLOSED {
    (  $<Recruiting_tes> rdf:type . * ;
       rdf:type [ <Recruiting> ] ?
    )
}

<RecyclingCenter> CLOSED {
    (  $<RecyclingCenter_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <RecyclingCenter> ] ?
    )
}

<ReferenceQuantity> CLOSED {
    (  $<ReferenceQuantity_tes> rdf:type . * ;
       rdf:type [ <ReferenceQuantity> ] ?
    )
}

<ReferencesOrder> CLOSED {
    (  $<ReferencesOrder_tes> rdf:type . * ;
       rdf:type [ <ReferencesOrder> ] ?
    )
}

<RefundType> CLOSED {
    (  $<RefundType_tes> rdf:type . * ;
       rdf:type [ <RefundType> ] ?
    )
}

<RefundTypeEnumeration> CLOSED {
    (  $<RefundTypeEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <RefundTypeEnumeration> ] ?
    )
}

<RefurbishedCondition> CLOSED {
    (  $<RefurbishedCondition_tes> rdf:type . * ;
       rdf:type [ <RefurbishedCondition> ] ?
    )
}

<RegionDrained> CLOSED {
    (  $<RegionDrained_tes> rdf:type . * ;
       rdf:type [ <RegionDrained> ] ?
    )
}

<RegionsAllowed> CLOSED {
    (  $<RegionsAllowed_tes> rdf:type . * ;
       rdf:type [ <RegionsAllowed> ] ?
    )
}

<RegisterAction> CLOSED {
    (  $<RegisterAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ?
       ) ;
       rdf:type [ <RegisterAction> ] ?
    )
}

<Registry> CLOSED {
    (  $<Registry_tes> rdf:type . * ;
       rdf:type [ <Registry> ] ?
    )
}

<ReimbursementCap> CLOSED {
    (  $<ReimbursementCap_tes> rdf:type . * ;
       rdf:type [ <ReimbursementCap> ] ?
    )
}

<RejectAction> CLOSED {
    (  $<RejectAction_tes> (  &<AllocateAction_tes> ;
          rdf:type [ <AllocateAction> ] ?
       ) ;
       rdf:type [ <RejectAction> ] ?
    )
}

<RelatedAnatomy> CLOSED {
    (  $<RelatedAnatomy_tes> rdf:type . * ;
       rdf:type [ <RelatedAnatomy> ] ?
    )
}

<RelatedCondition> CLOSED {
    (  $<RelatedCondition_tes> rdf:type . * ;
       rdf:type [ <RelatedCondition> ] ?
    )
}

<RelatedDrug> CLOSED {
    (  $<RelatedDrug_tes> rdf:type . * ;
       rdf:type [ <RelatedDrug> ] ?
    )
}

<RelatedLink> CLOSED {
    (  $<RelatedLink_tes> rdf:type . * ;
       rdf:type [ <RelatedLink> ] ?
    )
}

<RelatedStructure> CLOSED {
    (  $<RelatedStructure_tes> rdf:type . * ;
       rdf:type [ <RelatedStructure> ] ?
    )
}

<RelatedTherapy> CLOSED {
    (  $<RelatedTherapy_tes> rdf:type . * ;
       rdf:type [ <RelatedTherapy> ] ?
    )
}

<RelatedTo> CLOSED {
    (  $<RelatedTo_tes> rdf:type . * ;
       rdf:type [ <RelatedTo> ] ?
    )
}

<RelatedTopicsHealthAspect> CLOSED {
    (  $<RelatedTopicsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <RelatedTopicsHealthAspect> ] ?
    )
}

<ReleaseDate> CLOSED {
    (  $<ReleaseDate_tes> rdf:type . * ;
       rdf:type [ <ReleaseDate> ] ?
    )
}

<ReleasedEvent> CLOSED {
    (  $<ReleasedEvent_tes> rdf:type . * ;
       rdf:type [ <ReleasedEvent> ] ?
    )
}

<ReleaseNotes> CLOSED {
    (  $<ReleaseNotes_tes> rdf:type . * ;
       rdf:type [ <ReleaseNotes> ] ?
    )
}

<ReleaseOf> CLOSED {
    (  $<ReleaseOf_tes> rdf:type . * ;
       rdf:type [ <ReleaseOf> ] ?
    )
}

<RelevantOccupation> CLOSED {
    (  $<RelevantOccupation_tes> rdf:type . * ;
       rdf:type [ <RelevantOccupation> ] ?
    )
}

<RelevantSpecialty> CLOSED {
    (  $<RelevantSpecialty_tes> rdf:type . * ;
       rdf:type [ <RelevantSpecialty> ] ?
    )
}

<RemainingAttendeeCapacity> CLOSED {
    (  $<RemainingAttendeeCapacity_tes> rdf:type . * ;
       rdf:type [ <RemainingAttendeeCapacity> ] ?
    )
}

<RemixAlbum> CLOSED {
    (  $<RemixAlbum_tes> rdf:type . * ;
       rdf:type [ <RemixAlbum> ] ?
    )
}

<Renal> CLOSED {
    (  $<Renal_tes> rdf:type . * ;
       rdf:type [ <Renal> ] ?
    )
}

<RenegotiableLoan> CLOSED {
    (  $<RenegotiableLoan_tes> rdf:type . * ;
       rdf:type [ <RenegotiableLoan> ] ?
    )
}

<RentAction> CLOSED {
    (  $<RentAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <landlord> @linkml:String * ;
          <realEstateAgent> @<RealEstateAgent> *
       ) ;
       rdf:type [ <RentAction> ] ?
    )
}

<RentalCarReservation> CLOSED {
    (  $<RentalCarReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <dropoffLocation> @<Place> * ;
          <dropoffTime> @<DateTime> * ;
          <pickupLocation> @<Place> * ;
          <pickupTime> @<DateTime> *
       ) ;
       rdf:type [ <RentalCarReservation> ] ?
    )
}

<RentalVehicleUsage> CLOSED {
    (  $<RentalVehicleUsage_tes> rdf:type . * ;
       rdf:type [ <RentalVehicleUsage> ] ?
    )
}

<RepaymentSpecification> CLOSED {
    (  $<RepaymentSpecification_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <downPayment> @linkml:String * ;
          <earlyPrepaymentPenalty> @<MonetaryAmount> * ;
          <loanPaymentAmount> @<MonetaryAmount> * ;
          <loanPaymentFrequency> @<Number> * ;
          <numberOfLoanPayments> @<Number> *
       ) ;
       rdf:type [ <RepaymentSpecification> ] ?
    )
}

<RepeatCount> CLOSED {
    (  $<RepeatCount_tes> rdf:type . * ;
       rdf:type [ <RepeatCount> ] ?
    )
}

<Repetitions> CLOSED {
    (  $<Repetitions_tes> rdf:type . * ;
       rdf:type [ <Repetitions> ] ?
    )
}

<ReplaceAction> CLOSED {
    (  $<ReplaceAction_tes> (  &<UpdateAction_tes> ;
          rdf:type [ <UpdateAction> ] ? ;
          <replacee> @<Thing> * ;
          <replacer> @<Thing> *
       ) ;
       rdf:type [ <ReplaceAction> ] ?
    )
}

<ReplyAction> CLOSED {
    (  $<ReplyAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ? ;
          <resultComment> @<Comment> *
       ) ;
       rdf:type [ <ReplyAction> ] ?
    )
}

<ReplyToUrl> CLOSED {
    (  $<ReplyToUrl_tes> rdf:type . * ;
       rdf:type [ <ReplyToUrl> ] ?
    )
}

<Report> CLOSED {
    (  $<Report_tes> (  &<Article_tes> ;
          rdf:type [ <Article> ] ? ;
          <reportNumber> @<Text> *
       ) ;
       rdf:type [ <Report> ] ?
    )
}

<ReportageNewsArticle> CLOSED {
    (  $<ReportageNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ?
       ) ;
       rdf:type [ <ReportageNewsArticle> ] ?
    )
}

<ReportedDoseSchedule> CLOSED {
    (  $<ReportedDoseSchedule_tes> (  &<DoseSchedule_tes> ;
          rdf:type [ <DoseSchedule> ] ?
       ) ;
       rdf:type [ <ReportedDoseSchedule> ] ?
    )
}

<ReportNumber> CLOSED {
    (  $<ReportNumber_tes> rdf:type . * ;
       rdf:type [ <ReportNumber> ] ?
    )
}

<RepresentativeOfPage> CLOSED {
    (  $<RepresentativeOfPage_tes> rdf:type . * ;
       rdf:type [ <RepresentativeOfPage> ] ?
    )
}

<RequiredCollateral> CLOSED {
    (  $<RequiredCollateral_tes> rdf:type . * ;
       rdf:type [ <RequiredCollateral> ] ?
    )
}

<RequiredGender> CLOSED {
    (  $<RequiredGender_tes> rdf:type . * ;
       rdf:type [ <RequiredGender> ] ?
    )
}

<RequiredMaxAge> CLOSED {
    (  $<RequiredMaxAge_tes> rdf:type . * ;
       rdf:type [ <RequiredMaxAge> ] ?
    )
}

<RequiredMinAge> CLOSED {
    (  $<RequiredMinAge_tes> rdf:type . * ;
       rdf:type [ <RequiredMinAge> ] ?
    )
}

<RequiredQuantity> CLOSED {
    (  $<RequiredQuantity_tes> rdf:type . * ;
       rdf:type [ <RequiredQuantity> ] ?
    )
}

<Requirements> CLOSED {
    (  $<Requirements_tes> rdf:type . * ;
       rdf:type [ <Requirements> ] ?
    )
}

<RequiresSubscription> CLOSED {
    (  $<RequiresSubscription_tes> rdf:type . * ;
       rdf:type [ <RequiresSubscription> ] ?
    )
}

<Researcher> CLOSED {
    (  $<Researcher_tes> (  &<Audience_tes> ;
          rdf:type [ <Audience> ] ?
       ) ;
       rdf:type [ <Researcher> ] ?
    )
}

<ResearchOrganization> CLOSED {
    (  $<ResearchOrganization_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <ResearchOrganization> ] ?
    )
}

<ResearchProject> CLOSED {
    (  $<ResearchProject_tes> (  &<Project_tes> ;
          rdf:type [ <Project> ] ?
       ) ;
       rdf:type [ <ResearchProject> ] ?
    )
}

<Reservation>  (
    CLOSED {
       (  $<Reservation_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <bookingAgent> @linkml:String * ;
             <bookingTime> @<DateTime> * ;
             <broker> @linkml:String * ;
             <modifiedTime> @<DateTime> * ;
             <priceCurrency> @<Text> * ;
             <programMembershipUsed> @<ProgramMembership> * ;
             <provider> @linkml:String * ;
             <reservationFor> @<Thing> * ;
             <reservationId> @<Text> * ;
             <reservationStatus> @<ReservationStatusType> * ;
             <reservedTicket> @<Ticket> * ;
             <totalPrice> @linkml:String * ;
             <underName> @linkml:String *
          ) ;
          rdf:type [ <Reservation> ] ?
       )
    } OR @<BoatReservation> OR @<BusReservation> OR @<EventReservation> OR @<FlightReservation> OR @<FoodEstablishmentReservation>
    OR @<LodgingReservation> OR @<RentalCarReservation> OR @<ReservationPackage> OR @<TaxiReservation> OR @<TrainReservation>
)

<ReservationCancelled> CLOSED {
    (  $<ReservationCancelled_tes> rdf:type . * ;
       rdf:type [ <ReservationCancelled> ] ?
    )
}

<ReservationConfirmed> CLOSED {
    (  $<ReservationConfirmed_tes> rdf:type . * ;
       rdf:type [ <ReservationConfirmed> ] ?
    )
}

<ReservationFor> CLOSED {
    (  $<ReservationFor_tes> rdf:type . * ;
       rdf:type [ <ReservationFor> ] ?
    )
}

<ReservationHold> CLOSED {
    (  $<ReservationHold_tes> rdf:type . * ;
       rdf:type [ <ReservationHold> ] ?
    )
}

<ReservationId> CLOSED {
    (  $<ReservationId_tes> rdf:type . * ;
       rdf:type [ <ReservationId> ] ?
    )
}

<ReservationPackage> CLOSED {
    (  $<ReservationPackage_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <subReservation> @<Reservation> *
       ) ;
       rdf:type [ <ReservationPackage> ] ?
    )
}

<ReservationPending> CLOSED {
    (  $<ReservationPending_tes> rdf:type . * ;
       rdf:type [ <ReservationPending> ] ?
    )
}

<ReservationStatus> CLOSED {
    (  $<ReservationStatus_tes> rdf:type . * ;
       rdf:type [ <ReservationStatus> ] ?
    )
}

<ReservationStatusType> CLOSED {
    (  $<ReservationStatusType_tes> (  &<StatusEnumeration_tes> ;
          rdf:type [ <StatusEnumeration> ] ?
       ) ;
       rdf:type [ <ReservationStatusType> ] ?
    )
}

<ReserveAction> CLOSED {
    (  $<ReserveAction_tes> (  &<PlanAction_tes> ;
          rdf:type [ <PlanAction> ] ?
       ) ;
       rdf:type [ <ReserveAction> ] ?
    )
}

<ReservedTicket> CLOSED {
    (  $<ReservedTicket_tes> rdf:type . * ;
       rdf:type [ <ReservedTicket> ] ?
    )
}

<Reservoir> CLOSED {
    (  $<Reservoir_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <Reservoir> ] ?
    )
}

<Residence>  (
    CLOSED {
       (  $<Residence_tes> (  &<Place_tes> ;
             rdf:type [ <Place> ] ? ;
             <accommodationFloorPlan> @<FloorPlan> *
          ) ;
          rdf:type [ <Residence> ] ?
       )
    } OR @<ApartmentComplex> OR @<GatedResidenceCommunity>
)

<Resort> CLOSED {
    (  $<Resort_tes> (  &<LodgingBusiness_tes> ;
          rdf:type [ <LodgingBusiness> ] ?
       ) ;
       rdf:type [ <Resort> ] ?
    )
}

<RespiratoryTherapy> CLOSED {
    (  $<RespiratoryTherapy_tes> (  &<MedicalTherapy_tes> ;
          rdf:type [ <MedicalTherapy> ] ?
       ) ;
       rdf:type [ <RespiratoryTherapy> ] ?
    )
}

<Responsibilities> CLOSED {
    (  $<Responsibilities_tes> rdf:type . * ;
       rdf:type [ <Responsibilities> ] ?
    )
}

<Restaurant> CLOSED {
    (  $<Restaurant_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <Restaurant> ] ?
    )
}

<RestockingFee> CLOSED {
    (  $<RestockingFee_tes> rdf:type . * ;
       rdf:type [ <RestockingFee> ] ?
    )
}

<RestockingFees> CLOSED {
    (  $<RestockingFees_tes> rdf:type . * ;
       rdf:type [ <RestockingFees> ] ?
    )
}

<RestPeriods> CLOSED {
    (  $<RestPeriods_tes> rdf:type . * ;
       rdf:type [ <RestPeriods> ] ?
    )
}

<RestrictedDiet> CLOSED {
    (  $<RestrictedDiet_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <RestrictedDiet> ] ?
    )
}

<ResultsAvailable> CLOSED {
    (  $<ResultsAvailable_tes> rdf:type . * ;
       rdf:type [ <ResultsAvailable> ] ?
    )
}

<ResultsNotAvailable> CLOSED {
    (  $<ResultsNotAvailable_tes> rdf:type . * ;
       rdf:type [ <ResultsNotAvailable> ] ?
    )
}

<ResumeAction> CLOSED {
    (  $<ResumeAction_tes> (  &<ControlAction_tes> ;
          rdf:type [ <ControlAction> ] ?
       ) ;
       rdf:type [ <ResumeAction> ] ?
    )
}

<Retail> CLOSED {
    (  $<Retail_tes> rdf:type . * ;
       rdf:type [ <Retail> ] ?
    )
}

<ReturnAction> CLOSED {
    (  $<ReturnAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <ReturnAction> ] ?
    )
}

<ReturnAtKiosk> CLOSED {
    (  $<ReturnAtKiosk_tes> rdf:type . * ;
       rdf:type [ <ReturnAtKiosk> ] ?
    )
}

<ReturnByMail> CLOSED {
    (  $<ReturnByMail_tes> rdf:type . * ;
       rdf:type [ <ReturnByMail> ] ?
    )
}

<ReturnFees> CLOSED {
    (  $<ReturnFees_tes> rdf:type . * ;
       rdf:type [ <ReturnFees> ] ?
    )
}

<ReturnFeesCustomerResponsibility> CLOSED {
    (  $<ReturnFeesCustomerResponsibility_tes> rdf:type . * ;
       rdf:type [ <ReturnFeesCustomerResponsibility> ] ?
    )
}

<ReturnFeesEnumeration> CLOSED {
    (  $<ReturnFeesEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ReturnFeesEnumeration> ] ?
    )
}

<ReturnInStore> CLOSED {
    (  $<ReturnInStore_tes> rdf:type . * ;
       rdf:type [ <ReturnInStore> ] ?
    )
}

<ReturnLabelCustomerResponsibility> CLOSED {
    (  $<ReturnLabelCustomerResponsibility_tes> rdf:type . * ;
       rdf:type [ <ReturnLabelCustomerResponsibility> ] ?
    )
}

<ReturnLabelDownloadAndPrint> CLOSED {
    (  $<ReturnLabelDownloadAndPrint_tes> rdf:type . * ;
       rdf:type [ <ReturnLabelDownloadAndPrint> ] ?
    )
}

<ReturnLabelInBox> CLOSED {
    (  $<ReturnLabelInBox_tes> rdf:type . * ;
       rdf:type [ <ReturnLabelInBox> ] ?
    )
}

<ReturnLabelSource> CLOSED {
    (  $<ReturnLabelSource_tes> rdf:type . * ;
       rdf:type [ <ReturnLabelSource> ] ?
    )
}

<ReturnLabelSourceEnumeration> CLOSED {
    (  $<ReturnLabelSourceEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ReturnLabelSourceEnumeration> ] ?
    )
}

<ReturnMethod> CLOSED {
    (  $<ReturnMethod_tes> rdf:type . * ;
       rdf:type [ <ReturnMethod> ] ?
    )
}

<ReturnMethodEnumeration> CLOSED {
    (  $<ReturnMethodEnumeration_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <ReturnMethodEnumeration> ] ?
    )
}

<ReturnPolicyCategory> CLOSED {
    (  $<ReturnPolicyCategory_tes> rdf:type . * ;
       rdf:type [ <ReturnPolicyCategory> ] ?
    )
}

<ReturnPolicyCountry> CLOSED {
    (  $<ReturnPolicyCountry_tes> rdf:type . * ;
       rdf:type [ <ReturnPolicyCountry> ] ?
    )
}

<ReturnPolicySeasonalOverride> CLOSED {
    (  $<ReturnPolicySeasonalOverride_tes> rdf:type . * ;
       rdf:type [ <ReturnPolicySeasonalOverride> ] ?
    )
}

<ReturnShippingFees> CLOSED {
    (  $<ReturnShippingFees_tes> rdf:type . * ;
       rdf:type [ <ReturnShippingFees> ] ?
    )
}

<ReturnShippingFeesAmount> CLOSED {
    (  $<ReturnShippingFeesAmount_tes> rdf:type . * ;
       rdf:type [ <ReturnShippingFeesAmount> ] ?
    )
}

<Review>  (
    CLOSED {
       (  $<Review_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <associatedClaimReview> @<Review> * ;
             <associatedMediaReview> @<Review> * ;
             <associatedReview> @<Review> * ;
             <itemReviewed> @<Thing> * ;
             <negativeNotes> @linkml:String * ;
             <positiveNotes> @linkml:String * ;
             <reviewAspect> @<Text> * ;
             <reviewBody> @<Text> * ;
             <reviewRating> @<Rating> *
          ) ;
          rdf:type [ <Review> ] ?
       )
    } OR @<ClaimReview> OR @<CriticReview> OR @<EmployerReview> OR @<MediaReview> OR @<Recommendation> OR @<UserReview>
)

<Review> CLOSED {
    (  $<Review_tes> rdf:type . * ;
       rdf:type [ <Review> ] ?
    )
}

<ReviewAction> CLOSED {
    (  $<ReviewAction_tes> (  &<AssessAction_tes> ;
          rdf:type [ <AssessAction> ] ? ;
          <resultReview> @<Review> *
       ) ;
       rdf:type [ <ReviewAction> ] ?
    )
}

<ReviewAspect> CLOSED {
    (  $<ReviewAspect_tes> rdf:type . * ;
       rdf:type [ <ReviewAspect> ] ?
    )
}

<ReviewBody> CLOSED {
    (  $<ReviewBody_tes> rdf:type . * ;
       rdf:type [ <ReviewBody> ] ?
    )
}

<ReviewCount> CLOSED {
    (  $<ReviewCount_tes> rdf:type . * ;
       rdf:type [ <ReviewCount> ] ?
    )
}

<ReviewedBy> CLOSED {
    (  $<ReviewedBy_tes> rdf:type . * ;
       rdf:type [ <ReviewedBy> ] ?
    )
}

<ReviewNewsArticle> CLOSED {
    (  $<ReviewNewsArticle_tes> (  &<NewsArticle_tes> ;
          rdf:type [ <NewsArticle> ] ? ;
          &<CriticReview_tes> ;
          rdf:type [ <CriticReview> ] ? ;
          <associatedClaimReview> @<Review> * ;
          <associatedMediaReview> @<Review> * ;
          <associatedReview> @<Review> * ;
          <itemReviewed> @<Thing> * ;
          <negativeNotes> @linkml:String * ;
          <positiveNotes> @linkml:String * ;
          <reviewAspect> @<Text> * ;
          <reviewBody> @<Text> * ;
          <reviewRating> @<Rating> *
       ) ;
       rdf:type [ <ReviewNewsArticle> ] ?
    )
}

<ReviewRating> CLOSED {
    (  $<ReviewRating_tes> rdf:type . * ;
       rdf:type [ <ReviewRating> ] ?
    )
}

<Reviews> CLOSED {
    (  $<Reviews_tes> rdf:type . * ;
       rdf:type [ <Reviews> ] ?
    )
}

<Rheumatologic> CLOSED {
    (  $<Rheumatologic_tes> rdf:type . * ;
       rdf:type [ <Rheumatologic> ] ?
    )
}

<RightHandDriving> CLOSED {
    (  $<RightHandDriving_tes> rdf:type . * ;
       rdf:type [ <RightHandDriving> ] ?
    )
}

<RiskFactor> CLOSED {
    (  $<RiskFactor_tes> rdf:type . * ;
       rdf:type [ <RiskFactor> ] ?
    )
}

<Risks> CLOSED {
    (  $<Risks_tes> rdf:type . * ;
       rdf:type [ <Risks> ] ?
    )
}

<RisksOrComplicationsHealthAspect> CLOSED {
    (  $<RisksOrComplicationsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <RisksOrComplicationsHealthAspect> ] ?
    )
}

<RiverBodyOfWater> CLOSED {
    (  $<RiverBodyOfWater_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <RiverBodyOfWater> ] ?
    )
}

<Role>  (
    CLOSED {
       (  $<Role_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <endDate> @linkml:String * ;
             <namedPosition> @linkml:String * ;
             <roleName> @linkml:String * ;
             <startDate> @linkml:String *
          ) ;
          rdf:type [ <Role> ] ?
       )
    } OR @<LinkRole> OR @<OrganizationRole> OR @<PerformanceRole>
)

<RoleName> CLOSED {
    (  $<RoleName_tes> rdf:type . * ;
       rdf:type [ <RoleName> ] ?
    )
}

<RoofingContractor> CLOSED {
    (  $<RoofingContractor_tes> (  &<HomeAndConstructionBusiness_tes> ;
          rdf:type [ <HomeAndConstructionBusiness> ] ?
       ) ;
       rdf:type [ <RoofingContractor> ] ?
    )
}

<RoofLoad> CLOSED {
    (  $<RoofLoad_tes> rdf:type . * ;
       rdf:type [ <RoofLoad> ] ?
    )
}

<Room>  (
    CLOSED {
       (  $<Room_tes> (  &<Accommodation_tes> ;
             rdf:type [ <Accommodation> ] ?
          ) ;
          rdf:type [ <Room> ] ?
       )
    } OR @<HotelRoom> OR @<MeetingRoom>
)

<RsvpAction> CLOSED {
    (  $<RsvpAction_tes> (  &<InformAction_tes> ;
          rdf:type [ <InformAction> ] ? ;
          <additionalNumberOfGuests> @<Number> * ;
          <comment> @<Comment> * ;
          <rsvpResponse> @<RsvpResponseType> *
       ) ;
       rdf:type [ <RsvpAction> ] ?
    )
}

<RsvpResponse> CLOSED {
    (  $<RsvpResponse_tes> rdf:type . * ;
       rdf:type [ <RsvpResponse> ] ?
    )
}

<RsvpResponseMaybe> CLOSED {
    (  $<RsvpResponseMaybe_tes> rdf:type . * ;
       rdf:type [ <RsvpResponseMaybe> ] ?
    )
}

<RsvpResponseNo> CLOSED {
    (  $<RsvpResponseNo_tes> rdf:type . * ;
       rdf:type [ <RsvpResponseNo> ] ?
    )
}

<RsvpResponseType> CLOSED {
    (  $<RsvpResponseType_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <RsvpResponseType> ] ?
    )
}

<RsvpResponseYes> CLOSED {
    (  $<RsvpResponseYes_tes> rdf:type . * ;
       rdf:type [ <RsvpResponseYes> ] ?
    )
}

<RunsTo> CLOSED {
    (  $<RunsTo_tes> rdf:type . * ;
       rdf:type [ <RunsTo> ] ?
    )
}

<Runtime> CLOSED {
    (  $<Runtime_tes> rdf:type . * ;
       rdf:type [ <Runtime> ] ?
    )
}

<RuntimePlatform> CLOSED {
    (  $<RuntimePlatform_tes> rdf:type . * ;
       rdf:type [ <RuntimePlatform> ] ?
    )
}

<RVPark> CLOSED {
    (  $<RVPark_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <RVPark> ] ?
    )
}

<Rxcui> CLOSED {
    (  $<Rxcui_tes> rdf:type . * ;
       rdf:type [ <Rxcui> ] ?
    )
}

<SafetyConsideration> CLOSED {
    (  $<SafetyConsideration_tes> rdf:type . * ;
       rdf:type [ <SafetyConsideration> ] ?
    )
}

<SafetyHealthAspect> CLOSED {
    (  $<SafetyHealthAspect_tes> rdf:type . * ;
       rdf:type [ <SafetyHealthAspect> ] ?
    )
}

<SalaryCurrency> CLOSED {
    (  $<SalaryCurrency_tes> rdf:type . * ;
       rdf:type [ <SalaryCurrency> ] ?
    )
}

<SalaryUponCompletion> CLOSED {
    (  $<SalaryUponCompletion_tes> rdf:type . * ;
       rdf:type [ <SalaryUponCompletion> ] ?
    )
}

<SaleEvent> CLOSED {
    (  $<SaleEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <SaleEvent> ] ?
    )
}

<SalePrice> CLOSED {
    (  $<SalePrice_tes> rdf:type . * ;
       rdf:type [ <SalePrice> ] ?
    )
}

<SampleType> CLOSED {
    (  $<SampleType_tes> rdf:type . * ;
       rdf:type [ <SampleType> ] ?
    )
}

<SatireOrParodyContent> CLOSED {
    (  $<SatireOrParodyContent_tes> rdf:type . * ;
       rdf:type [ <SatireOrParodyContent> ] ?
    )
}

<SatiricalArticle> CLOSED {
    (  $<SatiricalArticle_tes> (  &<Article_tes> ;
          rdf:type [ <Article> ] ?
       ) ;
       rdf:type [ <SatiricalArticle> ] ?
    )
}

<SaturatedFatContent> CLOSED {
    (  $<SaturatedFatContent_tes> rdf:type . * ;
       rdf:type [ <SaturatedFatContent> ] ?
    )
}

<Saturday> CLOSED {
    (  $<Saturday_tes> rdf:type . * ;
       rdf:type [ <Saturday> ] ?
    )
}

<Schedule> CLOSED {
    (  $<Schedule_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <duration> @<Duration> * ;
          <repeatFrequency> @<Text> * ;
          <byDay> @linkml:String * ;
          <byMonth> @<Integer> * ;
          <byMonthDay> @<Integer> * ;
          <byMonthWeek> @<Integer> * ;
          <endDate> @linkml:String * ;
          <endTime> @linkml:String * ;
          <exceptDate> @linkml:String * ;
          <repeatCount> @<Integer> * ;
          <scheduleTimezone> @<Text> * ;
          <startDate> @linkml:String * ;
          <startTime> @linkml:String *
       ) ;
       rdf:type [ <Schedule> ] ?
    )
}

<ScheduleAction> CLOSED {
    (  $<ScheduleAction_tes> (  &<PlanAction_tes> ;
          rdf:type [ <PlanAction> ] ?
       ) ;
       rdf:type [ <ScheduleAction> ] ?
    )
}

<ScheduledPaymentDate> CLOSED {
    (  $<ScheduledPaymentDate_tes> rdf:type . * ;
       rdf:type [ <ScheduledPaymentDate> ] ?
    )
}

<ScheduledTime> CLOSED {
    (  $<ScheduledTime_tes> rdf:type . * ;
       rdf:type [ <ScheduledTime> ] ?
    )
}

<ScheduleTimezone> CLOSED {
    (  $<ScheduleTimezone_tes> rdf:type . * ;
       rdf:type [ <ScheduleTimezone> ] ?
    )
}

<SchemaVersion> CLOSED {
    (  $<SchemaVersion_tes> rdf:type . * ;
       rdf:type [ <SchemaVersion> ] ?
    )
}

<ScholarlyArticle>  (
    CLOSED {
       (  $<ScholarlyArticle_tes> (  &<Article_tes> ;
             rdf:type [ <Article> ] ?
          ) ;
          rdf:type [ <ScholarlyArticle> ] ?
       )
    } OR @<MedicalScholarlyArticle>
)

<School> CLOSED {
    (  $<School_tes> (  &<EducationalOrganization_tes> ;
          rdf:type [ <EducationalOrganization> ] ?
       ) ;
       rdf:type [ <School> ] ?
    )
}

<SchoolClosuresInfo> CLOSED {
    (  $<SchoolClosuresInfo_tes> rdf:type . * ;
       rdf:type [ <SchoolClosuresInfo> ] ?
    )
}

<SchoolDistrict> CLOSED {
    (  $<SchoolDistrict_tes> (  &<AdministrativeArea_tes> ;
          rdf:type [ <AdministrativeArea> ] ?
       ) ;
       rdf:type [ <SchoolDistrict> ] ?
    )
}

<ScreenCount> CLOSED {
    (  $<ScreenCount_tes> rdf:type . * ;
       rdf:type [ <ScreenCount> ] ?
    )
}

<ScreeningEvent> CLOSED {
    (  $<ScreeningEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          <workPresented> @<Movie> * ;
          <subtitleLanguage> @linkml:String * ;
          <videoFormat> @<Text> *
       ) ;
       rdf:type [ <ScreeningEvent> ] ?
    )
}

<ScreeningHealthAspect> CLOSED {
    (  $<ScreeningHealthAspect_tes> rdf:type . * ;
       rdf:type [ <ScreeningHealthAspect> ] ?
    )
}

<Screenshot> CLOSED {
    (  $<Screenshot_tes> rdf:type . * ;
       rdf:type [ <Screenshot> ] ?
    )
}

<Sculpture> CLOSED {
    (  $<Sculpture_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Sculpture> ] ?
    )
}

<SdDatePublished> CLOSED {
    (  $<SdDatePublished_tes> rdf:type . * ;
       rdf:type [ <SdDatePublished> ] ?
    )
}

<SdLicense> CLOSED {
    (  $<SdLicense_tes> rdf:type . * ;
       rdf:type [ <SdLicense> ] ?
    )
}

<SdPublisher> CLOSED {
    (  $<SdPublisher_tes> rdf:type . * ;
       rdf:type [ <SdPublisher> ] ?
    )
}

<SeaBodyOfWater> CLOSED {
    (  $<SeaBodyOfWater_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <SeaBodyOfWater> ] ?
    )
}

<SearchAction> CLOSED {
    (  $<SearchAction_tes> (  &<Action_tes> ;
          rdf:type [ <Action> ] ? ;
          <query> @<Text> *
       ) ;
       rdf:type [ <SearchAction> ] ?
    )
}

<SearchResultsPage> CLOSED {
    (  $<SearchResultsPage_tes> (  &<WebPage_tes> ;
          rdf:type [ <WebPage> ] ?
       ) ;
       rdf:type [ <SearchResultsPage> ] ?
    )
}

<Season> CLOSED {
    (  $<Season_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Season> ] ?
    )
}

<Seasons> CLOSED {
    (  $<Seasons_tes> rdf:type . * ;
       rdf:type [ <Seasons> ] ?
    )
}

<Seat> CLOSED {
    (  $<Seat_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <seatNumber> @<Text> * ;
          <seatRow> @<Text> * ;
          <seatSection> @<Text> * ;
          <seatingType> @linkml:String *
       ) ;
       rdf:type [ <Seat> ] ?
    )
}

<SeatingCapacity> CLOSED {
    (  $<SeatingCapacity_tes> rdf:type . * ;
       rdf:type [ <SeatingCapacity> ] ?
    )
}

<SeatingMap> CLOSED {
    (  $<SeatingMap_tes> rdf:type . * ;
       rdf:type [ <SeatingMap> ] ?
    )
}

<SeatingType> CLOSED {
    (  $<SeatingType_tes> rdf:type . * ;
       rdf:type [ <SeatingType> ] ?
    )
}

<SeatNumber> CLOSED {
    (  $<SeatNumber_tes> rdf:type . * ;
       rdf:type [ <SeatNumber> ] ?
    )
}

<SeatRow> CLOSED {
    (  $<SeatRow_tes> rdf:type . * ;
       rdf:type [ <SeatRow> ] ?
    )
}

<SeatSection> CLOSED {
    (  $<SeatSection_tes> rdf:type . * ;
       rdf:type [ <SeatSection> ] ?
    )
}

<SecondaryPrevention> CLOSED {
    (  $<SecondaryPrevention_tes> rdf:type . * ;
       rdf:type [ <SecondaryPrevention> ] ?
    )
}

<SecurityClearanceRequirement> CLOSED {
    (  $<SecurityClearanceRequirement_tes> rdf:type . * ;
       rdf:type [ <SecurityClearanceRequirement> ] ?
    )
}

<SecurityScreening> CLOSED {
    (  $<SecurityScreening_tes> rdf:type . * ;
       rdf:type [ <SecurityScreening> ] ?
    )
}

<SeeDoctorHealthAspect> CLOSED {
    (  $<SeeDoctorHealthAspect_tes> rdf:type . * ;
       rdf:type [ <SeeDoctorHealthAspect> ] ?
    )
}

<Seeks> CLOSED {
    (  $<Seeks_tes> rdf:type . * ;
       rdf:type [ <Seeks> ] ?
    )
}

<SeekToAction> CLOSED {
    (  $<SeekToAction_tes> (  &<Action_tes> ;
          rdf:type [ <Action> ] ? ;
          <startOffset> @linkml:String *
       ) ;
       rdf:type [ <SeekToAction> ] ?
    )
}

<SelfCareHealthAspect> CLOSED {
    (  $<SelfCareHealthAspect_tes> rdf:type . * ;
       rdf:type [ <SelfCareHealthAspect> ] ?
    )
}

<SelfStorage> CLOSED {
    (  $<SelfStorage_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <SelfStorage> ] ?
    )
}

<SellAction> CLOSED {
    (  $<SellAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <buyer> @linkml:String * ;
          <warrantyPromise> @<WarrantyPromise> *
       ) ;
       rdf:type [ <SellAction> ] ?
    )
}

<SendAction> CLOSED {
    (  $<SendAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ? ;
          <deliveryMethod> @<DeliveryMethod> * ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <SendAction> ] ?
    )
}

<SensoryRequirement> CLOSED {
    (  $<SensoryRequirement_tes> rdf:type . * ;
       rdf:type [ <SensoryRequirement> ] ?
    )
}

<SensoryUnit> CLOSED {
    (  $<SensoryUnit_tes> rdf:type . * ;
       rdf:type [ <SensoryUnit> ] ?
    )
}

<Series>  (
    CLOSED {
       (  $<Series_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ?
          ) ;
          rdf:type [ <Series> ] ?
       )
    } OR @<CreativeWorkSeries>
)

<SeriousAdverseOutcome> CLOSED {
    (  $<SeriousAdverseOutcome_tes> rdf:type . * ;
       rdf:type [ <SeriousAdverseOutcome> ] ?
    )
}

<ServerStatus> CLOSED {
    (  $<ServerStatus_tes> rdf:type . * ;
       rdf:type [ <ServerStatus> ] ?
    )
}

<ServesCuisine> CLOSED {
    (  $<ServesCuisine_tes> rdf:type . * ;
       rdf:type [ <ServesCuisine> ] ?
    )
}

<Service>  (
    CLOSED {
       (  $<Service_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <areaServed> @linkml:String * ;
             <category> @linkml:String * ;
             <logo> @linkml:String * ;
             <aggregateRating> @<AggregateRating> * ;
             <audience> @<Audience> * ;
             <availableChannel> @<ServiceChannel> * ;
             <award> @<Text> * ;
             <brand> @linkml:String * ;
             <broker> @linkml:String * ;
             <hasOfferCatalog> @<OfferCatalog> * ;
             <hoursAvailable> @<OpeningHoursSpecification> * ;
             <isRelatedTo> @linkml:String * ;
             <isSimilarTo> @linkml:String * ;
             <offers> @linkml:String * ;
             <produces> @<Thing> * ;
             <provider> @linkml:String * ;
             <providerMobility> @<Text> * ;
             <review> @<Review> * ;
             <serviceArea> @linkml:String * ;
             <serviceAudience> @<Audience> * ;
             <serviceOutput> @<Thing> * ;
             <serviceType> @linkml:String * ;
             <slogan> @<Text> * ;
             <termsOfService> @linkml:String *
          ) ;
          rdf:type [ <Service> ] ?
       )
    } OR @<BroadcastService> OR @<CableOrSatelliteService> OR @<FinancialProduct> OR @<FoodService> OR @<GovernmentService> OR
    @<Taxi> OR @<TaxiService> OR @<WebAPI>
)

<ServiceArea> CLOSED {
    (  $<ServiceArea_tes> rdf:type . * ;
       rdf:type [ <ServiceArea> ] ?
    )
}

<ServiceAudience> CLOSED {
    (  $<ServiceAudience_tes> rdf:type . * ;
       rdf:type [ <ServiceAudience> ] ?
    )
}

<ServiceChannel> CLOSED {
    (  $<ServiceChannel_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <availableLanguage> @linkml:String * ;
          <processingTime> @<Duration> * ;
          <providesService> @<Service> * ;
          <serviceLocation> @<Place> * ;
          <servicePhone> @<ContactPoint> * ;
          <servicePostalAddress> @<PostalAddress> * ;
          <serviceSmsNumber> @<ContactPoint> * ;
          <serviceUrl> @<URL> *
       ) ;
       rdf:type [ <ServiceChannel> ] ?
    )
}

<ServiceLocation> CLOSED {
    (  $<ServiceLocation_tes> rdf:type . * ;
       rdf:type [ <ServiceLocation> ] ?
    )
}

<ServiceOperator> CLOSED {
    (  $<ServiceOperator_tes> rdf:type . * ;
       rdf:type [ <ServiceOperator> ] ?
    )
}

<ServiceOutput> CLOSED {
    (  $<ServiceOutput_tes> rdf:type . * ;
       rdf:type [ <ServiceOutput> ] ?
    )
}

<ServicePhone> CLOSED {
    (  $<ServicePhone_tes> rdf:type . * ;
       rdf:type [ <ServicePhone> ] ?
    )
}

<ServicePostalAddress> CLOSED {
    (  $<ServicePostalAddress_tes> rdf:type . * ;
       rdf:type [ <ServicePostalAddress> ] ?
    )
}

<ServiceSmsNumber> CLOSED {
    (  $<ServiceSmsNumber_tes> rdf:type . * ;
       rdf:type [ <ServiceSmsNumber> ] ?
    )
}

<ServiceType> CLOSED {
    (  $<ServiceType_tes> rdf:type . * ;
       rdf:type [ <ServiceType> ] ?
    )
}

<ServiceUrl> CLOSED {
    (  $<ServiceUrl_tes> rdf:type . * ;
       rdf:type [ <ServiceUrl> ] ?
    )
}

<ServingSize> CLOSED {
    (  $<ServingSize_tes> rdf:type . * ;
       rdf:type [ <ServingSize> ] ?
    )
}

<ShareAction> CLOSED {
    (  $<ShareAction_tes> (  &<CommunicateAction_tes> ;
          rdf:type [ <CommunicateAction> ] ?
       ) ;
       rdf:type [ <ShareAction> ] ?
    )
}

<SharedContent> CLOSED {
    (  $<SharedContent_tes> rdf:type . * ;
       rdf:type [ <SharedContent> ] ?
    )
}

<SheetMusic> CLOSED {
    (  $<SheetMusic_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <SheetMusic> ] ?
    )
}

<ShippingDeliveryTime> CLOSED {
    (  $<ShippingDeliveryTime_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <businessDays> @<OpeningHoursSpecification> * ;
          <cutoffTime> @<Time> * ;
          <handlingTime> @<QuantitativeValue> * ;
          <transitTime> @<QuantitativeValue> *
       ) ;
       rdf:type [ <ShippingDeliveryTime> ] ?
    )
}

<ShippingDestination> CLOSED {
    (  $<ShippingDestination_tes> rdf:type . * ;
       rdf:type [ <ShippingDestination> ] ?
    )
}

<ShippingDetails> CLOSED {
    (  $<ShippingDetails_tes> rdf:type . * ;
       rdf:type [ <ShippingDetails> ] ?
    )
}

<ShippingLabel> CLOSED {
    (  $<ShippingLabel_tes> rdf:type . * ;
       rdf:type [ <ShippingLabel> ] ?
    )
}

<ShippingRate> CLOSED {
    (  $<ShippingRate_tes> rdf:type . * ;
       rdf:type [ <ShippingRate> ] ?
    )
}

<ShippingRateSettings> CLOSED {
    (  $<ShippingRateSettings_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <doesNotShip> @<Boolean> * ;
          <freeShippingThreshold> @linkml:String * ;
          <isUnlabelledFallback> @<Boolean> * ;
          <shippingDestination> @<DefinedRegion> * ;
          <shippingLabel> @<Text> * ;
          <shippingRate> @<MonetaryAmount> *
       ) ;
       rdf:type [ <ShippingRateSettings> ] ?
    )
}

<ShippingSettingsLink> CLOSED {
    (  $<ShippingSettingsLink_tes> rdf:type . * ;
       rdf:type [ <ShippingSettingsLink> ] ?
    )
}

<ShoeStore> CLOSED {
    (  $<ShoeStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ShoeStore> ] ?
    )
}

<ShoppingCenter> CLOSED {
    (  $<ShoppingCenter_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <ShoppingCenter> ] ?
    )
}

<ShortStory> CLOSED {
    (  $<ShortStory_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <ShortStory> ] ?
    )
}

<Sibling> CLOSED {
    (  $<Sibling_tes> rdf:type . * ;
       rdf:type [ <Sibling> ] ?
    )
}

<Siblings> CLOSED {
    (  $<Siblings_tes> rdf:type . * ;
       rdf:type [ <Siblings> ] ?
    )
}

<SideEffectsHealthAspect> CLOSED {
    (  $<SideEffectsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <SideEffectsHealthAspect> ] ?
    )
}

<SignDetected> CLOSED {
    (  $<SignDetected_tes> rdf:type . * ;
       rdf:type [ <SignDetected> ] ?
    )
}

<Significance> CLOSED {
    (  $<Significance_tes> rdf:type . * ;
       rdf:type [ <Significance> ] ?
    )
}

<SignificantLink> CLOSED {
    (  $<SignificantLink_tes> rdf:type . * ;
       rdf:type [ <SignificantLink> ] ?
    )
}

<SignificantLinks> CLOSED {
    (  $<SignificantLinks_tes> rdf:type . * ;
       rdf:type [ <SignificantLinks> ] ?
    )
}

<SignOrSymptom> CLOSED {
    (  $<SignOrSymptom_tes> rdf:type . * ;
       rdf:type [ <SignOrSymptom> ] ?
    )
}

<SingleBlindedTrial> CLOSED {
    (  $<SingleBlindedTrial_tes> rdf:type . * ;
       rdf:type [ <SingleBlindedTrial> ] ?
    )
}

<SingleCenterTrial> CLOSED {
    (  $<SingleCenterTrial_tes> rdf:type . * ;
       rdf:type [ <SingleCenterTrial> ] ?
    )
}

<SingleFamilyResidence> CLOSED {
    (  $<SingleFamilyResidence_tes> (  &<House_tes> ;
          rdf:type [ <House> ] ? ;
          <occupancy> @<QuantitativeValue> *
       ) ;
       rdf:type [ <SingleFamilyResidence> ] ?
    )
}

<SinglePlayer> CLOSED {
    (  $<SinglePlayer_tes> rdf:type . * ;
       rdf:type [ <SinglePlayer> ] ?
    )
}

<SingleRelease> CLOSED {
    (  $<SingleRelease_tes> rdf:type . * ;
       rdf:type [ <SingleRelease> ] ?
    )
}

<SiteNavigationElement> CLOSED {
    (  $<SiteNavigationElement_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <SiteNavigationElement> ] ?
    )
}

<Size> CLOSED {
    (  $<Size_tes> rdf:type . * ;
       rdf:type [ <Size> ] ?
    )
}

<SizeGroup> CLOSED {
    (  $<SizeGroup_tes> rdf:type . * ;
       rdf:type [ <SizeGroup> ] ?
    )
}

<SizeGroupEnumeration>  (
    CLOSED {
       (  $<SizeGroupEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <SizeGroupEnumeration> ] ?
       )
    } OR @<WearableSizeGroupEnumeration>
)

<SizeSpecification> CLOSED {
    (  $<SizeSpecification_tes> (  &<QualitativeValue_tes> ;
          rdf:type [ <QualitativeValue> ] ? ;
          <hasMeasurement> @<QuantitativeValue> * ;
          <sizeGroup> @linkml:String * ;
          <sizeSystem> @linkml:String * ;
          <suggestedAge> @<QuantitativeValue> * ;
          <suggestedGender> @linkml:String * ;
          <suggestedMeasurement> @<QuantitativeValue> *
       ) ;
       rdf:type [ <SizeSpecification> ] ?
    )
}

<SizeSystem> CLOSED {
    (  $<SizeSystem_tes> rdf:type . * ;
       rdf:type [ <SizeSystem> ] ?
    )
}

<SizeSystemEnumeration>  (
    CLOSED {
       (  $<SizeSystemEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <SizeSystemEnumeration> ] ?
       )
    } OR @<WearableSizeSystemEnumeration>
)

<SizeSystemImperial> CLOSED {
    (  $<SizeSystemImperial_tes> rdf:type . * ;
       rdf:type [ <SizeSystemImperial> ] ?
    )
}

<SizeSystemMetric> CLOSED {
    (  $<SizeSystemMetric_tes> rdf:type . * ;
       rdf:type [ <SizeSystemMetric> ] ?
    )
}

<Skills> CLOSED {
    (  $<Skills_tes> rdf:type . * ;
       rdf:type [ <Skills> ] ?
    )
}

<Skin> CLOSED {
    (  $<Skin_tes> rdf:type . * ;
       rdf:type [ <Skin> ] ?
    )
}

<SkiResort> CLOSED {
    (  $<SkiResort_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ? ;
          &<Resort_tes> ;
          rdf:type [ <Resort> ] ? ;
          <audience> @<Audience> * ;
          <availableLanguage> @linkml:String * ;
          <checkinTime> @linkml:String * ;
          <checkoutTime> @linkml:String * ;
          <numberOfRooms> @linkml:String * ;
          <petsAllowed> @linkml:String * ;
          <starRating> @<Rating> *
       ) ;
       rdf:type [ <SkiResort> ] ?
    )
}

<Slogan> CLOSED {
    (  $<Slogan_tes> rdf:type . * ;
       rdf:type [ <Slogan> ] ?
    )
}

<SmokingAllowed> CLOSED {
    (  $<SmokingAllowed_tes> rdf:type . * ;
       rdf:type [ <SmokingAllowed> ] ?
    )
}

<SocialEvent> CLOSED {
    (  $<SocialEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <SocialEvent> ] ?
    )
}

<SocialMediaPosting>  (
    CLOSED {
       (  $<SocialMediaPosting_tes> (  &<Article_tes> ;
             rdf:type [ <Article> ] ? ;
             <sharedContent> @<CreativeWork> *
          ) ;
          rdf:type [ <SocialMediaPosting> ] ?
       )
    } OR @<BlogPosting> OR @<DiscussionForumPosting>
)

<SodiumContent> CLOSED {
    (  $<SodiumContent_tes> rdf:type . * ;
       rdf:type [ <SodiumContent> ] ?
    )
}

<SoftwareAddOn> CLOSED {
    (  $<SoftwareAddOn_tes> rdf:type . * ;
       rdf:type [ <SoftwareAddOn> ] ?
    )
}

<SoftwareApplication>  (
    CLOSED {
       (  $<SoftwareApplication_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <applicationCategory> @linkml:String * ;
             <applicationSubCategory> @linkml:String * ;
             <applicationSuite> @<Text> * ;
             <availableOnDevice> @<Text> * ;
             <countriesNotSupported> @<Text> * ;
             <countriesSupported> @<Text> * ;
             <device> @<Text> * ;
             <downloadUrl> @<URL> * ;
             <featureList> @linkml:String * ;
             <fileSize> @<Text> * ;
             <installUrl> @<URL> * ;
             <memoryRequirements> @linkml:String * ;
             <operatingSystem> @<Text> * ;
             <permissions> @<Text> * ;
             <processorRequirements> @<Text> * ;
             <releaseNotes> @linkml:String * ;
             <requirements> @linkml:String * ;
             <screenshot> @linkml:String * ;
             <softwareAddOn> @<SoftwareApplication> * ;
             <softwareHelp> @<CreativeWork> * ;
             <softwareRequirements> @linkml:String * ;
             <softwareVersion> @<Text> * ;
             <storageRequirements> @linkml:String * ;
             <supportingData> @<DataFeed> *
          ) ;
          rdf:type [ <SoftwareApplication> ] ?
       )
    } OR @<MobileApplication> OR @<WebApplication>
)

<SoftwareHelp> CLOSED {
    (  $<SoftwareHelp_tes> rdf:type . * ;
       rdf:type [ <SoftwareHelp> ] ?
    )
}

<SoftwareRequirements> CLOSED {
    (  $<SoftwareRequirements_tes> rdf:type . * ;
       rdf:type [ <SoftwareRequirements> ] ?
    )
}

<SoftwareSourceCode> CLOSED {
    (  $<SoftwareSourceCode_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <codeRepository> @<URL> * ;
          <codeSampleType> @<Text> * ;
          <programmingLanguage> @linkml:String * ;
          <runtime> @<Text> * ;
          <runtimePlatform> @<Text> * ;
          <sampleType> @<Text> * ;
          <targetProduct> @<SoftwareApplication> *
       ) ;
       rdf:type [ <SoftwareSourceCode> ] ?
    )
}

<SoftwareVersion> CLOSED {
    (  $<SoftwareVersion_tes> rdf:type . * ;
       rdf:type [ <SoftwareVersion> ] ?
    )
}

<SoldOut> CLOSED {
    (  $<SoldOut_tes> rdf:type . * ;
       rdf:type [ <SoldOut> ] ?
    )
}

<SolveMathAction> CLOSED {
    (  $<SolveMathAction_tes> (  &<Action_tes> ;
          rdf:type [ <Action> ] ? ;
          <eduQuestionType> @<Text> *
       ) ;
       rdf:type [ <SolveMathAction> ] ?
    )
}

<SomeProducts> CLOSED {
    (  $<SomeProducts_tes> (  &<Product_tes> ;
          rdf:type [ <Product> ] ? ;
          <inventoryLevel> @<QuantitativeValue> *
       ) ;
       rdf:type [ <SomeProducts> ] ?
    )
}

<SoundtrackAlbum> CLOSED {
    (  $<SoundtrackAlbum_tes> rdf:type . * ;
       rdf:type [ <SoundtrackAlbum> ] ?
    )
}

<SourcedFrom> CLOSED {
    (  $<SourcedFrom_tes> rdf:type . * ;
       rdf:type [ <SourcedFrom> ] ?
    )
}

<SourceOrganization> CLOSED {
    (  $<SourceOrganization_tes> rdf:type . * ;
       rdf:type [ <SourceOrganization> ] ?
    )
}

<Spatial> CLOSED {
    (  $<Spatial_tes> rdf:type . * ;
       rdf:type [ <Spatial> ] ?
    )
}

<Speakable> CLOSED {
    (  $<Speakable_tes> rdf:type . * ;
       rdf:type [ <Speakable> ] ?
    )
}

<SpeakableSpecification> CLOSED {
    (  $<SpeakableSpecification_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <cssSelector> @<CssSelectorType> * ;
          <xpath> @<XPathType> *
       ) ;
       rdf:type [ <SpeakableSpecification> ] ?
    )
}

<SpecialAnnouncement> CLOSED {
    (  $<SpecialAnnouncement_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <announcementLocation> @<Place> * ;
          <category> @linkml:String * ;
          <datePosted> @linkml:String * ;
          <diseasePreventionInfo> @linkml:String * ;
          <diseaseSpreadStatistics> @linkml:String * ;
          <gettingTestedInfo> @linkml:String * ;
          <governmentBenefitsInfo> @<GovernmentService> * ;
          <newsUpdatesAndGuidelines> @linkml:String * ;
          <publicTransportClosuresInfo> @linkml:String * ;
          <quarantineGuidelines> @linkml:String * ;
          <schoolClosuresInfo> @linkml:String * ;
          <travelBans> @linkml:String * ;
          <webFeed> @linkml:String *
       ) ;
       rdf:type [ <SpecialAnnouncement> ] ?
    )
}

<SpecialCommitments> CLOSED {
    (  $<SpecialCommitments_tes> rdf:type . * ;
       rdf:type [ <SpecialCommitments> ] ?
    )
}

<SpecialOpeningHoursSpecification> CLOSED {
    (  $<SpecialOpeningHoursSpecification_tes> rdf:type . * ;
       rdf:type [ <SpecialOpeningHoursSpecification> ] ?
    )
}

<Specialty> CLOSED {
    (  $<Specialty_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <Specialty> ] ?
    )
}

<Specialty> CLOSED {
    (  $<Specialty_tes> rdf:type . * ;
       rdf:type [ <Specialty> ] ?
    )
}

<SpeechPathology> CLOSED {
    (  $<SpeechPathology_tes> rdf:type . * ;
       rdf:type [ <SpeechPathology> ] ?
    )
}

<SpeechToTextMarkup> CLOSED {
    (  $<SpeechToTextMarkup_tes> rdf:type . * ;
       rdf:type [ <SpeechToTextMarkup> ] ?
    )
}

<Speed> CLOSED {
    (  $<Speed_tes> rdf:type . * ;
       rdf:type [ <Speed> ] ?
    )
}

<SpokenByCharacter> CLOSED {
    (  $<SpokenByCharacter_tes> rdf:type . * ;
       rdf:type [ <SpokenByCharacter> ] ?
    )
}

<SpokenWordAlbum> CLOSED {
    (  $<SpokenWordAlbum_tes> rdf:type . * ;
       rdf:type [ <SpokenWordAlbum> ] ?
    )
}

<Sport> CLOSED {
    (  $<Sport_tes> rdf:type . * ;
       rdf:type [ <Sport> ] ?
    )
}

<SportingGoodsStore> CLOSED {
    (  $<SportingGoodsStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <SportingGoodsStore> ] ?
    )
}

<SportsActivityLocation>  (
    CLOSED {
       (  $<SportsActivityLocation_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <SportsActivityLocation> ] ?
       )
    } OR @<BowlingAlley> OR @<ExerciseGym> OR @<GolfCourse> OR @<HealthClub> OR @<PublicSwimmingPool> OR @<SkiResort> OR
    @<SportsClub> OR @<StadiumOrArena> OR @<TennisComplex>
)

<SportsClub> CLOSED {
    (  $<SportsClub_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <SportsClub> ] ?
    )
}

<SportsEvent> CLOSED {
    (  $<SportsEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ? ;
          <awayTeam> @linkml:String * ;
          <competitor> @linkml:String * ;
          <homeTeam> @linkml:String * ;
          <sport> @linkml:String *
       ) ;
       rdf:type [ <SportsEvent> ] ?
    )
}

<SportsOrganization>  (
    CLOSED {
       (  $<SportsOrganization_tes> (  &<Organization_tes> ;
             rdf:type [ <Organization> ] ? ;
             <sport> @linkml:String *
          ) ;
          rdf:type [ <SportsOrganization> ] ?
       )
    } OR @<SportsTeam>
)

<SportsTeam> CLOSED {
    (  $<SportsTeam_tes> (  &<SportsOrganization_tes> ;
          rdf:type [ <SportsOrganization> ] ? ;
          <athlete> @<Person> * ;
          <coach> @<Person> * ;
          <gender> @linkml:String *
       ) ;
       rdf:type [ <SportsTeam> ] ?
    )
}

<Spouse> CLOSED {
    (  $<Spouse_tes> rdf:type . * ;
       rdf:type [ <Spouse> ] ?
    )
}

<SpreadsheetDigitalDocument> CLOSED {
    (  $<SpreadsheetDigitalDocument_tes> (  &<DigitalDocument_tes> ;
          rdf:type [ <DigitalDocument> ] ?
       ) ;
       rdf:type [ <SpreadsheetDigitalDocument> ] ?
    )
}

<SRP> CLOSED {
    (  $<SRP_tes> rdf:type . * ;
       rdf:type [ <SRP> ] ?
    )
}

<StadiumOrArena> CLOSED {
    (  $<StadiumOrArena_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ? ;
          &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <StadiumOrArena> ] ?
    )
}

<Stage> CLOSED {
    (  $<Stage_tes> rdf:type . * ;
       rdf:type [ <Stage> ] ?
    )
}

<StageAsNumber> CLOSED {
    (  $<StageAsNumber_tes> rdf:type . * ;
       rdf:type [ <StageAsNumber> ] ?
    )
}

<StagedContent> CLOSED {
    (  $<StagedContent_tes> rdf:type . * ;
       rdf:type [ <StagedContent> ] ?
    )
}

<StagesHealthAspect> CLOSED {
    (  $<StagesHealthAspect_tes> rdf:type . * ;
       rdf:type [ <StagesHealthAspect> ] ?
    )
}

<StarRating> CLOSED {
    (  $<StarRating_tes> rdf:type . * ;
       rdf:type [ <StarRating> ] ?
    )
}

<StartDate> CLOSED {
    (  $<StartDate_tes> rdf:type . * ;
       rdf:type [ <StartDate> ] ?
    )
}

<StartOffset> CLOSED {
    (  $<StartOffset_tes> rdf:type . * ;
       rdf:type [ <StartOffset> ] ?
    )
}

<StartTime> CLOSED {
    (  $<StartTime_tes> rdf:type . * ;
       rdf:type [ <StartTime> ] ?
    )
}

<State> CLOSED {
    (  $<State_tes> (  &<AdministrativeArea_tes> ;
          rdf:type [ <AdministrativeArea> ] ?
       ) ;
       rdf:type [ <State> ] ?
    )
}

<Statement> CLOSED {
    (  $<Statement_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ?
       ) ;
       rdf:type [ <Statement> ] ?
    )
}

<StatisticalPopulation> CLOSED {
    (  $<StatisticalPopulation_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <constrainingProperty> @<Integer> * ;
          <numConstraints> @<Integer> * ;
          <populationType> @<Class> *
       ) ;
       rdf:type [ <StatisticalPopulation> ] ?
    )
}

<Status> CLOSED {
    (  $<Status_tes> rdf:type . * ;
       rdf:type [ <Status> ] ?
    )
}

<StatusEnumeration>  (
    CLOSED {
       (  $<StatusEnumeration_tes> (  &<Enumeration_tes> ;
             rdf:type [ <Enumeration> ] ?
          ) ;
          rdf:type [ <StatusEnumeration> ] ?
       )
    } OR @<ActionStatusType> OR @<EventStatusType> OR @<GameServerStatus> OR @<LegalForceStatus> OR @<OrderStatus> OR
    @<PaymentStatusType> OR @<ReservationStatusType>
)

<SteeringPosition> CLOSED {
    (  $<SteeringPosition_tes> rdf:type . * ;
       rdf:type [ <SteeringPosition> ] ?
    )
}

<SteeringPositionValue> CLOSED {
    (  $<SteeringPositionValue_tes> (  &<QualitativeValue_tes> ;
          rdf:type [ <QualitativeValue> ] ?
       ) ;
       rdf:type [ <SteeringPositionValue> ] ?
    )
}

<Steps> CLOSED {
    (  $<Steps_tes> rdf:type . * ;
       rdf:type [ <Steps> ] ?
    )
}

<StepValue> CLOSED {
    (  $<StepValue_tes> rdf:type . * ;
       rdf:type [ <StepValue> ] ?
    )
}

<StorageRequirements> CLOSED {
    (  $<StorageRequirements_tes> rdf:type . * ;
       rdf:type [ <StorageRequirements> ] ?
    )
}

<Store>  (
    CLOSED {
       (  $<Store_tes> (  &<LocalBusiness_tes> ;
             rdf:type [ <LocalBusiness> ] ?
          ) ;
          rdf:type [ <Store> ] ?
       )
    } OR @<BikeStore> OR @<BookStore> OR @<ClothingStore> OR @<ComputerStore> OR @<ConvenienceStore> OR @<DepartmentStore> OR
    @<ElectronicsStore> OR @<Florist> OR @<FurnitureStore> OR @<GardenStore> OR @<GroceryStore> OR @<HardwareStore> OR @<HobbyShop>
    OR @<HomeGoodsStore> OR @<JewelryStore> OR @<LiquorStore> OR @<MensClothingStore> OR @<MobilePhoneStore> OR @<MovieRentalStore>
    OR @<MusicStore> OR @<OfficeEquipmentStore> OR @<OutletStore> OR @<PawnShop> OR @<PetStore> OR @<ShoeStore> OR
    @<SportingGoodsStore> OR @<TireShop> OR @<ToyStore> OR @<WholesaleStore>
)

<StoreCreditRefund> CLOSED {
    (  $<StoreCreditRefund_tes> rdf:type . * ;
       rdf:type [ <StoreCreditRefund> ] ?
    )
}

<StreetAddress> CLOSED {
    (  $<StreetAddress_tes> rdf:type . * ;
       rdf:type [ <StreetAddress> ] ?
    )
}

<StrengthTraining> CLOSED {
    (  $<StrengthTraining_tes> rdf:type . * ;
       rdf:type [ <StrengthTraining> ] ?
    )
}

<StrengthUnit> CLOSED {
    (  $<StrengthUnit_tes> rdf:type . * ;
       rdf:type [ <StrengthUnit> ] ?
    )
}

<StrengthValue> CLOSED {
    (  $<StrengthValue_tes> rdf:type . * ;
       rdf:type [ <StrengthValue> ] ?
    )
}

<StructuralClass> CLOSED {
    (  $<StructuralClass_tes> rdf:type . * ;
       rdf:type [ <StructuralClass> ] ?
    )
}

<StructuredValue>  (
    CLOSED {
       (  $<StructuredValue_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ?
          ) ;
          rdf:type [ <StructuredValue> ] ?
       )
    } OR @<CDCPMDRecord> OR @<ContactPoint> OR @<DatedMoneySpecification> OR @<DefinedRegion> OR @<DeliveryTimeSettings> OR
    @<EngineSpecification> OR @<ExchangeRateSpecification> OR @<GeoCoordinates> OR @<GeoShape> OR @<InteractionCounter> OR
    @<MonetaryAmount> OR @<NutritionInformation> OR @<OfferShippingDetails> OR @<OpeningHoursSpecification> OR @<OwnershipInfo> OR
    @<PostalCodeRangeSpecification> OR @<PriceSpecification> OR @<PropertyValue> OR @<QuantitativeValue> OR
    @<QuantitativeValueDistribution> OR @<RepaymentSpecification> OR @<ShippingDeliveryTime> OR @<ShippingRateSettings> OR
    @<TypeAndQuantityNode> OR @<WarrantyPromise>
)

<StudioAlbum> CLOSED {
    (  $<StudioAlbum_tes> rdf:type . * ;
       rdf:type [ <StudioAlbum> ] ?
    )
}

<Study> CLOSED {
    (  $<Study_tes> rdf:type . * ;
       rdf:type [ <Study> ] ?
    )
}

<StudyDesign> CLOSED {
    (  $<StudyDesign_tes> rdf:type . * ;
       rdf:type [ <StudyDesign> ] ?
    )
}

<StudyLocation> CLOSED {
    (  $<StudyLocation_tes> rdf:type . * ;
       rdf:type [ <StudyLocation> ] ?
    )
}

<StudySubject> CLOSED {
    (  $<StudySubject_tes> rdf:type . * ;
       rdf:type [ <StudySubject> ] ?
    )
}

<SubEvent> CLOSED {
    (  $<SubEvent_tes> rdf:type . * ;
       rdf:type [ <SubEvent> ] ?
    )
}

<SubEvents> CLOSED {
    (  $<SubEvents_tes> rdf:type . * ;
       rdf:type [ <SubEvents> ] ?
    )
}

<SubjectOf> CLOSED {
    (  $<SubjectOf_tes> rdf:type . * ;
       rdf:type [ <SubjectOf> ] ?
    )
}

<SubOrganization> CLOSED {
    (  $<SubOrganization_tes> rdf:type . * ;
       rdf:type [ <SubOrganization> ] ?
    )
}

<SubReservation> CLOSED {
    (  $<SubReservation_tes> rdf:type . * ;
       rdf:type [ <SubReservation> ] ?
    )
}

<SubscribeAction> CLOSED {
    (  $<SubscribeAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ?
       ) ;
       rdf:type [ <SubscribeAction> ] ?
    )
}

<Subscription> CLOSED {
    (  $<Subscription_tes> rdf:type . * ;
       rdf:type [ <Subscription> ] ?
    )
}

<SubStageSuffix> CLOSED {
    (  $<SubStageSuffix_tes> rdf:type . * ;
       rdf:type [ <SubStageSuffix> ] ?
    )
}

<Substance>  (
    CLOSED {
       (  $<Substance_tes> (  &<MedicalEntity_tes> ;
             rdf:type [ <MedicalEntity> ] ? ;
             <activeIngredient> @<Text> * ;
             <maximumIntake> @<MaximumDoseSchedule> *
          ) ;
          rdf:type [ <Substance> ] ?
       )
    } OR @<DietarySupplement> OR @<Drug>
)

<SubStructure> CLOSED {
    (  $<SubStructure_tes> rdf:type . * ;
       rdf:type [ <SubStructure> ] ?
    )
}

<SubTest> CLOSED {
    (  $<SubTest_tes> rdf:type . * ;
       rdf:type [ <SubTest> ] ?
    )
}

<SubtitleLanguage> CLOSED {
    (  $<SubtitleLanguage_tes> rdf:type . * ;
       rdf:type [ <SubtitleLanguage> ] ?
    )
}

<SubTrip> CLOSED {
    (  $<SubTrip_tes> rdf:type . * ;
       rdf:type [ <SubTrip> ] ?
    )
}

<SubwayStation> CLOSED {
    (  $<SubwayStation_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <SubwayStation> ] ?
    )
}

<SuccessorOf> CLOSED {
    (  $<SuccessorOf_tes> rdf:type . * ;
       rdf:type [ <SuccessorOf> ] ?
    )
}

<SugarContent> CLOSED {
    (  $<SugarContent_tes> rdf:type . * ;
       rdf:type [ <SugarContent> ] ?
    )
}

<SuggestedAge> CLOSED {
    (  $<SuggestedAge_tes> rdf:type . * ;
       rdf:type [ <SuggestedAge> ] ?
    )
}

<SuggestedGender> CLOSED {
    (  $<SuggestedGender_tes> rdf:type . * ;
       rdf:type [ <SuggestedGender> ] ?
    )
}

<SuggestedMaxAge> CLOSED {
    (  $<SuggestedMaxAge_tes> rdf:type . * ;
       rdf:type [ <SuggestedMaxAge> ] ?
    )
}

<SuggestedMeasurement> CLOSED {
    (  $<SuggestedMeasurement_tes> rdf:type . * ;
       rdf:type [ <SuggestedMeasurement> ] ?
    )
}

<SuggestedMinAge> CLOSED {
    (  $<SuggestedMinAge_tes> rdf:type . * ;
       rdf:type [ <SuggestedMinAge> ] ?
    )
}

<SuitableForDiet> CLOSED {
    (  $<SuitableForDiet_tes> rdf:type . * ;
       rdf:type [ <SuitableForDiet> ] ?
    )
}

<Suite> CLOSED {
    (  $<Suite_tes> (  &<Accommodation_tes> ;
          rdf:type [ <Accommodation> ] ? ;
          <bed> @linkml:String * ;
          <occupancy> @<QuantitativeValue> *
       ) ;
       rdf:type [ <Suite> ] ?
    )
}

<Sunday> CLOSED {
    (  $<Sunday_tes> rdf:type . * ;
       rdf:type [ <Sunday> ] ?
    )
}

<SuperEvent> CLOSED {
    (  $<SuperEvent_tes> rdf:type . * ;
       rdf:type [ <SuperEvent> ] ?
    )
}

<SuperficialAnatomy> CLOSED {
    (  $<SuperficialAnatomy_tes> (  &<MedicalEntity_tes> ;
          rdf:type [ <MedicalEntity> ] ? ;
          <associatedPathophysiology> @<Text> * ;
          <relatedAnatomy> @linkml:String * ;
          <relatedCondition> @<MedicalCondition> * ;
          <relatedTherapy> @<MedicalTherapy> * ;
          <significance> @<Text> *
       ) ;
       rdf:type [ <SuperficialAnatomy> ] ?
    )
}

<SupplyTo> CLOSED {
    (  $<SupplyTo_tes> rdf:type . * ;
       rdf:type [ <SupplyTo> ] ?
    )
}

<SupportingData> CLOSED {
    (  $<SupportingData_tes> rdf:type . * ;
       rdf:type [ <SupportingData> ] ?
    )
}

<Surgical> CLOSED {
    (  $<Surgical_tes> rdf:type . * ;
       rdf:type [ <Surgical> ] ?
    )
}

<SurgicalProcedure> CLOSED {
    (  $<SurgicalProcedure_tes> (  &<MedicalProcedure_tes> ;
          rdf:type [ <MedicalProcedure> ] ?
       ) ;
       rdf:type [ <SurgicalProcedure> ] ?
    )
}

<SuspendAction> CLOSED {
    (  $<SuspendAction_tes> (  &<ControlAction_tes> ;
          rdf:type [ <ControlAction> ] ?
       ) ;
       rdf:type [ <SuspendAction> ] ?
    )
}

<Suspended> CLOSED {
    (  $<Suspended_tes> rdf:type . * ;
       rdf:type [ <Suspended> ] ?
    )
}

<SymptomsHealthAspect> CLOSED {
    (  $<SymptomsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <SymptomsHealthAspect> ] ?
    )
}

<Synagogue> CLOSED {
    (  $<Synagogue_tes> (  &<PlaceOfWorship_tes> ;
          rdf:type [ <PlaceOfWorship> ] ?
       ) ;
       rdf:type [ <Synagogue> ] ?
    )
}

<Table> CLOSED {
    (  $<Table_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <Table> ] ?
    )
}

<TakeAction> CLOSED {
    (  $<TakeAction_tes> (  &<TransferAction_tes> ;
          rdf:type [ <TransferAction> ] ?
       ) ;
       rdf:type [ <TakeAction> ] ?
    )
}

<Target> CLOSED {
    (  $<Target_tes> rdf:type . * ;
       rdf:type [ <Target> ] ?
    )
}

<TargetDescription> CLOSED {
    (  $<TargetDescription_tes> rdf:type . * ;
       rdf:type [ <TargetDescription> ] ?
    )
}

<TargetName> CLOSED {
    (  $<TargetName_tes> rdf:type . * ;
       rdf:type [ <TargetName> ] ?
    )
}

<TargetPlatform> CLOSED {
    (  $<TargetPlatform_tes> rdf:type . * ;
       rdf:type [ <TargetPlatform> ] ?
    )
}

<TargetPopulation> CLOSED {
    (  $<TargetPopulation_tes> rdf:type . * ;
       rdf:type [ <TargetPopulation> ] ?
    )
}

<TargetProduct> CLOSED {
    (  $<TargetProduct_tes> rdf:type . * ;
       rdf:type [ <TargetProduct> ] ?
    )
}

<TargetUrl> CLOSED {
    (  $<TargetUrl_tes> rdf:type . * ;
       rdf:type [ <TargetUrl> ] ?
    )
}

<TattooParlor> CLOSED {
    (  $<TattooParlor_tes> (  &<HealthAndBeautyBusiness_tes> ;
          rdf:type [ <HealthAndBeautyBusiness> ] ?
       ) ;
       rdf:type [ <TattooParlor> ] ?
    )
}

<Taxi> CLOSED {
    (  $<Taxi_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ?
       ) ;
       rdf:type [ <Taxi> ] ?
    )
}

<TaxiReservation> CLOSED {
    (  $<TaxiReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ? ;
          <partySize> @linkml:String * ;
          <pickupLocation> @<Place> * ;
          <pickupTime> @<DateTime> *
       ) ;
       rdf:type [ <TaxiReservation> ] ?
    )
}

<TaxiService> CLOSED {
    (  $<TaxiService_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ?
       ) ;
       rdf:type [ <TaxiService> ] ?
    )
}

<TaxiStand> CLOSED {
    (  $<TaxiStand_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <TaxiStand> ] ?
    )
}

<TaxiVehicleUsage> CLOSED {
    (  $<TaxiVehicleUsage_tes> rdf:type . * ;
       rdf:type [ <TaxiVehicleUsage> ] ?
    )
}

<Taxon> CLOSED {
    (  $<Taxon_tes> (  &<Thing_tes> ;
          rdf:type [ <Thing> ] ? ;
          <hasDefinedTerm> @<DefinedTerm> * ;
          <childTaxon> @linkml:String * ;
          <parentTaxon> @linkml:String * ;
          <taxonRank> @linkml:String *
       ) ;
       rdf:type [ <Taxon> ] ?
    )
}

<TaxonomicRange> CLOSED {
    (  $<TaxonomicRange_tes> rdf:type . * ;
       rdf:type [ <TaxonomicRange> ] ?
    )
}

<TaxonRank> CLOSED {
    (  $<TaxonRank_tes> rdf:type . * ;
       rdf:type [ <TaxonRank> ] ?
    )
}

<Teaches> CLOSED {
    (  $<Teaches_tes> rdf:type . * ;
       rdf:type [ <Teaches> ] ?
    )
}

<TechArticle>  (
    CLOSED {
       (  $<TechArticle_tes> (  &<Article_tes> ;
             rdf:type [ <Article> ] ? ;
             <dependencies> @<Text> * ;
             <proficiencyLevel> @<Text> *
          ) ;
          rdf:type [ <TechArticle> ] ?
       )
    } OR @<APIReference>
)

<Telephone> CLOSED {
    (  $<Telephone_tes> rdf:type . * ;
       rdf:type [ <Telephone> ] ?
    )
}

<TelevisionChannel> CLOSED {
    (  $<TelevisionChannel_tes> (  &<BroadcastChannel_tes> ;
          rdf:type [ <BroadcastChannel> ] ?
       ) ;
       rdf:type [ <TelevisionChannel> ] ?
    )
}

<TelevisionStation> CLOSED {
    (  $<TelevisionStation_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <TelevisionStation> ] ?
    )
}

<Temporal> CLOSED {
    (  $<Temporal_tes> rdf:type . * ;
       rdf:type [ <Temporal> ] ?
    )
}

<TemporalCoverage> CLOSED {
    (  $<TemporalCoverage_tes> rdf:type . * ;
       rdf:type [ <TemporalCoverage> ] ?
    )
}

<TennisComplex> CLOSED {
    (  $<TennisComplex_tes> (  &<SportsActivityLocation_tes> ;
          rdf:type [ <SportsActivityLocation> ] ?
       ) ;
       rdf:type [ <TennisComplex> ] ?
    )
}

<TermDuration> CLOSED {
    (  $<TermDuration_tes> rdf:type . * ;
       rdf:type [ <TermDuration> ] ?
    )
}

<Terminated> CLOSED {
    (  $<Terminated_tes> rdf:type . * ;
       rdf:type [ <Terminated> ] ?
    )
}

<TermsOfService> CLOSED {
    (  $<TermsOfService_tes> rdf:type . * ;
       rdf:type [ <TermsOfService> ] ?
    )
}

<TermsPerYear> CLOSED {
    (  $<TermsPerYear_tes> rdf:type . * ;
       rdf:type [ <TermsPerYear> ] ?
    )
}

<Text>  (
    CLOSED {
       (  $<Text_tes> rdf:type . * ;
          rdf:type [ <Text> ] ?
       )
    } OR @<CssSelectorType> OR @<PronounceableText> OR @<URL> OR @<XPathType>
)

<Text> CLOSED {
    (  $<Text_tes> rdf:type . * ;
       rdf:type [ <Text> ] ?
    )
}

<TextDigitalDocument> CLOSED {
    (  $<TextDigitalDocument_tes> (  &<DigitalDocument_tes> ;
          rdf:type [ <DigitalDocument> ] ?
       ) ;
       rdf:type [ <TextDigitalDocument> ] ?
    )
}

<TextValue> CLOSED {
    (  $<TextValue_tes> rdf:type . * ;
       rdf:type [ <TextValue> ] ?
    )
}

<TheaterEvent> CLOSED {
    (  $<TheaterEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <TheaterEvent> ] ?
    )
}

<TheaterGroup> CLOSED {
    (  $<TheaterGroup_tes> (  &<PerformingGroup_tes> ;
          rdf:type [ <PerformingGroup> ] ?
       ) ;
       rdf:type [ <TheaterGroup> ] ?
    )
}

<Therapeutic> CLOSED {
    (  $<Therapeutic_tes> rdf:type . * ;
       rdf:type [ <Therapeutic> ] ?
    )
}

<TherapeuticProcedure>  (
    CLOSED {
       (  $<TherapeuticProcedure_tes> (  &<MedicalProcedure_tes> ;
             rdf:type [ <MedicalProcedure> ] ? ;
             <adverseOutcome> @<MedicalEntity> * ;
             <doseSchedule> @<DoseSchedule> * ;
             <drug> @<Drug> *
          ) ;
          rdf:type [ <TherapeuticProcedure> ] ?
       )
    } OR @<MedicalTherapy> OR @<PsychologicalTreatment>
)

<Thesis> CLOSED {
    (  $<Thesis_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <inSupportOf> @<Text> *
       ) ;
       rdf:type [ <Thesis> ] ?
    )
}

<Thing>  (
    CLOSED {
       (  $<Thing_tes> (  <additionalType> @<URL> * ;
             <description> @<Text> * ;
             <disambiguatingDescription> @<Text> * ;
             <identifier> @linkml:String * ;
             <image> @linkml:String * ;
             <name> @<Text> * ;
             <sameAs> @<URL> * ;
             <alternateName> @<Text> * ;
             <mainEntityOfPage> @linkml:String * ;
             <potentialAction> @<Action> * ;
             <subjectOf> @linkml:String * ;
             <url> @<URL> *
          ) ;
          rdf:type [ <Thing> ] ?
       )
    } OR @<Action> OR @<BioChemEntity> OR @<CreativeWork> OR @<Event> OR @<Intangible> OR @<MedicalEntity> OR @<Organization> OR
    @<Person> OR @<Place> OR @<Product> OR @<Taxon>
)

<Throat> CLOSED {
    (  $<Throat_tes> rdf:type . * ;
       rdf:type [ <Throat> ] ?
    )
}

<Thumbnail> CLOSED {
    (  $<Thumbnail_tes> rdf:type . * ;
       rdf:type [ <Thumbnail> ] ?
    )
}

<ThumbnailUrl> CLOSED {
    (  $<ThumbnailUrl_tes> rdf:type . * ;
       rdf:type [ <ThumbnailUrl> ] ?
    )
}

<Thursday> CLOSED {
    (  $<Thursday_tes> rdf:type . * ;
       rdf:type [ <Thursday> ] ?
    )
}

<TickerSymbol> CLOSED {
    (  $<TickerSymbol_tes> rdf:type . * ;
       rdf:type [ <TickerSymbol> ] ?
    )
}

<Ticket> CLOSED {
    (  $<Ticket_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ? ;
          <dateIssued> @linkml:String * ;
          <issuedBy> @<Organization> * ;
          <priceCurrency> @<Text> * ;
          <ticketNumber> @<Text> * ;
          <ticketToken> @linkml:String * ;
          <ticketedSeat> @<Seat> * ;
          <totalPrice> @linkml:String * ;
          <underName> @linkml:String *
       ) ;
       rdf:type [ <Ticket> ] ?
    )
}

<TicketedSeat> CLOSED {
    (  $<TicketedSeat_tes> rdf:type . * ;
       rdf:type [ <TicketedSeat> ] ?
    )
}

<TicketNumber> CLOSED {
    (  $<TicketNumber_tes> rdf:type . * ;
       rdf:type [ <TicketNumber> ] ?
    )
}

<TicketToken> CLOSED {
    (  $<TicketToken_tes> rdf:type . * ;
       rdf:type [ <TicketToken> ] ?
    )
}

<TieAction> CLOSED {
    (  $<TieAction_tes> (  &<AchieveAction_tes> ;
          rdf:type [ <AchieveAction> ] ?
       ) ;
       rdf:type [ <TieAction> ] ?
    )
}

<Time> CLOSED {
    (  $<Time_tes> rdf:type . * ;
       rdf:type [ <Time> ] ?
    )
}

<TimeOfDay> CLOSED {
    (  $<TimeOfDay_tes> rdf:type . * ;
       rdf:type [ <TimeOfDay> ] ?
    )
}

<TimeRequired> CLOSED {
    (  $<TimeRequired_tes> rdf:type . * ;
       rdf:type [ <TimeRequired> ] ?
    )
}

<TimeToComplete> CLOSED {
    (  $<TimeToComplete_tes> rdf:type . * ;
       rdf:type [ <TimeToComplete> ] ?
    )
}

<TipAction> CLOSED {
    (  $<TipAction_tes> (  &<TradeAction_tes> ;
          rdf:type [ <TradeAction> ] ? ;
          <recipient> @linkml:String *
       ) ;
       rdf:type [ <TipAction> ] ?
    )
}

<TireShop> CLOSED {
    (  $<TireShop_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <TireShop> ] ?
    )
}

<TissueSample> CLOSED {
    (  $<TissueSample_tes> rdf:type . * ;
       rdf:type [ <TissueSample> ] ?
    )
}

<Title> CLOSED {
    (  $<Title_tes> rdf:type . * ;
       rdf:type [ <Title> ] ?
    )
}

<TocContinuation> CLOSED {
    (  $<TocContinuation_tes> rdf:type . * ;
       rdf:type [ <TocContinuation> ] ?
    )
}

<TollFree> CLOSED {
    (  $<TollFree_tes> rdf:type . * ;
       rdf:type [ <TollFree> ] ?
    )
}

<TongueWeight> CLOSED {
    (  $<TongueWeight_tes> rdf:type . * ;
       rdf:type [ <TongueWeight> ] ?
    )
}

<Torque> CLOSED {
    (  $<Torque_tes> rdf:type . * ;
       rdf:type [ <Torque> ] ?
    )
}

<TotalJobOpenings> CLOSED {
    (  $<TotalJobOpenings_tes> rdf:type . * ;
       rdf:type [ <TotalJobOpenings> ] ?
    )
}

<TotalPaymentDue> CLOSED {
    (  $<TotalPaymentDue_tes> rdf:type . * ;
       rdf:type [ <TotalPaymentDue> ] ?
    )
}

<TotalPrice> CLOSED {
    (  $<TotalPrice_tes> rdf:type . * ;
       rdf:type [ <TotalPrice> ] ?
    )
}

<TotalTime> CLOSED {
    (  $<TotalTime_tes> rdf:type . * ;
       rdf:type [ <TotalTime> ] ?
    )
}

<TourBookingPage> CLOSED {
    (  $<TourBookingPage_tes> rdf:type . * ;
       rdf:type [ <TourBookingPage> ] ?
    )
}

<TouristAttraction> CLOSED {
    (  $<TouristAttraction_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ? ;
          <availableLanguage> @linkml:String * ;
          <touristType> @linkml:String *
       ) ;
       rdf:type [ <TouristAttraction> ] ?
    )
}

<TouristDestination> CLOSED {
    (  $<TouristDestination_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ? ;
          <includesAttraction> @<TouristAttraction> * ;
          <touristType> @linkml:String *
       ) ;
       rdf:type [ <TouristDestination> ] ?
    )
}

<TouristInformationCenter> CLOSED {
    (  $<TouristInformationCenter_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <TouristInformationCenter> ] ?
    )
}

<TouristTrip> CLOSED {
    (  $<TouristTrip_tes> (  &<Trip_tes> ;
          rdf:type [ <Trip> ] ? ;
          <touristType> @linkml:String *
       ) ;
       rdf:type [ <TouristTrip> ] ?
    )
}

<TouristType> CLOSED {
    (  $<TouristType_tes> rdf:type . * ;
       rdf:type [ <TouristType> ] ?
    )
}

<Toxicologic> CLOSED {
    (  $<Toxicologic_tes> rdf:type . * ;
       rdf:type [ <Toxicologic> ] ?
    )
}

<ToyStore> CLOSED {
    (  $<ToyStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <ToyStore> ] ?
    )
}

<Track> CLOSED {
    (  $<Track_tes> rdf:type . * ;
       rdf:type [ <Track> ] ?
    )
}

<TrackAction> CLOSED {
    (  $<TrackAction_tes> (  &<FindAction_tes> ;
          rdf:type [ <FindAction> ] ? ;
          <deliveryMethod> @<DeliveryMethod> *
       ) ;
       rdf:type [ <TrackAction> ] ?
    )
}

<TrackingNumber> CLOSED {
    (  $<TrackingNumber_tes> rdf:type . * ;
       rdf:type [ <TrackingNumber> ] ?
    )
}

<TrackingUrl> CLOSED {
    (  $<TrackingUrl_tes> rdf:type . * ;
       rdf:type [ <TrackingUrl> ] ?
    )
}

<Tracks> CLOSED {
    (  $<Tracks_tes> rdf:type . * ;
       rdf:type [ <Tracks> ] ?
    )
}

<TradeAction>  (
    CLOSED {
       (  $<TradeAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <price> @linkml:String * ;
             <priceCurrency> @<Text> * ;
             <priceSpecification> @<PriceSpecification> *
          ) ;
          rdf:type [ <TradeAction> ] ?
       )
    } OR @<BuyAction> OR @<DonateAction> OR @<OrderAction> OR @<PayAction> OR @<PreOrderAction> OR @<QuoteAction> OR @<RentAction>
    OR @<SellAction> OR @<TipAction>
)

<TraditionalChinese> CLOSED {
    (  $<TraditionalChinese_tes> rdf:type . * ;
       rdf:type [ <TraditionalChinese> ] ?
    )
}

<Trailer> CLOSED {
    (  $<Trailer_tes> rdf:type . * ;
       rdf:type [ <Trailer> ] ?
    )
}

<TrailerWeight> CLOSED {
    (  $<TrailerWeight_tes> rdf:type . * ;
       rdf:type [ <TrailerWeight> ] ?
    )
}

<TrainingSalary> CLOSED {
    (  $<TrainingSalary_tes> rdf:type . * ;
       rdf:type [ <TrainingSalary> ] ?
    )
}

<TrainName> CLOSED {
    (  $<TrainName_tes> rdf:type . * ;
       rdf:type [ <TrainName> ] ?
    )
}

<TrainNumber> CLOSED {
    (  $<TrainNumber_tes> rdf:type . * ;
       rdf:type [ <TrainNumber> ] ?
    )
}

<TrainReservation> CLOSED {
    (  $<TrainReservation_tes> (  &<Reservation_tes> ;
          rdf:type [ <Reservation> ] ?
       ) ;
       rdf:type [ <TrainReservation> ] ?
    )
}

<TrainStation> CLOSED {
    (  $<TrainStation_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <TrainStation> ] ?
    )
}

<TrainTrip> CLOSED {
    (  $<TrainTrip_tes> (  &<Trip_tes> ;
          rdf:type [ <Trip> ] ? ;
          <arrivalPlatform> @<Text> * ;
          <arrivalStation> @<TrainStation> * ;
          <departurePlatform> @<Text> * ;
          <departureStation> @<TrainStation> * ;
          <trainName> @<Text> * ;
          <trainNumber> @<Text> *
       ) ;
       rdf:type [ <TrainTrip> ] ?
    )
}

<Transcript> CLOSED {
    (  $<Transcript_tes> rdf:type . * ;
       rdf:type [ <Transcript> ] ?
    )
}

<TransFatContent> CLOSED {
    (  $<TransFatContent_tes> rdf:type . * ;
       rdf:type [ <TransFatContent> ] ?
    )
}

<TransferAction>  (
    CLOSED {
       (  $<TransferAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <fromLocation> @<Place> * ;
             <toLocation> @<Place> *
          ) ;
          rdf:type [ <TransferAction> ] ?
       )
    } OR @<BorrowAction> OR @<DownloadAction> OR @<GiveAction> OR @<LendAction> OR @<MoneyTransfer> OR @<ReceiveAction> OR
    @<ReturnAction> OR @<SendAction> OR @<TakeAction>
)

<TransformedContent> CLOSED {
    (  $<TransformedContent_tes> rdf:type . * ;
       rdf:type [ <TransformedContent> ] ?
    )
}

<TransitMap> CLOSED {
    (  $<TransitMap_tes> rdf:type . * ;
       rdf:type [ <TransitMap> ] ?
    )
}

<TransitTime> CLOSED {
    (  $<TransitTime_tes> rdf:type . * ;
       rdf:type [ <TransitTime> ] ?
    )
}

<TransitTimeLabel> CLOSED {
    (  $<TransitTimeLabel_tes> rdf:type . * ;
       rdf:type [ <TransitTimeLabel> ] ?
    )
}

<TranslationOfWork> CLOSED {
    (  $<TranslationOfWork_tes> rdf:type . * ;
       rdf:type [ <TranslationOfWork> ] ?
    )
}

<Translator> CLOSED {
    (  $<Translator_tes> rdf:type . * ;
       rdf:type [ <Translator> ] ?
    )
}

<TransmissionMethod> CLOSED {
    (  $<TransmissionMethod_tes> rdf:type . * ;
       rdf:type [ <TransmissionMethod> ] ?
    )
}

<TravelAction> CLOSED {
    (  $<TravelAction_tes> (  &<MoveAction_tes> ;
          rdf:type [ <MoveAction> ] ? ;
          <distance> @<Distance> *
       ) ;
       rdf:type [ <TravelAction> ] ?
    )
}

<TravelAgency> CLOSED {
    (  $<TravelAgency_tes> (  &<LocalBusiness_tes> ;
          rdf:type [ <LocalBusiness> ] ?
       ) ;
       rdf:type [ <TravelAgency> ] ?
    )
}

<TravelBans> CLOSED {
    (  $<TravelBans_tes> rdf:type . * ;
       rdf:type [ <TravelBans> ] ?
    )
}

<TreatmentIndication> CLOSED {
    (  $<TreatmentIndication_tes> (  &<MedicalIndication_tes> ;
          rdf:type [ <MedicalIndication> ] ?
       ) ;
       rdf:type [ <TreatmentIndication> ] ?
    )
}

<TreatmentsHealthAspect> CLOSED {
    (  $<TreatmentsHealthAspect_tes> rdf:type . * ;
       rdf:type [ <TreatmentsHealthAspect> ] ?
    )
}

<TrialDesign> CLOSED {
    (  $<TrialDesign_tes> rdf:type . * ;
       rdf:type [ <TrialDesign> ] ?
    )
}

<Tributary> CLOSED {
    (  $<Tributary_tes> rdf:type . * ;
       rdf:type [ <Tributary> ] ?
    )
}

<Trip>  (
    CLOSED {
       (  $<Trip_tes> (  &<Intangible_tes> ;
             rdf:type [ <Intangible> ] ? ;
             <arrivalTime> @linkml:String * ;
             <departureTime> @linkml:String * ;
             <itinerary> @linkml:String * ;
             <offers> @linkml:String * ;
             <partOfTrip> @<Trip> * ;
             <provider> @linkml:String * ;
             <subTrip> @<Trip> *
          ) ;
          rdf:type [ <Trip> ] ?
       )
    } OR @<BoatTrip> OR @<BusTrip> OR @<Flight> OR @<TouristTrip> OR @<TrainTrip>
)

<TripleBlindedTrial> CLOSED {
    (  $<TripleBlindedTrial_tes> rdf:type . * ;
       rdf:type [ <TripleBlindedTrial> ] ?
    )
}

<True> CLOSED {
    (  $<True_tes> rdf:type . * ;
       rdf:type [ <True> ] ?
    )
}

<Tuesday> CLOSED {
    (  $<Tuesday_tes> rdf:type . * ;
       rdf:type [ <Tuesday> ] ?
    )
}

<TVClip> CLOSED {
    (  $<TVClip_tes> (  &<Clip_tes> ;
          rdf:type [ <Clip> ] ? ;
          <partOfTVSeries> @<TVSeries> *
       ) ;
       rdf:type [ <TVClip> ] ?
    )
}

<TVEpisode> CLOSED {
    (  $<TVEpisode_tes> (  &<Episode_tes> ;
          rdf:type [ <Episode> ] ? ;
          <partOfTVSeries> @<TVSeries> * ;
          <titleEIDR> @linkml:String * ;
          <subtitleLanguage> @linkml:String *
       ) ;
       rdf:type [ <TVEpisode> ] ?
    )
}

<TVSeason> CLOSED {
    (  $<TVSeason_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          &<CreativeWorkSeason_tes> ;
          rdf:type [ <CreativeWorkSeason> ] ? ;
          <partOfTVSeries> @<TVSeries> * ;
          <actor> @<Person> * ;
          <episode> @<Episode> * ;
          <partOfSeries> @<CreativeWorkSeries> * ;
          <seasonNumber> @linkml:String * ;
          <director> @<Person> * ;
          <endDate> @linkml:String * ;
          <episodes> @<Episode> * ;
          <numberOfEpisodes> @<Integer> * ;
          <productionCompany> @<Organization> * ;
          <startDate> @linkml:String * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <TVSeason> ] ?
    )
}

<TVSeries> CLOSED {
    (  $<TVSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ? ;
          &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <actor> @<Person> * ;
          <containsSeason> @<CreativeWorkSeason> * ;
          <episode> @<Episode> * ;
          <season> @<CreativeWork> * ;
          <actors> @<Person> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <episodes> @<Episode> * ;
          <musicBy> @linkml:String * ;
          <numberOfEpisodes> @<Integer> * ;
          <numberOfSeasons> @<Integer> * ;
          <productionCompany> @<Organization> * ;
          <seasons> @<CreativeWorkSeason> * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <TVSeries> ] ?
    )
}

<TypeAndQuantityNode> CLOSED {
    (  $<TypeAndQuantityNode_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <amountOfThisGood> @<Number> * ;
          <businessFunction> @<BusinessFunction> * ;
          <typeOfGood> @linkml:String * ;
          <unitCode> @linkml:String * ;
          <unitText> @<Text> *
       ) ;
       rdf:type [ <TypeAndQuantityNode> ] ?
    )
}

<TypeOfBed> CLOSED {
    (  $<TypeOfBed_tes> rdf:type . * ;
       rdf:type [ <TypeOfBed> ] ?
    )
}

<TypeOfGood> CLOSED {
    (  $<TypeOfGood_tes> rdf:type . * ;
       rdf:type [ <TypeOfGood> ] ?
    )
}

<TypesHealthAspect> CLOSED {
    (  $<TypesHealthAspect_tes> rdf:type . * ;
       rdf:type [ <TypesHealthAspect> ] ?
    )
}

<TypicalAgeRange> CLOSED {
    (  $<TypicalAgeRange_tes> rdf:type . * ;
       rdf:type [ <TypicalAgeRange> ] ?
    )
}

<TypicalCreditsPerTerm> CLOSED {
    (  $<TypicalCreditsPerTerm_tes> rdf:type . * ;
       rdf:type [ <TypicalCreditsPerTerm> ] ?
    )
}

<TypicalTest> CLOSED {
    (  $<TypicalTest_tes> rdf:type . * ;
       rdf:type [ <TypicalTest> ] ?
    )
}

<UKNonprofitType> CLOSED {
    (  $<UKNonprofitType_tes> (  &<NonprofitType_tes> ;
          rdf:type [ <NonprofitType> ] ?
       ) ;
       rdf:type [ <UKNonprofitType> ] ?
    )
}

<UKTrust> CLOSED {
    (  $<UKTrust_tes> rdf:type . * ;
       rdf:type [ <UKTrust> ] ?
    )
}

<Ultrasound> CLOSED {
    (  $<Ultrasound_tes> rdf:type . * ;
       rdf:type [ <Ultrasound> ] ?
    )
}

<UnderName> CLOSED {
    (  $<UnderName_tes> rdf:type . * ;
       rdf:type [ <UnderName> ] ?
    )
}

<UnemploymentSupport> CLOSED {
    (  $<UnemploymentSupport_tes> rdf:type . * ;
       rdf:type [ <UnemploymentSupport> ] ?
    )
}

<UnincorporatedAssociationCharity> CLOSED {
    (  $<UnincorporatedAssociationCharity_tes> rdf:type . * ;
       rdf:type [ <UnincorporatedAssociationCharity> ] ?
    )
}

<UnitCode> CLOSED {
    (  $<UnitCode_tes> rdf:type . * ;
       rdf:type [ <UnitCode> ] ?
    )
}

<UnitPriceSpecification> CLOSED {
    (  $<UnitPriceSpecification_tes> (  &<PriceSpecification_tes> ;
          rdf:type [ <PriceSpecification> ] ? ;
          <billingDuration> @linkml:String * ;
          <billingIncrement> @<Number> * ;
          <billingStart> @<Number> * ;
          <priceComponentType> @<PriceComponentTypeEnumeration> * ;
          <priceType> @linkml:String * ;
          <referenceQuantity> @<QuantitativeValue> * ;
          <unitCode> @linkml:String * ;
          <unitText> @<Text> *
       ) ;
       rdf:type [ <UnitPriceSpecification> ] ?
    )
}

<UnitText> CLOSED {
    (  $<UnitText_tes> rdf:type . * ;
       rdf:type [ <UnitText> ] ?
    )
}

<UnofficialLegalValue> CLOSED {
    (  $<UnofficialLegalValue_tes> rdf:type . * ;
       rdf:type [ <UnofficialLegalValue> ] ?
    )
}

<UnRegisterAction> CLOSED {
    (  $<UnRegisterAction_tes> (  &<InteractAction_tes> ;
          rdf:type [ <InteractAction> ] ?
       ) ;
       rdf:type [ <UnRegisterAction> ] ?
    )
}

<UnsaturatedFatContent> CLOSED {
    (  $<UnsaturatedFatContent_tes> rdf:type . * ;
       rdf:type [ <UnsaturatedFatContent> ] ?
    )
}

<UpdateAction>  (
    CLOSED {
       (  $<UpdateAction_tes> (  &<Action_tes> ;
             rdf:type [ <Action> ] ? ;
             <collection> @<Thing> * ;
             <targetCollection> @<Thing> *
          ) ;
          rdf:type [ <UpdateAction> ] ?
       )
    } OR @<AddAction> OR @<DeleteAction> OR @<ReplaceAction>
)

<UploadDate> CLOSED {
    (  $<UploadDate_tes> rdf:type . * ;
       rdf:type [ <UploadDate> ] ?
    )
}

<UpvoteCount> CLOSED {
    (  $<UpvoteCount_tes> rdf:type . * ;
       rdf:type [ <UpvoteCount> ] ?
    )
}

<URL> CLOSED {
    (  $<URL_tes> (  &<Text_tes> ;
          rdf:type [ <Text> ] ?
       ) ;
       rdf:type [ <URL> ] ?
    )
}

<Url> CLOSED {
    (  $<Url_tes> rdf:type . * ;
       rdf:type [ <Url> ] ?
    )
}

<UrlTemplate> CLOSED {
    (  $<UrlTemplate_tes> rdf:type . * ;
       rdf:type [ <UrlTemplate> ] ?
    )
}

<Urologic> CLOSED {
    (  $<Urologic_tes> rdf:type . * ;
       rdf:type [ <Urologic> ] ?
    )
}

<UsageOrScheduleHealthAspect> CLOSED {
    (  $<UsageOrScheduleHealthAspect_tes> rdf:type . * ;
       rdf:type [ <UsageOrScheduleHealthAspect> ] ?
    )
}

<UseAction>  (
    CLOSED {
       (  $<UseAction_tes> (  &<ConsumeAction_tes> ;
             rdf:type [ <ConsumeAction> ] ?
          ) ;
          rdf:type [ <UseAction> ] ?
       )
    } OR @<WearAction>
)

<UsedCondition> CLOSED {
    (  $<UsedCondition_tes> rdf:type . * ;
       rdf:type [ <UsedCondition> ] ?
    )
}

<UsedToDiagnose> CLOSED {
    (  $<UsedToDiagnose_tes> rdf:type . * ;
       rdf:type [ <UsedToDiagnose> ] ?
    )
}

<UserBlocks> CLOSED {
    (  $<UserBlocks_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserBlocks> ] ?
    )
}

<UserCheckins> CLOSED {
    (  $<UserCheckins_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserCheckins> ] ?
    )
}

<UserComments> CLOSED {
    (  $<UserComments_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ? ;
          <creator> @linkml:String * ;
          <commentText> @<Text> * ;
          <commentTime> @linkml:String * ;
          <discusses> @<CreativeWork> * ;
          <replyToUrl> @<URL> *
       ) ;
       rdf:type [ <UserComments> ] ?
    )
}

<UserDownloads> CLOSED {
    (  $<UserDownloads_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserDownloads> ] ?
    )
}

<UserInteraction>  (
    CLOSED {
       (  $<UserInteraction_tes> (  &<Event_tes> ;
             rdf:type [ <Event> ] ?
          ) ;
          rdf:type [ <UserInteraction> ] ?
       )
    } OR @<UserBlocks> OR @<UserCheckins> OR @<UserComments> OR @<UserDownloads> OR @<UserLikes> OR @<UserPageVisits> OR
    @<UserPlays> OR @<UserPlusOnes> OR @<UserTweets>
)

<UserInteractionCount> CLOSED {
    (  $<UserInteractionCount_tes> rdf:type . * ;
       rdf:type [ <UserInteractionCount> ] ?
    )
}

<UserLikes> CLOSED {
    (  $<UserLikes_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserLikes> ] ?
    )
}

<UserPageVisits> CLOSED {
    (  $<UserPageVisits_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserPageVisits> ] ?
    )
}

<UserPlays> CLOSED {
    (  $<UserPlays_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserPlays> ] ?
    )
}

<UserPlusOnes> CLOSED {
    (  $<UserPlusOnes_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserPlusOnes> ] ?
    )
}

<UserReview> CLOSED {
    (  $<UserReview_tes> (  &<Review_tes> ;
          rdf:type [ <Review> ] ?
       ) ;
       rdf:type [ <UserReview> ] ?
    )
}

<UserTweets> CLOSED {
    (  $<UserTweets_tes> (  &<UserInteraction_tes> ;
          rdf:type [ <UserInteraction> ] ?
       ) ;
       rdf:type [ <UserTweets> ] ?
    )
}

<UsesDevice> CLOSED {
    (  $<UsesDevice_tes> rdf:type . * ;
       rdf:type [ <UsesDevice> ] ?
    )
}

<UsesHealthPlanIdStandard> CLOSED {
    (  $<UsesHealthPlanIdStandard_tes> rdf:type . * ;
       rdf:type [ <UsesHealthPlanIdStandard> ] ?
    )
}

<USNonprofitType> CLOSED {
    (  $<USNonprofitType_tes> (  &<NonprofitType_tes> ;
          rdf:type [ <NonprofitType> ] ?
       ) ;
       rdf:type [ <USNonprofitType> ] ?
    )
}

<Utterances> CLOSED {
    (  $<Utterances_tes> rdf:type . * ;
       rdf:type [ <Utterances> ] ?
    )
}

<ValidFor> CLOSED {
    (  $<ValidFor_tes> rdf:type . * ;
       rdf:type [ <ValidFor> ] ?
    )
}

<ValidFrom> CLOSED {
    (  $<ValidFrom_tes> rdf:type . * ;
       rdf:type [ <ValidFrom> ] ?
    )
}

<ValidIn> CLOSED {
    (  $<ValidIn_tes> rdf:type . * ;
       rdf:type [ <ValidIn> ] ?
    )
}

<ValidThrough> CLOSED {
    (  $<ValidThrough_tes> rdf:type . * ;
       rdf:type [ <ValidThrough> ] ?
    )
}

<ValidUntil> CLOSED {
    (  $<ValidUntil_tes> rdf:type . * ;
       rdf:type [ <ValidUntil> ] ?
    )
}

<Value> CLOSED {
    (  $<Value_tes> rdf:type . * ;
       rdf:type [ <Value> ] ?
    )
}

<ValueAddedTaxIncluded> CLOSED {
    (  $<ValueAddedTaxIncluded_tes> rdf:type . * ;
       rdf:type [ <ValueAddedTaxIncluded> ] ?
    )
}

<ValueMaxLength> CLOSED {
    (  $<ValueMaxLength_tes> rdf:type . * ;
       rdf:type [ <ValueMaxLength> ] ?
    )
}

<ValueMinLength> CLOSED {
    (  $<ValueMinLength_tes> rdf:type . * ;
       rdf:type [ <ValueMinLength> ] ?
    )
}

<ValueName> CLOSED {
    (  $<ValueName_tes> rdf:type . * ;
       rdf:type [ <ValueName> ] ?
    )
}

<ValuePattern> CLOSED {
    (  $<ValuePattern_tes> rdf:type . * ;
       rdf:type [ <ValuePattern> ] ?
    )
}

<ValueReference> CLOSED {
    (  $<ValueReference_tes> rdf:type . * ;
       rdf:type [ <ValueReference> ] ?
    )
}

<ValueRequired> CLOSED {
    (  $<ValueRequired_tes> rdf:type . * ;
       rdf:type [ <ValueRequired> ] ?
    )
}

<VariableMeasured> CLOSED {
    (  $<VariableMeasured_tes> rdf:type . * ;
       rdf:type [ <VariableMeasured> ] ?
    )
}

<VariantCover> CLOSED {
    (  $<VariantCover_tes> rdf:type . * ;
       rdf:type [ <VariantCover> ] ?
    )
}

<VariesBy> CLOSED {
    (  $<VariesBy_tes> rdf:type . * ;
       rdf:type [ <VariesBy> ] ?
    )
}

<VatID> CLOSED {
    (  $<VatID_tes> rdf:type . * ;
       rdf:type [ <VatID> ] ?
    )
}

<VeganDiet> CLOSED {
    (  $<VeganDiet_tes> rdf:type . * ;
       rdf:type [ <VeganDiet> ] ?
    )
}

<VegetarianDiet> CLOSED {
    (  $<VegetarianDiet_tes> rdf:type . * ;
       rdf:type [ <VegetarianDiet> ] ?
    )
}

<Vehicle>  (
    CLOSED {
       (  $<Vehicle_tes> (  &<Product_tes> ;
             rdf:type [ <Product> ] ? ;
             <callSign> @<Text> * ;
             <vehicleIdentificationNumber> @<Text> * ;
             <accelerationTime> @<QuantitativeValue> * ;
             <bodyType> @linkml:String * ;
             <cargoVolume> @<QuantitativeValue> * ;
             <dateVehicleFirstRegistered> @<Date> * ;
             <driveWheelConfiguration> @linkml:String * ;
             <emissionsCO2> @<Number> * ;
             <fuelCapacity> @<QuantitativeValue> * ;
             <fuelConsumption> @<QuantitativeValue> * ;
             <fuelEfficiency> @<QuantitativeValue> * ;
             <fuelType> @linkml:String * ;
             <knownVehicleDamages> @<Text> * ;
             <meetsEmissionStandard> @linkml:String * ;
             <mileageFromOdometer> @<QuantitativeValue> * ;
             <modelDate> @<Date> * ;
             <numberOfAirbags> @linkml:String * ;
             <numberOfAxles> @linkml:String * ;
             <numberOfDoors> @linkml:String * ;
             <numberOfForwardGears> @linkml:String * ;
             <numberOfPreviousOwners> @linkml:String * ;
             <payload> @<QuantitativeValue> * ;
             <seatingCapacity> @linkml:String * ;
             <speed> @<QuantitativeValue> * ;
             <steeringPosition> @<SteeringPositionValue> * ;
             <tongueWeight> @<QuantitativeValue> * ;
             <trailerWeight> @<QuantitativeValue> * ;
             <vehicleConfiguration> @<Text> * ;
             <vehicleEngine> @<EngineSpecification> * ;
             <vehicleInteriorColor> @<Text> * ;
             <vehicleInteriorType> @<Text> * ;
             <vehicleModelDate> @<Date> * ;
             <vehicleSeatingCapacity> @linkml:String * ;
             <vehicleSpecialUsage> @linkml:String * ;
             <vehicleTransmission> @linkml:String * ;
             <weightTotal> @<QuantitativeValue> * ;
             <wheelbase> @<QuantitativeValue> *
          ) ;
          rdf:type [ <Vehicle> ] ?
       )
    } OR @<BusOrCoach> OR @<Car> OR @<Motorcycle> OR @<MotorizedBicycle>
)

<VehicleConfiguration> CLOSED {
    (  $<VehicleConfiguration_tes> rdf:type . * ;
       rdf:type [ <VehicleConfiguration> ] ?
    )
}

<VehicleEngine> CLOSED {
    (  $<VehicleEngine_tes> rdf:type . * ;
       rdf:type [ <VehicleEngine> ] ?
    )
}

<VehicleInteriorColor> CLOSED {
    (  $<VehicleInteriorColor_tes> rdf:type . * ;
       rdf:type [ <VehicleInteriorColor> ] ?
    )
}

<VehicleInteriorType> CLOSED {
    (  $<VehicleInteriorType_tes> rdf:type . * ;
       rdf:type [ <VehicleInteriorType> ] ?
    )
}

<VehicleModelDate> CLOSED {
    (  $<VehicleModelDate_tes> rdf:type . * ;
       rdf:type [ <VehicleModelDate> ] ?
    )
}

<VehicleSeatingCapacity> CLOSED {
    (  $<VehicleSeatingCapacity_tes> rdf:type . * ;
       rdf:type [ <VehicleSeatingCapacity> ] ?
    )
}

<VehicleSpecialUsage> CLOSED {
    (  $<VehicleSpecialUsage_tes> rdf:type . * ;
       rdf:type [ <VehicleSpecialUsage> ] ?
    )
}

<VehicleTransmission> CLOSED {
    (  $<VehicleTransmission_tes> rdf:type . * ;
       rdf:type [ <VehicleTransmission> ] ?
    )
}

<Vein> CLOSED {
    (  $<Vein_tes> (  &<Vessel_tes> ;
          rdf:type [ <Vessel> ] ? ;
          <drainsTo> @<Vessel> * ;
          <regionDrained> @linkml:String * ;
          <tributary> @<AnatomicalStructure> *
       ) ;
       rdf:type [ <Vein> ] ?
    )
}

<VenueMap> CLOSED {
    (  $<VenueMap_tes> rdf:type . * ;
       rdf:type [ <VenueMap> ] ?
    )
}

<Version> CLOSED {
    (  $<Version_tes> rdf:type . * ;
       rdf:type [ <Version> ] ?
    )
}

<Vessel>  (
    CLOSED {
       (  $<Vessel_tes> (  &<AnatomicalStructure_tes> ;
             rdf:type [ <AnatomicalStructure> ] ?
          ) ;
          rdf:type [ <Vessel> ] ?
       )
    } OR @<Artery> OR @<LymphaticVessel> OR @<Vein>
)

<VeterinaryCare> CLOSED {
    (  $<VeterinaryCare_tes> (  &<MedicalOrganization_tes> ;
          rdf:type [ <MedicalOrganization> ] ?
       ) ;
       rdf:type [ <VeterinaryCare> ] ?
    )
}

<Video> CLOSED {
    (  $<Video_tes> rdf:type . * ;
       rdf:type [ <Video> ] ?
    )
}

<VideoFormat> CLOSED {
    (  $<VideoFormat_tes> rdf:type . * ;
       rdf:type [ <VideoFormat> ] ?
    )
}

<VideoFrameSize> CLOSED {
    (  $<VideoFrameSize_tes> rdf:type . * ;
       rdf:type [ <VideoFrameSize> ] ?
    )
}

<VideoGallery> CLOSED {
    (  $<VideoGallery_tes> (  &<MediaGallery_tes> ;
          rdf:type [ <MediaGallery> ] ?
       ) ;
       rdf:type [ <VideoGallery> ] ?
    )
}

<VideoGame> CLOSED {
    (  $<VideoGame_tes> (  &<Game_tes> ;
          rdf:type [ <Game> ] ? ;
          &<SoftwareApplication_tes> ;
          rdf:type [ <SoftwareApplication> ] ? ;
          <actor> @<Person> * ;
          <actors> @<Person> * ;
          <cheatCode> @<CreativeWork> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <gamePlatform> @linkml:String * ;
          <gameServer> @<GameServer> * ;
          <gameTip> @<CreativeWork> * ;
          <musicBy> @linkml:String * ;
          <playMode> @<GamePlayMode> * ;
          <trailer> @<VideoObject> * ;
          <applicationCategory> @linkml:String * ;
          <applicationSubCategory> @linkml:String * ;
          <applicationSuite> @<Text> * ;
          <availableOnDevice> @<Text> * ;
          <countriesNotSupported> @<Text> * ;
          <countriesSupported> @<Text> * ;
          <device> @<Text> * ;
          <downloadUrl> @<URL> * ;
          <featureList> @linkml:String * ;
          <fileSize> @<Text> * ;
          <installUrl> @<URL> * ;
          <memoryRequirements> @linkml:String * ;
          <operatingSystem> @<Text> * ;
          <permissions> @<Text> * ;
          <processorRequirements> @<Text> * ;
          <releaseNotes> @linkml:String * ;
          <requirements> @linkml:String * ;
          <screenshot> @linkml:String * ;
          <softwareAddOn> @<SoftwareApplication> * ;
          <softwareHelp> @<CreativeWork> * ;
          <softwareRequirements> @linkml:String * ;
          <softwareVersion> @<Text> * ;
          <storageRequirements> @linkml:String * ;
          <supportingData> @<DataFeed> *
       ) ;
       rdf:type [ <VideoGame> ] ?
    )
}

<VideoGameClip> CLOSED {
    (  $<VideoGameClip_tes> (  &<Clip_tes> ;
          rdf:type [ <Clip> ] ?
       ) ;
       rdf:type [ <VideoGameClip> ] ?
    )
}

<VideoGameSeries> CLOSED {
    (  $<VideoGameSeries_tes> (  &<CreativeWorkSeries_tes> ;
          rdf:type [ <CreativeWorkSeries> ] ? ;
          <actor> @<Person> * ;
          <containsSeason> @<CreativeWorkSeason> * ;
          <episode> @<Episode> * ;
          <season> @<CreativeWork> * ;
          <actors> @<Person> * ;
          <characterAttribute> @<Thing> * ;
          <cheatCode> @<CreativeWork> * ;
          <director> @<Person> * ;
          <directors> @<Person> * ;
          <episodes> @<Episode> * ;
          <gameItem> @<Thing> * ;
          <gameLocation> @linkml:String * ;
          <gamePlatform> @linkml:String * ;
          <musicBy> @linkml:String * ;
          <numberOfEpisodes> @<Integer> * ;
          <numberOfPlayers> @<QuantitativeValue> * ;
          <numberOfSeasons> @<Integer> * ;
          <playMode> @<GamePlayMode> * ;
          <productionCompany> @<Organization> * ;
          <quest> @<Thing> * ;
          <seasons> @<CreativeWorkSeason> * ;
          <trailer> @<VideoObject> *
       ) ;
       rdf:type [ <VideoGameSeries> ] ?
    )
}

<VideoObject>  (
    CLOSED {
       (  $<VideoObject_tes> (  &<MediaObject_tes> ;
             rdf:type [ <MediaObject> ] ? ;
             <actor> @<Person> * ;
             <caption> @linkml:String * ;
             <embeddedTextCaption> @<Text> * ;
             <actors> @<Person> * ;
             <director> @<Person> * ;
             <directors> @<Person> * ;
             <musicBy> @linkml:String * ;
             <thumbnail> @<ImageObject> * ;
             <transcript> @<Text> * ;
             <videoFrameSize> @<Text> * ;
             <videoQuality> @<Text> *
          ) ;
          rdf:type [ <VideoObject> ] ?
       )
    } OR @<VideoObjectSnapshot>
)

<VideoObjectSnapshot> CLOSED {
    (  $<VideoObjectSnapshot_tes> (  &<VideoObject_tes> ;
          rdf:type [ <VideoObject> ] ?
       ) ;
       rdf:type [ <VideoObjectSnapshot> ] ?
    )
}

<VideoQuality> CLOSED {
    (  $<VideoQuality_tes> rdf:type . * ;
       rdf:type [ <VideoQuality> ] ?
    )
}

<ViewAction> CLOSED {
    (  $<ViewAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <ViewAction> ] ?
    )
}

<VinylFormat> CLOSED {
    (  $<VinylFormat_tes> rdf:type . * ;
       rdf:type [ <VinylFormat> ] ?
    )
}

<VirtualLocation> CLOSED {
    (  $<VirtualLocation_tes> (  &<Intangible_tes> ;
          rdf:type [ <Intangible> ] ?
       ) ;
       rdf:type [ <VirtualLocation> ] ?
    )
}

<Virus> CLOSED {
    (  $<Virus_tes> rdf:type . * ;
       rdf:type [ <Virus> ] ?
    )
}

<VisualArtsEvent> CLOSED {
    (  $<VisualArtsEvent_tes> (  &<Event_tes> ;
          rdf:type [ <Event> ] ?
       ) ;
       rdf:type [ <VisualArtsEvent> ] ?
    )
}

<VisualArtwork>  (
    CLOSED {
       (  $<VisualArtwork_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <artMedium> @linkml:String * ;
             <surface> @linkml:String * ;
             <artEdition> @linkml:String * ;
             <artform> @linkml:String * ;
             <artist> @<Person> * ;
             <artworkSurface> @linkml:String * ;
             <colorist> @<Person> * ;
             <depth> @linkml:String * ;
             <height> @linkml:String * ;
             <inker> @<Person> * ;
             <letterer> @<Person> * ;
             <penciler> @<Person> * ;
             <width> @linkml:String *
          ) ;
          rdf:type [ <VisualArtwork> ] ?
       )
    } OR @<CoverArt>
)

<VitalSign> CLOSED {
    (  $<VitalSign_tes> (  &<MedicalSign_tes> ;
          rdf:type [ <MedicalSign> ] ?
       ) ;
       rdf:type [ <VitalSign> ] ?
    )
}

<Volcano> CLOSED {
    (  $<Volcano_tes> (  &<Landform_tes> ;
          rdf:type [ <Landform> ] ?
       ) ;
       rdf:type [ <Volcano> ] ?
    )
}

<VoteAction> CLOSED {
    (  $<VoteAction_tes> (  &<ChooseAction_tes> ;
          rdf:type [ <ChooseAction> ] ? ;
          <candidate> @<Person> *
       ) ;
       rdf:type [ <VoteAction> ] ?
    )
}

<WantAction> CLOSED {
    (  $<WantAction_tes> (  &<ReactAction_tes> ;
          rdf:type [ <ReactAction> ] ?
       ) ;
       rdf:type [ <WantAction> ] ?
    )
}

<Warning> CLOSED {
    (  $<Warning_tes> rdf:type . * ;
       rdf:type [ <Warning> ] ?
    )
}

<Warranty> CLOSED {
    (  $<Warranty_tes> rdf:type . * ;
       rdf:type [ <Warranty> ] ?
    )
}

<WarrantyPromise> CLOSED {
    (  $<WarrantyPromise_tes> (  &<StructuredValue_tes> ;
          rdf:type [ <StructuredValue> ] ? ;
          <durationOfWarranty> @<QuantitativeValue> * ;
          <warrantyScope> @<WarrantyScope> *
       ) ;
       rdf:type [ <WarrantyPromise> ] ?
    )
}

<WarrantyPromise> CLOSED {
    (  $<WarrantyPromise_tes> rdf:type . * ;
       rdf:type [ <WarrantyPromise> ] ?
    )
}

<WarrantyScope> CLOSED {
    (  $<WarrantyScope_tes> (  &<Enumeration_tes> ;
          rdf:type [ <Enumeration> ] ?
       ) ;
       rdf:type [ <WarrantyScope> ] ?
    )
}

<WarrantyScope> CLOSED {
    (  $<WarrantyScope_tes> rdf:type . * ;
       rdf:type [ <WarrantyScope> ] ?
    )
}

<WatchAction> CLOSED {
    (  $<WatchAction_tes> (  &<ConsumeAction_tes> ;
          rdf:type [ <ConsumeAction> ] ?
       ) ;
       rdf:type [ <WatchAction> ] ?
    )
}

<Waterfall> CLOSED {
    (  $<Waterfall_tes> (  &<BodyOfWater_tes> ;
          rdf:type [ <BodyOfWater> ] ?
       ) ;
       rdf:type [ <Waterfall> ] ?
    )
}

<WearableMeasurementBack> CLOSED {
    (  $<WearableMeasurementBack_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementBack> ] ?
    )
}

<WearableMeasurementChestOrBust> CLOSED {
    (  $<WearableMeasurementChestOrBust_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementChestOrBust> ] ?
    )
}

<WearableMeasurementCollar> CLOSED {
    (  $<WearableMeasurementCollar_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementCollar> ] ?
    )
}

<WearableMeasurementCup> CLOSED {
    (  $<WearableMeasurementCup_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementCup> ] ?
    )
}

<WearableMeasurementHeight> CLOSED {
    (  $<WearableMeasurementHeight_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementHeight> ] ?
    )
}

<WearableMeasurementHips> CLOSED {
    (  $<WearableMeasurementHips_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementHips> ] ?
    )
}

<WearableMeasurementInseam> CLOSED {
    (  $<WearableMeasurementInseam_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementInseam> ] ?
    )
}

<WearableMeasurementLength> CLOSED {
    (  $<WearableMeasurementLength_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementLength> ] ?
    )
}

<WearableMeasurementOutsideLeg> CLOSED {
    (  $<WearableMeasurementOutsideLeg_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementOutsideLeg> ] ?
    )
}

<WearableMeasurementSleeve> CLOSED {
    (  $<WearableMeasurementSleeve_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementSleeve> ] ?
    )
}

<WearableMeasurementTypeEnumeration> CLOSED {
    (  $<WearableMeasurementTypeEnumeration_tes> (  &<MeasurementTypeEnumeration_tes> ;
          rdf:type [ <MeasurementTypeEnumeration> ] ?
       ) ;
       rdf:type [ <WearableMeasurementTypeEnumeration> ] ?
    )
}

<WearableMeasurementWaist> CLOSED {
    (  $<WearableMeasurementWaist_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementWaist> ] ?
    )
}

<WearableMeasurementWidth> CLOSED {
    (  $<WearableMeasurementWidth_tes> rdf:type . * ;
       rdf:type [ <WearableMeasurementWidth> ] ?
    )
}

<WearableSizeGroupBig> CLOSED {
    (  $<WearableSizeGroupBig_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupBig> ] ?
    )
}

<WearableSizeGroupBoys> CLOSED {
    (  $<WearableSizeGroupBoys_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupBoys> ] ?
    )
}

<WearableSizeGroupEnumeration> CLOSED {
    (  $<WearableSizeGroupEnumeration_tes> (  &<SizeGroupEnumeration_tes> ;
          rdf:type [ <SizeGroupEnumeration> ] ?
       ) ;
       rdf:type [ <WearableSizeGroupEnumeration> ] ?
    )
}

<WearableSizeGroupExtraShort> CLOSED {
    (  $<WearableSizeGroupExtraShort_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupExtraShort> ] ?
    )
}

<WearableSizeGroupExtraTall> CLOSED {
    (  $<WearableSizeGroupExtraTall_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupExtraTall> ] ?
    )
}

<WearableSizeGroupGirls> CLOSED {
    (  $<WearableSizeGroupGirls_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupGirls> ] ?
    )
}

<WearableSizeGroupHusky> CLOSED {
    (  $<WearableSizeGroupHusky_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupHusky> ] ?
    )
}

<WearableSizeGroupInfants> CLOSED {
    (  $<WearableSizeGroupInfants_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupInfants> ] ?
    )
}

<WearableSizeGroupJuniors> CLOSED {
    (  $<WearableSizeGroupJuniors_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupJuniors> ] ?
    )
}

<WearableSizeGroupMaternity> CLOSED {
    (  $<WearableSizeGroupMaternity_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupMaternity> ] ?
    )
}

<WearableSizeGroupMens> CLOSED {
    (  $<WearableSizeGroupMens_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupMens> ] ?
    )
}

<WearableSizeGroupMisses> CLOSED {
    (  $<WearableSizeGroupMisses_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupMisses> ] ?
    )
}

<WearableSizeGroupPetite> CLOSED {
    (  $<WearableSizeGroupPetite_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupPetite> ] ?
    )
}

<WearableSizeGroupPlus> CLOSED {
    (  $<WearableSizeGroupPlus_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupPlus> ] ?
    )
}

<WearableSizeGroupRegular> CLOSED {
    (  $<WearableSizeGroupRegular_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupRegular> ] ?
    )
}

<WearableSizeGroupShort> CLOSED {
    (  $<WearableSizeGroupShort_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupShort> ] ?
    )
}

<WearableSizeGroupTall> CLOSED {
    (  $<WearableSizeGroupTall_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupTall> ] ?
    )
}

<WearableSizeGroupWomens> CLOSED {
    (  $<WearableSizeGroupWomens_tes> rdf:type . * ;
       rdf:type [ <WearableSizeGroupWomens> ] ?
    )
}

<WearableSizeSystemAU> CLOSED {
    (  $<WearableSizeSystemAU_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemAU> ] ?
    )
}

<WearableSizeSystemBR> CLOSED {
    (  $<WearableSizeSystemBR_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemBR> ] ?
    )
}

<WearableSizeSystemCN> CLOSED {
    (  $<WearableSizeSystemCN_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemCN> ] ?
    )
}

<WearableSizeSystemContinental> CLOSED {
    (  $<WearableSizeSystemContinental_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemContinental> ] ?
    )
}

<WearableSizeSystemDE> CLOSED {
    (  $<WearableSizeSystemDE_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemDE> ] ?
    )
}

<WearableSizeSystemEN13402> CLOSED {
    (  $<WearableSizeSystemEN13402_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemEN13402> ] ?
    )
}

<WearableSizeSystemEnumeration> CLOSED {
    (  $<WearableSizeSystemEnumeration_tes> (  &<SizeSystemEnumeration_tes> ;
          rdf:type [ <SizeSystemEnumeration> ] ?
       ) ;
       rdf:type [ <WearableSizeSystemEnumeration> ] ?
    )
}

<WearableSizeSystemEurope> CLOSED {
    (  $<WearableSizeSystemEurope_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemEurope> ] ?
    )
}

<WearableSizeSystemFR> CLOSED {
    (  $<WearableSizeSystemFR_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemFR> ] ?
    )
}

<WearableSizeSystemGS1> CLOSED {
    (  $<WearableSizeSystemGS1_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemGS1> ] ?
    )
}

<WearableSizeSystemIT> CLOSED {
    (  $<WearableSizeSystemIT_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemIT> ] ?
    )
}

<WearableSizeSystemJP> CLOSED {
    (  $<WearableSizeSystemJP_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemJP> ] ?
    )
}

<WearableSizeSystemMX> CLOSED {
    (  $<WearableSizeSystemMX_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemMX> ] ?
    )
}

<WearableSizeSystemUK> CLOSED {
    (  $<WearableSizeSystemUK_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemUK> ] ?
    )
}

<WearableSizeSystemUS> CLOSED {
    (  $<WearableSizeSystemUS_tes> rdf:type . * ;
       rdf:type [ <WearableSizeSystemUS> ] ?
    )
}

<WearAction> CLOSED {
    (  $<WearAction_tes> (  &<UseAction_tes> ;
          rdf:type [ <UseAction> ] ?
       ) ;
       rdf:type [ <WearAction> ] ?
    )
}

<WebAPI> CLOSED {
    (  $<WebAPI_tes> (  &<Service_tes> ;
          rdf:type [ <Service> ] ? ;
          <documentation> @linkml:String *
       ) ;
       rdf:type [ <WebAPI> ] ?
    )
}

<WebApplication> CLOSED {
    (  $<WebApplication_tes> (  &<SoftwareApplication_tes> ;
          rdf:type [ <SoftwareApplication> ] ? ;
          <browserRequirements> @<Text> *
       ) ;
       rdf:type [ <WebApplication> ] ?
    )
}

<WebCheckinTime> CLOSED {
    (  $<WebCheckinTime_tes> rdf:type . * ;
       rdf:type [ <WebCheckinTime> ] ?
    )
}

<WebContent>  (
    CLOSED {
       (  $<WebContent_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ?
          ) ;
          rdf:type [ <WebContent> ] ?
       )
    } OR @<HealthTopicContent>
)

<WebFeed> CLOSED {
    (  $<WebFeed_tes> rdf:type . * ;
       rdf:type [ <WebFeed> ] ?
    )
}

<WebPage>  (
    CLOSED {
       (  $<WebPage_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <breadcrumb> @linkml:String * ;
             <lastReviewed> @<Date> * ;
             <mainContentOfPage> @<WebPageElement> * ;
             <primaryImageOfPage> @<ImageObject> * ;
             <relatedLink> @<URL> * ;
             <reviewedBy> @linkml:String * ;
             <significantLink> @<URL> * ;
             <significantLinks> @<URL> * ;
             <speakable> @linkml:String * ;
             <specialty> @<Specialty> *
          ) ;
          rdf:type [ <WebPage> ] ?
       )
    } OR @<AboutPage> OR @<CheckoutPage> OR @<CollectionPage> OR @<ContactPage> OR @<FAQPage> OR @<ItemPage> OR @<MedicalWebPage>
    OR @<ProfilePage> OR @<QAPage> OR @<RealEstateListing> OR @<SearchResultsPage>
)

<WebPageElement>  (
    CLOSED {
       (  $<WebPageElement_tes> (  &<CreativeWork_tes> ;
             rdf:type [ <CreativeWork> ] ? ;
             <cssSelector> @<CssSelectorType> * ;
             <xpath> @<XPathType> *
          ) ;
          rdf:type [ <WebPageElement> ] ?
       )
    } OR @<SiteNavigationElement> OR @<Table> OR @<WPAdBlock> OR @<WPFooter> OR @<WPHeader> OR @<WPSideBar>
)

<WebSite> CLOSED {
    (  $<WebSite_tes> (  &<CreativeWork_tes> ;
          rdf:type [ <CreativeWork> ] ? ;
          <issn> @<Text> *
       ) ;
       rdf:type [ <WebSite> ] ?
    )
}

<Wednesday> CLOSED {
    (  $<Wednesday_tes> rdf:type . * ;
       rdf:type [ <Wednesday> ] ?
    )
}

<Weight> CLOSED {
    (  $<Weight_tes> rdf:type . * ;
       rdf:type [ <Weight> ] ?
    )
}

<WeightTotal> CLOSED {
    (  $<WeightTotal_tes> rdf:type . * ;
       rdf:type [ <WeightTotal> ] ?
    )
}

<WesternConventional> CLOSED {
    (  $<WesternConventional_tes> rdf:type . * ;
       rdf:type [ <WesternConventional> ] ?
    )
}

<Wheelbase> CLOSED {
    (  $<Wheelbase_tes> rdf:type . * ;
       rdf:type [ <Wheelbase> ] ?
    )
}

<Wholesale> CLOSED {
    (  $<Wholesale_tes> rdf:type . * ;
       rdf:type [ <Wholesale> ] ?
    )
}

<WholesaleStore> CLOSED {
    (  $<WholesaleStore_tes> (  &<Store_tes> ;
          rdf:type [ <Store> ] ?
       ) ;
       rdf:type [ <WholesaleStore> ] ?
    )
}

<Width> CLOSED {
    (  $<Width_tes> rdf:type . * ;
       rdf:type [ <Width> ] ?
    )
}

<WinAction> CLOSED {
    (  $<WinAction_tes> (  &<AchieveAction_tes> ;
          rdf:type [ <AchieveAction> ] ? ;
          <loser> @<Person> *
       ) ;
       rdf:type [ <WinAction> ] ?
    )
}

<Winery> CLOSED {
    (  $<Winery_tes> (  &<FoodEstablishment_tes> ;
          rdf:type [ <FoodEstablishment> ] ?
       ) ;
       rdf:type [ <Winery> ] ?
    )
}

<Withdrawn> CLOSED {
    (  $<Withdrawn_tes> rdf:type . * ;
       rdf:type [ <Withdrawn> ] ?
    )
}

<WordCount> CLOSED {
    (  $<WordCount_tes> rdf:type . * ;
       rdf:type [ <WordCount> ] ?
    )
}

<WorkBasedProgram> CLOSED {
    (  $<WorkBasedProgram_tes> (  &<EducationalOccupationalProgram_tes> ;
          rdf:type [ <EducationalOccupationalProgram> ] ?
       ) ;
       rdf:type [ <WorkBasedProgram> ] ?
    )
}

<WorkersUnion> CLOSED {
    (  $<WorkersUnion_tes> (  &<Organization_tes> ;
          rdf:type [ <Organization> ] ?
       ) ;
       rdf:type [ <WorkersUnion> ] ?
    )
}

<WorkHours> CLOSED {
    (  $<WorkHours_tes> rdf:type . * ;
       rdf:type [ <WorkHours> ] ?
    )
}

<Workload> CLOSED {
    (  $<Workload_tes> rdf:type . * ;
       rdf:type [ <Workload> ] ?
    )
}

<WorksFor> CLOSED {
    (  $<WorksFor_tes> rdf:type . * ;
       rdf:type [ <WorksFor> ] ?
    )
}

<WorkTranslation> CLOSED {
    (  $<WorkTranslation_tes> rdf:type . * ;
       rdf:type [ <WorkTranslation> ] ?
    )
}

<WorstRating> CLOSED {
    (  $<WorstRating_tes> rdf:type . * ;
       rdf:type [ <WorstRating> ] ?
    )
}

<WPAdBlock> CLOSED {
    (  $<WPAdBlock_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <WPAdBlock> ] ?
    )
}

<WPFooter> CLOSED {
    (  $<WPFooter_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <WPFooter> ] ?
    )
}

<WPHeader> CLOSED {
    (  $<WPHeader_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <WPHeader> ] ?
    )
}

<WPSideBar> CLOSED {
    (  $<WPSideBar_tes> (  &<WebPageElement_tes> ;
          rdf:type [ <WebPageElement> ] ?
       ) ;
       rdf:type [ <WPSideBar> ] ?
    )
}

<WriteAction> CLOSED {
    (  $<WriteAction_tes> (  &<CreateAction_tes> ;
          rdf:type [ <CreateAction> ] ? ;
          <language> @<Language> * ;
          <inLanguage> @linkml:String *
       ) ;
       rdf:type [ <WriteAction> ] ?
    )
}

<WritePermission> CLOSED {
    (  $<WritePermission_tes> rdf:type . * ;
       rdf:type [ <WritePermission> ] ?
    )
}

<Xpath> CLOSED {
    (  $<Xpath_tes> rdf:type . * ;
       rdf:type [ <Xpath> ] ?
    )
}

<XPathType> CLOSED {
    (  $<XPathType_tes> (  &<Text_tes> ;
          rdf:type [ <Text> ] ?
       ) ;
       rdf:type [ <XPathType> ] ?
    )
}

<XRay> CLOSED {
    (  $<XRay_tes> rdf:type . * ;
       rdf:type [ <XRay> ] ?
    )
}

<YearBuilt> CLOSED {
    (  $<YearBuilt_tes> rdf:type . * ;
       rdf:type [ <YearBuilt> ] ?
    )
}

<YearlyRevenue> CLOSED {
    (  $<YearlyRevenue_tes> rdf:type . * ;
       rdf:type [ <YearlyRevenue> ] ?
    )
}

<YearsInOperation> CLOSED {
    (  $<YearsInOperation_tes> rdf:type . * ;
       rdf:type [ <YearsInOperation> ] ?
    )
}

<ZoneBoardingPolicy> CLOSED {
    (  $<ZoneBoardingPolicy_tes> rdf:type . * ;
       rdf:type [ <ZoneBoardingPolicy> ] ?
    )
}

<Zoo> CLOSED {
    (  $<Zoo_tes> (  &<CivicStructure_tes> ;
          rdf:type [ <CivicStructure> ] ?
       ) ;
       rdf:type [ <Zoo> ] ?
    )
}


